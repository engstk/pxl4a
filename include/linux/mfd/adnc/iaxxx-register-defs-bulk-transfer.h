/*
 * iaxxx-register-defs-bulk-transfer.h
 *
 * Copyright (c) 2018 Knowles, inc.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 and
 * only version 2 as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 */

/**********************************************************
 * This file is generated by running a format script
 * on header files shared by Firmware.
 *
 * DO NOT EDIT.
 *
 *********************************************************/

#ifndef __IAXXX_REGISTER_DEFS_BULK_TRANSFER_H__
#define __IAXXX_REGISTER_DEFS_BULK_TRANSFER_H__

/*** The base address for this set of registers ***/
#define IAXXX_BULK_TRANSFER_REGS_ADDR (0x0b000000)

/*** BULK_TRANSFER_BULK_TRANSFER_SIZE (0x0b000000) ***/
/*
 * Gives the chunk size of bulk transfer protocol
 */
#define IAXXX_BULK_TRANSFER_BULK_TRANSFER_SIZE_ADDR (0x0b000000)
#define IAXXX_BULK_TRANSFER_BULK_TRANSFER_SIZE_MASK_VAL 0xffffffff
#define IAXXX_BULK_TRANSFER_BULK_TRANSFER_SIZE_RMASK_VAL 0xffffffff
#define IAXXX_BULK_TRANSFER_BULK_TRANSFER_SIZE_WMASK_VAL 0x00000000
#define IAXXX_BULK_TRANSFER_BULK_TRANSFER_SIZE_RESET_VAL 0x00000000

/*
 * Chunk size (in words) used for transferring bulk data.
 */
#define IAXXX_BULK_TRANSFER_BULK_TRANSFER_SIZE_SIZE_MASK 0xffffffff
#define IAXXX_BULK_TRANSFER_BULK_TRANSFER_SIZE_SIZE_RESET_VAL 0x0
#define IAXXX_BULK_TRANSFER_BULK_TRANSFER_SIZE_SIZE_POS 0
#define IAXXX_BULK_TRANSFER_BULK_TRANSFER_SIZE_SIZE_SIZE 32

/*** BULK_TRANSFER_BULK_TRANSFER_I_ADDR_BLOCK_0 (0x0b000004) ***/
/*
 * Gives the bulk transfer address for instruction access on block 0.
 */
#define IAXXX_BULK_TRANSFER_BULK_TRANSFER_I_ADDR_BLOCK_0_ADDR (0x0b000004)
#define IAXXX_BULK_TRANSFER_BULK_TRANSFER_I_ADDR_BLOCK_0_MASK_VAL 0xffffffff
#define IAXXX_BULK_TRANSFER_BULK_TRANSFER_I_ADDR_BLOCK_0_RMASK_VAL 0xffffffff
#define IAXXX_BULK_TRANSFER_BULK_TRANSFER_I_ADDR_BLOCK_0_WMASK_VAL 0x00000000
#define IAXXX_BULK_TRANSFER_BULK_TRANSFER_I_ADDR_BLOCK_0_RESET_VAL 0x00000000

/*
 * Virtual address to be used for accessing instruction from block 0.
 */
#define IAXXX_BULK_TRANSFER_BULK_TRANSFER_I_ADDR_BLOCK_0_ADDR_MASK 0xffffffff
#define IAXXX_BULK_TRANSFER_BULK_TRANSFER_I_ADDR_BLOCK_0_ADDR_RESET_VAL 0x0
#define IAXXX_BULK_TRANSFER_BULK_TRANSFER_I_ADDR_BLOCK_0_ADDR_POS 0
#define IAXXX_BULK_TRANSFER_BULK_TRANSFER_I_ADDR_BLOCK_0_ADDR_SIZE 32

/*** BULK_TRANSFER_BULK_TRANSFER_D_ADDR_BLOCK_0 (0x0b000008) ***/
/*
 * Gives the bulk transfer address for data access on block 0.
 */
#define IAXXX_BULK_TRANSFER_BULK_TRANSFER_D_ADDR_BLOCK_0_ADDR (0x0b000008)
#define IAXXX_BULK_TRANSFER_BULK_TRANSFER_D_ADDR_BLOCK_0_MASK_VAL 0xffffffff
#define IAXXX_BULK_TRANSFER_BULK_TRANSFER_D_ADDR_BLOCK_0_RMASK_VAL 0xffffffff
#define IAXXX_BULK_TRANSFER_BULK_TRANSFER_D_ADDR_BLOCK_0_WMASK_VAL 0x00000000
#define IAXXX_BULK_TRANSFER_BULK_TRANSFER_D_ADDR_BLOCK_0_RESET_VAL 0x00000000

/*
 * Virtual address to be used for accessing data from block 0.
 */
#define IAXXX_BULK_TRANSFER_BULK_TRANSFER_D_ADDR_BLOCK_0_ADDR_MASK 0xffffffff
#define IAXXX_BULK_TRANSFER_BULK_TRANSFER_D_ADDR_BLOCK_0_ADDR_RESET_VAL 0x0
#define IAXXX_BULK_TRANSFER_BULK_TRANSFER_D_ADDR_BLOCK_0_ADDR_POS 0
#define IAXXX_BULK_TRANSFER_BULK_TRANSFER_D_ADDR_BLOCK_0_ADDR_SIZE 32

/*** BULK_TRANSFER_BULK_TRANSFER_I_ADDR_BLOCK_1 (0x0b00000c) ***/
/*
 * Gives the bulk transfer address for instruction access on block 1.
 */
#define IAXXX_BULK_TRANSFER_BULK_TRANSFER_I_ADDR_BLOCK_1_ADDR (0x0b00000c)
#define IAXXX_BULK_TRANSFER_BULK_TRANSFER_I_ADDR_BLOCK_1_MASK_VAL 0xffffffff
#define IAXXX_BULK_TRANSFER_BULK_TRANSFER_I_ADDR_BLOCK_1_RMASK_VAL 0xffffffff
#define IAXXX_BULK_TRANSFER_BULK_TRANSFER_I_ADDR_BLOCK_1_WMASK_VAL 0x00000000
#define IAXXX_BULK_TRANSFER_BULK_TRANSFER_I_ADDR_BLOCK_1_RESET_VAL 0x00000000

/*
 * Virtual address to be used for accessing instruction from block 1.
 */
#define IAXXX_BULK_TRANSFER_BULK_TRANSFER_I_ADDR_BLOCK_1_ADDR_MASK 0xffffffff
#define IAXXX_BULK_TRANSFER_BULK_TRANSFER_I_ADDR_BLOCK_1_ADDR_RESET_VAL 0x0
#define IAXXX_BULK_TRANSFER_BULK_TRANSFER_I_ADDR_BLOCK_1_ADDR_POS 0
#define IAXXX_BULK_TRANSFER_BULK_TRANSFER_I_ADDR_BLOCK_1_ADDR_SIZE 32

/*** BULK_TRANSFER_BULK_TRANSFER_D_ADDR_BLOCK_1 (0x0b000010) ***/
/*
 * Gives the bulk transfer address for data access on block 1.
 */
#define IAXXX_BULK_TRANSFER_BULK_TRANSFER_D_ADDR_BLOCK_1_ADDR (0x0b000010)
#define IAXXX_BULK_TRANSFER_BULK_TRANSFER_D_ADDR_BLOCK_1_MASK_VAL 0xffffffff
#define IAXXX_BULK_TRANSFER_BULK_TRANSFER_D_ADDR_BLOCK_1_RMASK_VAL 0xffffffff
#define IAXXX_BULK_TRANSFER_BULK_TRANSFER_D_ADDR_BLOCK_1_WMASK_VAL 0x00000000
#define IAXXX_BULK_TRANSFER_BULK_TRANSFER_D_ADDR_BLOCK_1_RESET_VAL 0x00000000

/*
 * Virtual address to be used for accessing data from block 1.
 */
#define IAXXX_BULK_TRANSFER_BULK_TRANSFER_D_ADDR_BLOCK_1_ADDR_MASK 0xffffffff
#define IAXXX_BULK_TRANSFER_BULK_TRANSFER_D_ADDR_BLOCK_1_ADDR_RESET_VAL 0x0
#define IAXXX_BULK_TRANSFER_BULK_TRANSFER_D_ADDR_BLOCK_1_ADDR_POS 0
#define IAXXX_BULK_TRANSFER_BULK_TRANSFER_D_ADDR_BLOCK_1_ADDR_SIZE 32

/*** BULK_TRANSFER_BULK_TRANSFER_I_ADDR_BLOCK_2 (0x0b000014) ***/
/*
 * Gives the bulk transfer address for instruction access on block 2.
 */
#define IAXXX_BULK_TRANSFER_BULK_TRANSFER_I_ADDR_BLOCK_2_ADDR (0x0b000014)
#define IAXXX_BULK_TRANSFER_BULK_TRANSFER_I_ADDR_BLOCK_2_MASK_VAL 0xffffffff
#define IAXXX_BULK_TRANSFER_BULK_TRANSFER_I_ADDR_BLOCK_2_RMASK_VAL 0xffffffff
#define IAXXX_BULK_TRANSFER_BULK_TRANSFER_I_ADDR_BLOCK_2_WMASK_VAL 0x00000000
#define IAXXX_BULK_TRANSFER_BULK_TRANSFER_I_ADDR_BLOCK_2_RESET_VAL 0x00000000

/*
 * Virtual address to be used for accessing instruction from block 2.
 */
#define IAXXX_BULK_TRANSFER_BULK_TRANSFER_I_ADDR_BLOCK_2_ADDR_MASK 0xffffffff
#define IAXXX_BULK_TRANSFER_BULK_TRANSFER_I_ADDR_BLOCK_2_ADDR_RESET_VAL 0x0
#define IAXXX_BULK_TRANSFER_BULK_TRANSFER_I_ADDR_BLOCK_2_ADDR_POS 0
#define IAXXX_BULK_TRANSFER_BULK_TRANSFER_I_ADDR_BLOCK_2_ADDR_SIZE 32

/*** BULK_TRANSFER_BULK_TRANSFER_D_ADDR_BLOCK_2 (0x0b000018) ***/
/*
 * Gives the bulk transfer address for data access on block 2.
 */
#define IAXXX_BULK_TRANSFER_BULK_TRANSFER_D_ADDR_BLOCK_2_ADDR (0x0b000018)
#define IAXXX_BULK_TRANSFER_BULK_TRANSFER_D_ADDR_BLOCK_2_MASK_VAL 0xffffffff
#define IAXXX_BULK_TRANSFER_BULK_TRANSFER_D_ADDR_BLOCK_2_RMASK_VAL 0xffffffff
#define IAXXX_BULK_TRANSFER_BULK_TRANSFER_D_ADDR_BLOCK_2_WMASK_VAL 0x00000000
#define IAXXX_BULK_TRANSFER_BULK_TRANSFER_D_ADDR_BLOCK_2_RESET_VAL 0x00000000

/*
 * Virtual address to be used for accessing data from block 2.
 */
#define IAXXX_BULK_TRANSFER_BULK_TRANSFER_D_ADDR_BLOCK_2_ADDR_MASK 0xffffffff
#define IAXXX_BULK_TRANSFER_BULK_TRANSFER_D_ADDR_BLOCK_2_ADDR_RESET_VAL 0x0
#define IAXXX_BULK_TRANSFER_BULK_TRANSFER_D_ADDR_BLOCK_2_ADDR_POS 0
#define IAXXX_BULK_TRANSFER_BULK_TRANSFER_D_ADDR_BLOCK_2_ADDR_SIZE 32

/* Number of registers in the module */
#define IAXXX_BULK_TRANSFER_REG_NUM 7

#endif /* __IAXXX_REGISTER_DEFS_BULK_TRANSFER_H__ */
