/*
 * iaxxx-register-defs-gpio.h
 *
 * Copyright (c) 2018 Knowles, inc.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 and
 * only version 2 as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 */

/**********************************************************
 * This file is generated by running a format script
 * on header files shared by Firmware.
 *
 * DO NOT EDIT.
 *
 *********************************************************/
#ifndef __IAXXX_REGISTER_DEFS_GPIO_H__
#define __IAXXX_REGISTER_DEFS_GPIO_H__

/*** The base address for this set of registers ***/
#define IAXXX_GPIO_REGS_ADDR (0x50012000)

/*** GPIO_SWPORTA_DR (0x50012000) ***/
/*
 */
#define IAXXX_GPIO_SWPORTA_DR_ADDR (0x50012000)
#define IAXXX_GPIO_SWPORTA_DR_MASK_VAL 0xffffffff
#define IAXXX_GPIO_SWPORTA_DR_RMASK_VAL 0xffffffff
#define IAXXX_GPIO_SWPORTA_DR_WMASK_VAL 0xffffffff
#define IAXXX_GPIO_SWPORTA_DR_RESET_VAL 0x00000000

/*
 * Values written to this register are output on the COMMA_2 pin if the
 * corresponding data direction bits
 * are set to Output mode and the corresponding control bit are set to
 * Software mode. The value read back is
 * equal to the last value written to the register.
 */
#define IAXXX_GPIO_SWPORTA_DR_COMMA_2_MASK 0x00000001
#define IAXXX_GPIO_SWPORTA_DR_COMMA_2_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTA_DR_COMMA_2_POS 0
#define IAXXX_GPIO_SWPORTA_DR_COMMA_2_SIZE 1

/*
 * Values written to this register are output on the COMMA_3 pin if the
 * corresponding data direction bits
 * are set to Output mode and the corresponding control bit are set to
 * Software mode. The value read back is
 * equal to the last value written to the register.
 */
#define IAXXX_GPIO_SWPORTA_DR_COMMA_3_MASK 0x00000002
#define IAXXX_GPIO_SWPORTA_DR_COMMA_3_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTA_DR_COMMA_3_POS 1
#define IAXXX_GPIO_SWPORTA_DR_COMMA_3_SIZE 1

/*
 * Values written to this register are output on the INTR_EVNT pin if the
 * corresponding data direction bits
 * are set to Output mode and the corresponding control bit are set to
 * Software mode. The value read back is
 * equal to the last value written to the register.
 */
#define IAXXX_GPIO_SWPORTA_DR_INTR_EVNT_MASK 0x00000004
#define IAXXX_GPIO_SWPORTA_DR_INTR_EVNT_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTA_DR_INTR_EVNT_POS 2
#define IAXXX_GPIO_SWPORTA_DR_INTR_EVNT_SIZE 1

/*
 * Values written to this register are output on the CDC_RESET_N pin if the
 * corresponding data direction bits
 * are set to Output mode and the corresponding control bit are set to
 * Software mode. The value read back is
 * equal to the last value written to the register.
 */
#define IAXXX_GPIO_SWPORTA_DR_CDC_RESET_N_MASK 0x00000008
#define IAXXX_GPIO_SWPORTA_DR_CDC_RESET_N_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTA_DR_CDC_RESET_N_POS 3
#define IAXXX_GPIO_SWPORTA_DR_CDC_RESET_N_SIZE 1

/*
 * Values written to this register are output on the CDC_INT_N pin if the
 * corresponding data direction bits
 * are set to Output mode and the corresponding control bit are set to
 * Software mode. The value read back is
 * equal to the last value written to the register.
 */
#define IAXXX_GPIO_SWPORTA_DR_CDC_INT_N_MASK 0x00000010
#define IAXXX_GPIO_SWPORTA_DR_CDC_INT_N_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTA_DR_CDC_INT_N_POS 4
#define IAXXX_GPIO_SWPORTA_DR_CDC_INT_N_SIZE 1

/*
 * Values written to this register are output on the CDC_I2C_SCL pin if the
 * corresponding data direction bits
 * are set to Output mode and the corresponding control bit are set to
 * Software mode. The value read back is
 * equal to the last value written to the register.
 */
#define IAXXX_GPIO_SWPORTA_DR_CDC_I2C_SCL_MASK 0x00000020
#define IAXXX_GPIO_SWPORTA_DR_CDC_I2C_SCL_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTA_DR_CDC_I2C_SCL_POS 5
#define IAXXX_GPIO_SWPORTA_DR_CDC_I2C_SCL_SIZE 1

/*
 * Values written to this register are output on the CDC_I2C_SDA_WR pin if
 * the corresponding data direction bits
 * are set to Output mode and the corresponding control bit are set to
 * Software mode. The value read back is
 * equal to the last value written to the register.
 */
#define IAXXX_GPIO_SWPORTA_DR_CDC_I2C_SDA_WR_MASK 0x00000040
#define IAXXX_GPIO_SWPORTA_DR_CDC_I2C_SDA_WR_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTA_DR_CDC_I2C_SDA_WR_POS 6
#define IAXXX_GPIO_SWPORTA_DR_CDC_I2C_SDA_WR_SIZE 1

/*
 * Values written to this register are output on the CDC_I2C_SDA_RD pin if
 * the corresponding data direction bits
 * are set to Output mode and the corresponding control bit are set to
 * Software mode. The value read back is
 * equal to the last value written to the register.
 */
#define IAXXX_GPIO_SWPORTA_DR_CDC_I2C_SDA_RD_MASK 0x00000080
#define IAXXX_GPIO_SWPORTA_DR_CDC_I2C_SDA_RD_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTA_DR_CDC_I2C_SDA_RD_POS 7
#define IAXXX_GPIO_SWPORTA_DR_CDC_I2C_SDA_RD_SIZE 1

/*
 * Values written to this register are output on the CDC_PWRON pin if the
 * corresponding data direction bits
 * are set to Output mode and the corresponding control bit are set to
 * Software mode. The value read back is
 * equal to the last value written to the register.
 */
#define IAXXX_GPIO_SWPORTA_DR_CDC_PWRON_MASK 0x00000100
#define IAXXX_GPIO_SWPORTA_DR_CDC_PWRON_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTA_DR_CDC_PWRON_POS 8
#define IAXXX_GPIO_SWPORTA_DR_CDC_PWRON_SIZE 1

/*
 * Values written to this register are output on the INTR_API pin if the
 * corresponding data direction bits
 * are set to Output mode and the corresponding control bit are set to
 * Software mode. The value read back is
 * equal to the last value written to the register.
 */
#define IAXXX_GPIO_SWPORTA_DR_INTR_API_MASK 0x00000200
#define IAXXX_GPIO_SWPORTA_DR_INTR_API_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTA_DR_INTR_API_POS 9
#define IAXXX_GPIO_SWPORTA_DR_INTR_API_SIZE 1

/*
 * Values written to this register are output on the COMMA_0 pin if the
 * corresponding data direction bits
 * are set to Output mode and the corresponding control bit are set to
 * Software mode. The value read back is
 * equal to the last value written to the register.
 */
#define IAXXX_GPIO_SWPORTA_DR_COMMA_0_MASK 0x00000400
#define IAXXX_GPIO_SWPORTA_DR_COMMA_0_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTA_DR_COMMA_0_POS 10
#define IAXXX_GPIO_SWPORTA_DR_COMMA_0_SIZE 1

/*
 * Values written to this register are output on the COMMA_1 pin if the
 * corresponding data direction bits
 * are set to Output mode and the corresponding control bit are set to
 * Software mode. The value read back is
 * equal to the last value written to the register.
 */
#define IAXXX_GPIO_SWPORTA_DR_COMMA_1_MASK 0x00000800
#define IAXXX_GPIO_SWPORTA_DR_COMMA_1_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTA_DR_COMMA_1_POS 11
#define IAXXX_GPIO_SWPORTA_DR_COMMA_1_SIZE 1

/*
 * Values written to this register are output on the COMMB_0 pin if the
 * corresponding data direction bits
 * are set to Output mode and the corresponding control bit are set to
 * Software mode. The value read back is
 * equal to the last value written to the register.
 */
#define IAXXX_GPIO_SWPORTA_DR_COMMB_0_MASK 0x00001000
#define IAXXX_GPIO_SWPORTA_DR_COMMB_0_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTA_DR_COMMB_0_POS 12
#define IAXXX_GPIO_SWPORTA_DR_COMMB_0_SIZE 1

/*
 * Values written to this register are output on the COMMB_1 pin if the
 * corresponding data direction bits
 * are set to Output mode and the corresponding control bit are set to
 * Software mode. The value read back is
 * equal to the last value written to the register.
 */
#define IAXXX_GPIO_SWPORTA_DR_COMMB_1_MASK 0x00002000
#define IAXXX_GPIO_SWPORTA_DR_COMMB_1_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTA_DR_COMMB_1_POS 13
#define IAXXX_GPIO_SWPORTA_DR_COMMB_1_SIZE 1

/*
 * Values written to this register are output on the COMMB_2 pin if the
 * corresponding data direction bits
 * are set to Output mode and the corresponding control bit are set to
 * Software mode. The value read back is
 * equal to the last value written to the register.
 */
#define IAXXX_GPIO_SWPORTA_DR_COMMB_2_MASK 0x00004000
#define IAXXX_GPIO_SWPORTA_DR_COMMB_2_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTA_DR_COMMB_2_POS 14
#define IAXXX_GPIO_SWPORTA_DR_COMMB_2_SIZE 1

/*
 * Values written to this register are output on the COMMB_3 pin if the
 * corresponding data direction bits
 * are set to Output mode and the corresponding control bit are set to
 * Software mode. The value read back is
 * equal to the last value written to the register.
 */
#define IAXXX_GPIO_SWPORTA_DR_COMMB_3_MASK 0x00008000
#define IAXXX_GPIO_SWPORTA_DR_COMMB_3_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTA_DR_COMMB_3_POS 15
#define IAXXX_GPIO_SWPORTA_DR_COMMB_3_SIZE 1

/*
 * Values written to this register are output on the PORTA_CLK pin if the
 * corresponding data direction bits
 * are set to Output mode and the corresponding control bit are set to
 * Software mode. The value read back is
 * equal to the last value written to the register.
 */
#define IAXXX_GPIO_SWPORTA_DR_PORTA_CLK_MASK 0x00010000
#define IAXXX_GPIO_SWPORTA_DR_PORTA_CLK_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTA_DR_PORTA_CLK_POS 16
#define IAXXX_GPIO_SWPORTA_DR_PORTA_CLK_SIZE 1

/*
 * Values written to this register are output on the PORTA_FS pin if the
 * corresponding data direction bits
 * are set to Output mode and the corresponding control bit are set to
 * Software mode. The value read back is
 * equal to the last value written to the register.
 */
#define IAXXX_GPIO_SWPORTA_DR_PORTA_FS_MASK 0x00020000
#define IAXXX_GPIO_SWPORTA_DR_PORTA_FS_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTA_DR_PORTA_FS_POS 17
#define IAXXX_GPIO_SWPORTA_DR_PORTA_FS_SIZE 1

/*
 * Values written to this register are output on the PORTA_DI pin if the
 * corresponding data direction bits
 * are set to Output mode and the corresponding control bit are set to
 * Software mode. The value read back is
 * equal to the last value written to the register.
 */
#define IAXXX_GPIO_SWPORTA_DR_PORTA_DI_MASK 0x00040000
#define IAXXX_GPIO_SWPORTA_DR_PORTA_DI_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTA_DR_PORTA_DI_POS 18
#define IAXXX_GPIO_SWPORTA_DR_PORTA_DI_SIZE 1

/*
 * Values written to this register are output on the PORTA_DO pin if the
 * corresponding data direction bits
 * are set to Output mode and the corresponding control bit are set to
 * Software mode. The value read back is
 * equal to the last value written to the register.
 */
#define IAXXX_GPIO_SWPORTA_DR_PORTA_DO_MASK 0x00080000
#define IAXXX_GPIO_SWPORTA_DR_PORTA_DO_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTA_DR_PORTA_DO_POS 19
#define IAXXX_GPIO_SWPORTA_DR_PORTA_DO_SIZE 1

/*
 * Values written to this register are output on the PORTB_CLK pin if the
 * corresponding data direction bits
 * are set to Output mode and the corresponding control bit are set to
 * Software mode. The value read back is
 * equal to the last value written to the register.
 */
#define IAXXX_GPIO_SWPORTA_DR_PORTB_CLK_MASK 0x00100000
#define IAXXX_GPIO_SWPORTA_DR_PORTB_CLK_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTA_DR_PORTB_CLK_POS 20
#define IAXXX_GPIO_SWPORTA_DR_PORTB_CLK_SIZE 1

/*
 * Values written to this register are output on the PORTB_FS pin if the
 * corresponding data direction bits
 * are set to Output mode and the corresponding control bit are set to
 * Software mode. The value read back is
 * equal to the last value written to the register.
 */
#define IAXXX_GPIO_SWPORTA_DR_PORTB_FS_MASK 0x00200000
#define IAXXX_GPIO_SWPORTA_DR_PORTB_FS_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTA_DR_PORTB_FS_POS 21
#define IAXXX_GPIO_SWPORTA_DR_PORTB_FS_SIZE 1

/*
 * Values written to this register are output on the PORTB_DI pin if the
 * corresponding data direction bits
 * are set to Output mode and the corresponding control bit are set to
 * Software mode. The value read back is
 * equal to the last value written to the register.
 */
#define IAXXX_GPIO_SWPORTA_DR_PORTB_DI_MASK 0x00400000
#define IAXXX_GPIO_SWPORTA_DR_PORTB_DI_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTA_DR_PORTB_DI_POS 22
#define IAXXX_GPIO_SWPORTA_DR_PORTB_DI_SIZE 1

/*
 * Values written to this register are output on the PORTB_DO pin if the
 * corresponding data direction bits
 * are set to Output mode and the corresponding control bit are set to
 * Software mode. The value read back is
 * equal to the last value written to the register.
 */
#define IAXXX_GPIO_SWPORTA_DR_PORTB_DO_MASK 0x00800000
#define IAXXX_GPIO_SWPORTA_DR_PORTB_DO_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTA_DR_PORTB_DO_POS 23
#define IAXXX_GPIO_SWPORTA_DR_PORTB_DO_SIZE 1

/*
 * Values written to this register are output on the PORTC_CLK pin if the
 * corresponding data direction bits
 * are set to Output mode and the corresponding control bit are set to
 * Software mode. The value read back is
 * equal to the last value written to the register.
 */
#define IAXXX_GPIO_SWPORTA_DR_PORTC_CLK_MASK 0x01000000
#define IAXXX_GPIO_SWPORTA_DR_PORTC_CLK_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTA_DR_PORTC_CLK_POS 24
#define IAXXX_GPIO_SWPORTA_DR_PORTC_CLK_SIZE 1

/*
 * Values written to this register are output on the PORTC_FS pin if the
 * corresponding data direction bits
 * are set to Output mode and the corresponding control bit are set to
 * Software mode. The value read back is
 * equal to the last value written to the register.
 */
#define IAXXX_GPIO_SWPORTA_DR_PORTC_FS_MASK 0x02000000
#define IAXXX_GPIO_SWPORTA_DR_PORTC_FS_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTA_DR_PORTC_FS_POS 25
#define IAXXX_GPIO_SWPORTA_DR_PORTC_FS_SIZE 1

/*
 * Values written to this register are output on the PORTC_DI pin if the
 * corresponding data direction bits
 * are set to Output mode and the corresponding control bit are set to
 * Software mode. The value read back is
 * equal to the last value written to the register.
 */
#define IAXXX_GPIO_SWPORTA_DR_PORTC_DI_MASK 0x04000000
#define IAXXX_GPIO_SWPORTA_DR_PORTC_DI_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTA_DR_PORTC_DI_POS 26
#define IAXXX_GPIO_SWPORTA_DR_PORTC_DI_SIZE 1

/*
 * Values written to this register are output on the PORTC_DO pin if the
 * corresponding data direction bits
 * are set to Output mode and the corresponding control bit are set to
 * Software mode. The value read back is
 * equal to the last value written to the register.
 */
#define IAXXX_GPIO_SWPORTA_DR_PORTC_DO_MASK 0x08000000
#define IAXXX_GPIO_SWPORTA_DR_PORTC_DO_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTA_DR_PORTC_DO_POS 27
#define IAXXX_GPIO_SWPORTA_DR_PORTC_DO_SIZE 1

/*
 * Values written to this register are output on the PORTD_CLK pin if the
 * corresponding data direction bits
 * are set to Output mode and the corresponding control bit are set to
 * Software mode. The value read back is
 * equal to the last value written to the register.
 */
#define IAXXX_GPIO_SWPORTA_DR_PORTD_CLK_MASK 0x10000000
#define IAXXX_GPIO_SWPORTA_DR_PORTD_CLK_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTA_DR_PORTD_CLK_POS 28
#define IAXXX_GPIO_SWPORTA_DR_PORTD_CLK_SIZE 1

/*
 * Values written to this register are output on the PORTD_FS pin if the
 * corresponding data direction bits
 * are set to Output mode and the corresponding control bit are set to
 * Software mode. The value read back is
 * equal to the last value written to the register.
 */
#define IAXXX_GPIO_SWPORTA_DR_PORTD_FS_MASK 0x20000000
#define IAXXX_GPIO_SWPORTA_DR_PORTD_FS_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTA_DR_PORTD_FS_POS 29
#define IAXXX_GPIO_SWPORTA_DR_PORTD_FS_SIZE 1

/*
 * Values written to this register are output on the PORTD_DI pin if the
 * corresponding data direction bits
 * are set to Output mode and the corresponding control bit are set to
 * Software mode. The value read back is
 * equal to the last value written to the register.
 */
#define IAXXX_GPIO_SWPORTA_DR_PORTD_DI_MASK 0x40000000
#define IAXXX_GPIO_SWPORTA_DR_PORTD_DI_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTA_DR_PORTD_DI_POS 30
#define IAXXX_GPIO_SWPORTA_DR_PORTD_DI_SIZE 1

/*
 * Values written to this register are output on the PORTD_DO pin if the
 * corresponding data direction bits
 * are set to Output mode and the corresponding control bit are set to
 * Software mode. The value read back is
 * equal to the last value written to the register.
 */
#define IAXXX_GPIO_SWPORTA_DR_PORTD_DO_MASK 0x80000000
#define IAXXX_GPIO_SWPORTA_DR_PORTD_DO_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTA_DR_PORTD_DO_POS 31
#define IAXXX_GPIO_SWPORTA_DR_PORTD_DO_SIZE 1

/*** GPIO_SWPORTA_DDR (0x50012004) ***/
/*
 */
#define IAXXX_GPIO_SWPORTA_DDR_ADDR (0x50012004)
#define IAXXX_GPIO_SWPORTA_DDR_MASK_VAL 0xffffffff
#define IAXXX_GPIO_SWPORTA_DDR_RMASK_VAL 0xffffffff
#define IAXXX_GPIO_SWPORTA_DDR_WMASK_VAL 0xffffffff
#define IAXXX_GPIO_SWPORTA_DDR_RESET_VAL 0x00000000

/*
 * Values written to this register independently control the direction of the
 * COMMA_2 data bit.
 * The default direction is Input.
 * 0:Input (default)
 * 1:Output
 */
#define IAXXX_GPIO_SWPORTA_DDR_COMMA_2_MASK 0x00000001
#define IAXXX_GPIO_SWPORTA_DDR_COMMA_2_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTA_DDR_COMMA_2_POS 0
#define IAXXX_GPIO_SWPORTA_DDR_COMMA_2_SIZE 1

/*
 * Values written to this register independently control the direction of the
 * COMMA_3 data bit.
 * The default direction is Input.
 * 0:Input (default)
 * 1:Output
 */
#define IAXXX_GPIO_SWPORTA_DDR_COMMA_3_MASK 0x00000002
#define IAXXX_GPIO_SWPORTA_DDR_COMMA_3_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTA_DDR_COMMA_3_POS 1
#define IAXXX_GPIO_SWPORTA_DDR_COMMA_3_SIZE 1

/*
 * Values written to this register independently control the direction of the
 * INTR_EVNT data bit.
 * The default direction is Input.
 * 0:Input (default)
 * 1:Output
 */
#define IAXXX_GPIO_SWPORTA_DDR_INTR_EVNT_MASK 0x00000004
#define IAXXX_GPIO_SWPORTA_DDR_INTR_EVNT_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTA_DDR_INTR_EVNT_POS 2
#define IAXXX_GPIO_SWPORTA_DDR_INTR_EVNT_SIZE 1

/*
 * Values written to this register independently control the direction of the
 * CDC_RESET_N data bit.
 * The default direction is Input.
 * 0:Input (default)
 * 1:Output
 */
#define IAXXX_GPIO_SWPORTA_DDR_CDC_RESET_N_MASK 0x00000008
#define IAXXX_GPIO_SWPORTA_DDR_CDC_RESET_N_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTA_DDR_CDC_RESET_N_POS 3
#define IAXXX_GPIO_SWPORTA_DDR_CDC_RESET_N_SIZE 1

/*
 * Values written to this register independently control the direction of the
 * CDC_INT_N data bit.
 * The default direction is Input.
 * 0:Input (default)
 * 1:Output
 */
#define IAXXX_GPIO_SWPORTA_DDR_CDC_INT_N_MASK 0x00000010
#define IAXXX_GPIO_SWPORTA_DDR_CDC_INT_N_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTA_DDR_CDC_INT_N_POS 4
#define IAXXX_GPIO_SWPORTA_DDR_CDC_INT_N_SIZE 1

/*
 * Values written to this register independently control the direction of the
 * CDC_I2C_SCL data bit.
 * The default direction is Input.
 * 0:Input (default)
 * 1:Output
 */
#define IAXXX_GPIO_SWPORTA_DDR_CDC_I2C_SCL_MASK 0x00000020
#define IAXXX_GPIO_SWPORTA_DDR_CDC_I2C_SCL_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTA_DDR_CDC_I2C_SCL_POS 5
#define IAXXX_GPIO_SWPORTA_DDR_CDC_I2C_SCL_SIZE 1

/*
 * Values written to this register independently control the direction of the
 * CDC_I2C_SDA_WR data bit.
 * The default direction is Input.
 * 0:Input (default)
 * 1:Output
 */
#define IAXXX_GPIO_SWPORTA_DDR_CDC_I2C_SDA_WR_MASK 0x00000040
#define IAXXX_GPIO_SWPORTA_DDR_CDC_I2C_SDA_WR_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTA_DDR_CDC_I2C_SDA_WR_POS 6
#define IAXXX_GPIO_SWPORTA_DDR_CDC_I2C_SDA_WR_SIZE 1

/*
 * Values written to this register independently control the direction of the
 * CDC_I2C_SDA_RD data bit.
 * The default direction is Input.
 * 0:Input (default)
 * 1:Output
 */
#define IAXXX_GPIO_SWPORTA_DDR_CDC_I2C_SDA_RD_MASK 0x00000080
#define IAXXX_GPIO_SWPORTA_DDR_CDC_I2C_SDA_RD_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTA_DDR_CDC_I2C_SDA_RD_POS 7
#define IAXXX_GPIO_SWPORTA_DDR_CDC_I2C_SDA_RD_SIZE 1

/*
 * Values written to this register independently control the direction of the
 * CDC_PWRON data bit.
 * The default direction is Input.
 * 0:Input (default)
 * 1:Output
 */
#define IAXXX_GPIO_SWPORTA_DDR_CDC_PWRON_MASK 0x00000100
#define IAXXX_GPIO_SWPORTA_DDR_CDC_PWRON_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTA_DDR_CDC_PWRON_POS 8
#define IAXXX_GPIO_SWPORTA_DDR_CDC_PWRON_SIZE 1

/*
 * Values written to this register independently control the direction of the
 * INTR_API data bit.
 * The default direction is Input.
 * 0:Input (default)
 * 1:Output
 */
#define IAXXX_GPIO_SWPORTA_DDR_INTR_API_MASK 0x00000200
#define IAXXX_GPIO_SWPORTA_DDR_INTR_API_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTA_DDR_INTR_API_POS 9
#define IAXXX_GPIO_SWPORTA_DDR_INTR_API_SIZE 1

/*
 * Values written to this register independently control the direction of the
 * COMMA_0 data bit.
 * The default direction is Input.
 * 0:Input (default)
 * 1:Output
 */
#define IAXXX_GPIO_SWPORTA_DDR_COMMA_0_MASK 0x00000400
#define IAXXX_GPIO_SWPORTA_DDR_COMMA_0_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTA_DDR_COMMA_0_POS 10
#define IAXXX_GPIO_SWPORTA_DDR_COMMA_0_SIZE 1

/*
 * Values written to this register independently control the direction of the
 * COMMA_1 data bit.
 * The default direction is Input.
 * 0:Input (default)
 * 1:Output
 */
#define IAXXX_GPIO_SWPORTA_DDR_COMMA_1_MASK 0x00000800
#define IAXXX_GPIO_SWPORTA_DDR_COMMA_1_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTA_DDR_COMMA_1_POS 11
#define IAXXX_GPIO_SWPORTA_DDR_COMMA_1_SIZE 1

/*
 * Values written to this register independently control the direction of the
 * COMMB_0 data bit.
 * The default direction is Input.
 * 0:Input (default)
 * 1:Output
 */
#define IAXXX_GPIO_SWPORTA_DDR_COMMB_0_MASK 0x00001000
#define IAXXX_GPIO_SWPORTA_DDR_COMMB_0_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTA_DDR_COMMB_0_POS 12
#define IAXXX_GPIO_SWPORTA_DDR_COMMB_0_SIZE 1

/*
 * Values written to this register independently control the direction of the
 * COMMB_1 data bit.
 * The default direction is Input.
 * 0:Input (default)
 * 1:Output
 */
#define IAXXX_GPIO_SWPORTA_DDR_COMMB_1_MASK 0x00002000
#define IAXXX_GPIO_SWPORTA_DDR_COMMB_1_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTA_DDR_COMMB_1_POS 13
#define IAXXX_GPIO_SWPORTA_DDR_COMMB_1_SIZE 1

/*
 * Values written to this register independently control the direction of the
 * COMMB_2 data bit.
 * The default direction is Input.
 * 0:Input (default)
 * 1:Output
 */
#define IAXXX_GPIO_SWPORTA_DDR_COMMB_2_MASK 0x00004000
#define IAXXX_GPIO_SWPORTA_DDR_COMMB_2_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTA_DDR_COMMB_2_POS 14
#define IAXXX_GPIO_SWPORTA_DDR_COMMB_2_SIZE 1

/*
 * Values written to this register independently control the direction of the
 * COMMB_3 data bit.
 * The default direction is Input.
 * 0:Input (default)
 * 1:Output
 */
#define IAXXX_GPIO_SWPORTA_DDR_COMMB_3_MASK 0x00008000
#define IAXXX_GPIO_SWPORTA_DDR_COMMB_3_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTA_DDR_COMMB_3_POS 15
#define IAXXX_GPIO_SWPORTA_DDR_COMMB_3_SIZE 1

/*
 * Values written to this register independently control the direction of the
 * PORTA_CLK data bit.
 * The default direction is Input.
 * 0:Input (default)
 * 1:Output
 */
#define IAXXX_GPIO_SWPORTA_DDR_PORTA_CLK_MASK 0x00010000
#define IAXXX_GPIO_SWPORTA_DDR_PORTA_CLK_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTA_DDR_PORTA_CLK_POS 16
#define IAXXX_GPIO_SWPORTA_DDR_PORTA_CLK_SIZE 1

/*
 * Values written to this register independently control the direction of the
 * PORTA_FS data bit.
 * The default direction is Input.
 * 0:Input (default)
 * 1:Output
 */
#define IAXXX_GPIO_SWPORTA_DDR_PORTA_FS_MASK 0x00020000
#define IAXXX_GPIO_SWPORTA_DDR_PORTA_FS_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTA_DDR_PORTA_FS_POS 17
#define IAXXX_GPIO_SWPORTA_DDR_PORTA_FS_SIZE 1

/*
 * Values written to this register independently control the direction of the
 * PORTA_DI data bit.
 * The default direction is Input.
 * 0:Input (default)
 * 1:Output
 */
#define IAXXX_GPIO_SWPORTA_DDR_PORTA_DI_MASK 0x00040000
#define IAXXX_GPIO_SWPORTA_DDR_PORTA_DI_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTA_DDR_PORTA_DI_POS 18
#define IAXXX_GPIO_SWPORTA_DDR_PORTA_DI_SIZE 1

/*
 * Values written to this register independently control the direction of the
 * PORTA_DO data bit.
 * The default direction is Input.
 * 0:Input (default)
 * 1:Output
 */
#define IAXXX_GPIO_SWPORTA_DDR_PORTA_DO_MASK 0x00080000
#define IAXXX_GPIO_SWPORTA_DDR_PORTA_DO_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTA_DDR_PORTA_DO_POS 19
#define IAXXX_GPIO_SWPORTA_DDR_PORTA_DO_SIZE 1

/*
 * Values written to this register independently control the direction of the
 * PORTB_CLK data bit.
 * The default direction is Input.
 * 0:Input (default)
 * 1:Output
 */
#define IAXXX_GPIO_SWPORTA_DDR_PORTB_CLK_MASK 0x00100000
#define IAXXX_GPIO_SWPORTA_DDR_PORTB_CLK_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTA_DDR_PORTB_CLK_POS 20
#define IAXXX_GPIO_SWPORTA_DDR_PORTB_CLK_SIZE 1

/*
 * Values written to this register independently control the direction of the
 * PORTB_FS data bit.
 * The default direction is Input.
 * 0:Input (default)
 * 1:Output
 */
#define IAXXX_GPIO_SWPORTA_DDR_PORTB_FS_MASK 0x00200000
#define IAXXX_GPIO_SWPORTA_DDR_PORTB_FS_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTA_DDR_PORTB_FS_POS 21
#define IAXXX_GPIO_SWPORTA_DDR_PORTB_FS_SIZE 1

/*
 * Values written to this register independently control the direction of the
 * PORTB_DI data bit.
 * The default direction is Input.
 * 0:Input (default)
 * 1:Output
 */
#define IAXXX_GPIO_SWPORTA_DDR_PORTB_DI_MASK 0x00400000
#define IAXXX_GPIO_SWPORTA_DDR_PORTB_DI_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTA_DDR_PORTB_DI_POS 22
#define IAXXX_GPIO_SWPORTA_DDR_PORTB_DI_SIZE 1

/*
 * Values written to this register independently control the direction of the
 * PORTB_DO data bit.
 * The default direction is Input.
 * 0:Input (default)
 * 1:Output
 */
#define IAXXX_GPIO_SWPORTA_DDR_PORTB_DO_MASK 0x00800000
#define IAXXX_GPIO_SWPORTA_DDR_PORTB_DO_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTA_DDR_PORTB_DO_POS 23
#define IAXXX_GPIO_SWPORTA_DDR_PORTB_DO_SIZE 1

/*
 * Values written to this register independently control the direction of the
 * PORTC_CLK data bit.
 * The default direction is Input.
 * 0:Input (default)
 * 1:Output
 */
#define IAXXX_GPIO_SWPORTA_DDR_PORTC_CLK_MASK 0x01000000
#define IAXXX_GPIO_SWPORTA_DDR_PORTC_CLK_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTA_DDR_PORTC_CLK_POS 24
#define IAXXX_GPIO_SWPORTA_DDR_PORTC_CLK_SIZE 1

/*
 * Values written to this register independently control the direction of the
 * PORTC_FS data bit.
 * The default direction is Input.
 * 0:Input (default)
 * 1:Output
 */
#define IAXXX_GPIO_SWPORTA_DDR_PORTC_FS_MASK 0x02000000
#define IAXXX_GPIO_SWPORTA_DDR_PORTC_FS_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTA_DDR_PORTC_FS_POS 25
#define IAXXX_GPIO_SWPORTA_DDR_PORTC_FS_SIZE 1

/*
 * Values written to this register independently control the direction of the
 * PORTC_DI data bit.
 * The default direction is Input.
 * 0:Input (default)
 * 1:Output
 */
#define IAXXX_GPIO_SWPORTA_DDR_PORTC_DI_MASK 0x04000000
#define IAXXX_GPIO_SWPORTA_DDR_PORTC_DI_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTA_DDR_PORTC_DI_POS 26
#define IAXXX_GPIO_SWPORTA_DDR_PORTC_DI_SIZE 1

/*
 * Values written to this register independently control the direction of the
 * PORTC_DO data bit.
 * The default direction is Input.
 * 0:Input (default)
 * 1:Output
 */
#define IAXXX_GPIO_SWPORTA_DDR_PORTC_DO_MASK 0x08000000
#define IAXXX_GPIO_SWPORTA_DDR_PORTC_DO_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTA_DDR_PORTC_DO_POS 27
#define IAXXX_GPIO_SWPORTA_DDR_PORTC_DO_SIZE 1

/*
 * Values written to this register independently control the direction of the
 * PORTD_CLK data bit.
 * The default direction is Input.
 * 0:Input (default)
 * 1:Output
 */
#define IAXXX_GPIO_SWPORTA_DDR_PORTD_CLK_MASK 0x10000000
#define IAXXX_GPIO_SWPORTA_DDR_PORTD_CLK_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTA_DDR_PORTD_CLK_POS 28
#define IAXXX_GPIO_SWPORTA_DDR_PORTD_CLK_SIZE 1

/*
 * Values written to this register independently control the direction of the
 * PORTD_FS data bit.
 * The default direction is Input.
 * 0:Input (default)
 * 1:Output
 */
#define IAXXX_GPIO_SWPORTA_DDR_PORTD_FS_MASK 0x20000000
#define IAXXX_GPIO_SWPORTA_DDR_PORTD_FS_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTA_DDR_PORTD_FS_POS 29
#define IAXXX_GPIO_SWPORTA_DDR_PORTD_FS_SIZE 1

/*
 * Values written to this register independently control the direction of the
 * PORTD_DI data bit.
 * The default direction is Input.
 * 0:Input (default)
 * 1:Output
 */
#define IAXXX_GPIO_SWPORTA_DDR_PORTD_DI_MASK 0x40000000
#define IAXXX_GPIO_SWPORTA_DDR_PORTD_DI_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTA_DDR_PORTD_DI_POS 30
#define IAXXX_GPIO_SWPORTA_DDR_PORTD_DI_SIZE 1

/*
 * Values written to this register independently control the direction of the
 * PORTD_DO data bit.
 * The default direction is Input.
 * 0:Input (default)
 * 1:Output
 */
#define IAXXX_GPIO_SWPORTA_DDR_PORTD_DO_MASK 0x80000000
#define IAXXX_GPIO_SWPORTA_DDR_PORTD_DO_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTA_DDR_PORTD_DO_POS 31
#define IAXXX_GPIO_SWPORTA_DDR_PORTD_DO_SIZE 1

/*** GPIO_SWPORTB_DR (0x5001200c) ***/
/*
 */
#define IAXXX_GPIO_SWPORTB_DR_ADDR (0x5001200c)
#define IAXXX_GPIO_SWPORTB_DR_MASK_VAL 0x1fffffff
#define IAXXX_GPIO_SWPORTB_DR_RMASK_VAL 0x1fffffff
#define IAXXX_GPIO_SWPORTB_DR_WMASK_VAL 0x1fffffff
#define IAXXX_GPIO_SWPORTB_DR_RESET_VAL 0x00000000

/*
 * Values written to this register are output on the SLB_CLK pin if the
 * corresponding data direction bits
 * are set to Output mode and the corresponding control bit are set to
 * Software mode. The value read back is
 * equal to the last value written to the register.
 */
#define IAXXX_GPIO_SWPORTB_DR_SLB_CLK_MASK 0x00000001
#define IAXXX_GPIO_SWPORTB_DR_SLB_CLK_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTB_DR_SLB_CLK_POS 0
#define IAXXX_GPIO_SWPORTB_DR_SLB_CLK_SIZE 1

/*
 * Values written to this register are output on the SLB_DATA pin if the
 * corresponding data direction bits
 * are set to Output mode and the corresponding control bit are set to
 * Software mode. The value read back is
 * equal to the last value written to the register.
 */
#define IAXXX_GPIO_SWPORTB_DR_SLB_DATA_MASK 0x00000002
#define IAXXX_GPIO_SWPORTB_DR_SLB_DATA_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTB_DR_SLB_DATA_POS 1
#define IAXXX_GPIO_SWPORTB_DR_SLB_DATA_SIZE 1

/*
 * Values written to this register are output on the COMMC_0 pin if the
 * corresponding data direction bits
 * are set to Output mode and the corresponding control bit are set to
 * Software mode. The value read back is
 * equal to the last value written to the register.
 */
#define IAXXX_GPIO_SWPORTB_DR_COMMC_0_MASK 0x00000004
#define IAXXX_GPIO_SWPORTB_DR_COMMC_0_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTB_DR_COMMC_0_POS 2
#define IAXXX_GPIO_SWPORTB_DR_COMMC_0_SIZE 1

/*
 * Values written to this register are output on the COMMC_1 pin if the
 * corresponding data direction bits
 * are set to Output mode and the corresponding control bit are set to
 * Software mode. The value read back is
 * equal to the last value written to the register.
 */
#define IAXXX_GPIO_SWPORTB_DR_COMMC_1_MASK 0x00000008
#define IAXXX_GPIO_SWPORTB_DR_COMMC_1_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTB_DR_COMMC_1_POS 3
#define IAXXX_GPIO_SWPORTB_DR_COMMC_1_SIZE 1

/*
 * Values written to this register are output on the COMMC_2 pin if the
 * corresponding data direction bits
 * are set to Output mode and the corresponding control bit are set to
 * Software mode. The value read back is
 * equal to the last value written to the register.
 */
#define IAXXX_GPIO_SWPORTB_DR_COMMC_2_MASK 0x00000010
#define IAXXX_GPIO_SWPORTB_DR_COMMC_2_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTB_DR_COMMC_2_POS 4
#define IAXXX_GPIO_SWPORTB_DR_COMMC_2_SIZE 1

/*
 * Values written to this register are output on the COMMC_3 pin if the
 * corresponding data direction bits
 * are set to Output mode and the corresponding control bit are set to
 * Software mode. The value read back is
 * equal to the last value written to the register.
 */
#define IAXXX_GPIO_SWPORTB_DR_COMMC_3_MASK 0x00000020
#define IAXXX_GPIO_SWPORTB_DR_COMMC_3_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTB_DR_COMMC_3_POS 5
#define IAXXX_GPIO_SWPORTB_DR_COMMC_3_SIZE 1

/*
 * Values written to this register are output on the COMMD_0 pin if the
 * corresponding data direction bits
 * are set to Output mode and the corresponding control bit are set to
 * Software mode. The value read back is
 * equal to the last value written to the register.
 */
#define IAXXX_GPIO_SWPORTB_DR_COMMD_0_MASK 0x00000040
#define IAXXX_GPIO_SWPORTB_DR_COMMD_0_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTB_DR_COMMD_0_POS 6
#define IAXXX_GPIO_SWPORTB_DR_COMMD_0_SIZE 1

/*
 * Values written to this register are output on the COMMD_1 pin if the
 * corresponding data direction bits
 * are set to Output mode and the corresponding control bit are set to
 * Software mode. The value read back is
 * equal to the last value written to the register.
 */
#define IAXXX_GPIO_SWPORTB_DR_COMMD_1_MASK 0x00000080
#define IAXXX_GPIO_SWPORTB_DR_COMMD_1_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTB_DR_COMMD_1_POS 7
#define IAXXX_GPIO_SWPORTB_DR_COMMD_1_SIZE 1

/*
 * Values written to this register are output on the COMMD_2 pin if the
 * corresponding data direction bits
 * are set to Output mode and the corresponding control bit are set to
 * Software mode. The value read back is
 * equal to the last value written to the register.
 */
#define IAXXX_GPIO_SWPORTB_DR_COMMD_2_MASK 0x00000100
#define IAXXX_GPIO_SWPORTB_DR_COMMD_2_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTB_DR_COMMD_2_POS 8
#define IAXXX_GPIO_SWPORTB_DR_COMMD_2_SIZE 1

/*
 * Values written to this register are output on the COMMD_3 pin if the
 * corresponding data direction bits
 * are set to Output mode and the corresponding control bit are set to
 * Software mode. The value read back is
 * equal to the last value written to the register.
 */
#define IAXXX_GPIO_SWPORTB_DR_COMMD_3_MASK 0x00000200
#define IAXXX_GPIO_SWPORTB_DR_COMMD_3_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTB_DR_COMMD_3_POS 9
#define IAXXX_GPIO_SWPORTB_DR_COMMD_3_SIZE 1

/*
 * Values written to this register are output on the COMME_0 pin if the
 * corresponding data direction bits
 * are set to Output mode and the corresponding control bit are set to
 * Software mode. The value read back is
 * equal to the last value written to the register.
 */
#define IAXXX_GPIO_SWPORTB_DR_COMME_0_MASK 0x00000400
#define IAXXX_GPIO_SWPORTB_DR_COMME_0_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTB_DR_COMME_0_POS 10
#define IAXXX_GPIO_SWPORTB_DR_COMME_0_SIZE 1

/*
 * Values written to this register are output on the COMME_1 pin if the
 * corresponding data direction bits
 * are set to Output mode and the corresponding control bit are set to
 * Software mode. The value read back is
 * equal to the last value written to the register.
 */
#define IAXXX_GPIO_SWPORTB_DR_COMME_1_MASK 0x00000800
#define IAXXX_GPIO_SWPORTB_DR_COMME_1_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTB_DR_COMME_1_POS 11
#define IAXXX_GPIO_SWPORTB_DR_COMME_1_SIZE 1

/*
 * Values written to this register are output on the COMME_2 pin if the
 * corresponding data direction bits
 * are set to Output mode and the corresponding control bit are set to
 * Software mode. The value read back is
 * equal to the last value written to the register.
 */
#define IAXXX_GPIO_SWPORTB_DR_COMME_2_MASK 0x00001000
#define IAXXX_GPIO_SWPORTB_DR_COMME_2_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTB_DR_COMME_2_POS 12
#define IAXXX_GPIO_SWPORTB_DR_COMME_2_SIZE 1

/*
 * Values written to this register are output on the COMME_3 pin if the
 * corresponding data direction bits
 * are set to Output mode and the corresponding control bit are set to
 * Software mode. The value read back is
 * equal to the last value written to the register.
 */
#define IAXXX_GPIO_SWPORTB_DR_COMME_3_MASK 0x00002000
#define IAXXX_GPIO_SWPORTB_DR_COMME_3_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTB_DR_COMME_3_POS 13
#define IAXXX_GPIO_SWPORTB_DR_COMME_3_SIZE 1

/*
 * Values written to this register are output on the COMMF_0 pin if the
 * corresponding data direction bits
 * are set to Output mode and the corresponding control bit are set to
 * Software mode. The value read back is
 * equal to the last value written to the register.
 */
#define IAXXX_GPIO_SWPORTB_DR_COMMF_0_MASK 0x00004000
#define IAXXX_GPIO_SWPORTB_DR_COMMF_0_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTB_DR_COMMF_0_POS 14
#define IAXXX_GPIO_SWPORTB_DR_COMMF_0_SIZE 1

/*
 * Values written to this register are output on the COMMF_1 pin if the
 * corresponding data direction bits
 * are set to Output mode and the corresponding control bit are set to
 * Software mode. The value read back is
 * equal to the last value written to the register.
 */
#define IAXXX_GPIO_SWPORTB_DR_COMMF_1_MASK 0x00008000
#define IAXXX_GPIO_SWPORTB_DR_COMMF_1_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTB_DR_COMMF_1_POS 15
#define IAXXX_GPIO_SWPORTB_DR_COMMF_1_SIZE 1

/*
 * Values written to this register are output on the COMMF_2 pin if the
 * corresponding data direction bits
 * are set to Output mode and the corresponding control bit are set to
 * Software mode. The value read back is
 * equal to the last value written to the register.
 */
#define IAXXX_GPIO_SWPORTB_DR_COMMF_2_MASK 0x00010000
#define IAXXX_GPIO_SWPORTB_DR_COMMF_2_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTB_DR_COMMF_2_POS 16
#define IAXXX_GPIO_SWPORTB_DR_COMMF_2_SIZE 1

/*
 * Values written to this register are output on the COMMF_3 pin if the
 * corresponding data direction bits
 * are set to Output mode and the corresponding control bit are set to
 * Software mode. The value read back is
 * equal to the last value written to the register.
 */
#define IAXXX_GPIO_SWPORTB_DR_COMMF_3_MASK 0x00020000
#define IAXXX_GPIO_SWPORTB_DR_COMMF_3_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTB_DR_COMMF_3_POS 17
#define IAXXX_GPIO_SWPORTB_DR_COMMF_3_SIZE 1

/*
 * Values written to this register are output on the PORTE_CLK pin if the
 * corresponding data direction bits
 * are set to Output mode and the corresponding control bit are set to
 * Software mode. The value read back is
 * equal to the last value written to the register.
 */
#define IAXXX_GPIO_SWPORTB_DR_PORTE_CLK_MASK 0x00040000
#define IAXXX_GPIO_SWPORTB_DR_PORTE_CLK_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTB_DR_PORTE_CLK_POS 18
#define IAXXX_GPIO_SWPORTB_DR_PORTE_CLK_SIZE 1

/*
 * Values written to this register are output on the PORTE_FS pin if the
 * corresponding data direction bits
 * are set to Output mode and the corresponding control bit are set to
 * Software mode. The value read back is
 * equal to the last value written to the register.
 */
#define IAXXX_GPIO_SWPORTB_DR_PORTE_FS_MASK 0x00080000
#define IAXXX_GPIO_SWPORTB_DR_PORTE_FS_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTB_DR_PORTE_FS_POS 19
#define IAXXX_GPIO_SWPORTB_DR_PORTE_FS_SIZE 1

/*
 * Values written to this register are output on the PORTE_DI pin if the
 * corresponding data direction bits
 * are set to Output mode and the corresponding control bit are set to
 * Software mode. The value read back is
 * equal to the last value written to the register.
 */
#define IAXXX_GPIO_SWPORTB_DR_PORTE_DI_MASK 0x00100000
#define IAXXX_GPIO_SWPORTB_DR_PORTE_DI_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTB_DR_PORTE_DI_POS 20
#define IAXXX_GPIO_SWPORTB_DR_PORTE_DI_SIZE 1

/*
 * Values written to this register are output on the PORTE_DO pin if the
 * corresponding data direction bits
 * are set to Output mode and the corresponding control bit are set to
 * Software mode. The value read back is
 * equal to the last value written to the register.
 */
#define IAXXX_GPIO_SWPORTB_DR_PORTE_DO_MASK 0x00200000
#define IAXXX_GPIO_SWPORTB_DR_PORTE_DO_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTB_DR_PORTE_DO_POS 21
#define IAXXX_GPIO_SWPORTB_DR_PORTE_DO_SIZE 1

/*
 * This bit is unused
 */
#define IAXXX_GPIO_SWPORTB_DR_UNUSED_GPIO_22_MASK 0x00400000
#define IAXXX_GPIO_SWPORTB_DR_UNUSED_GPIO_22_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTB_DR_UNUSED_GPIO_22_POS 22
#define IAXXX_GPIO_SWPORTB_DR_UNUSED_GPIO_22_SIZE 1

/*
 * This bit is unused
 */
#define IAXXX_GPIO_SWPORTB_DR_UNUSED_GPIO_23_MASK 0x00800000
#define IAXXX_GPIO_SWPORTB_DR_UNUSED_GPIO_23_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTB_DR_UNUSED_GPIO_23_POS 23
#define IAXXX_GPIO_SWPORTB_DR_UNUSED_GPIO_23_SIZE 1

/*
 * Values written to this register are output on the CDC_MCLK pin if the
 * corresponding data direction bits
 * are set to Output mode and the corresponding control bit are set to
 * Software mode. The value read back is
 * equal to the last value written to the register.
 */
#define IAXXX_GPIO_SWPORTB_DR_CDC_MCLK_MASK 0x01000000
#define IAXXX_GPIO_SWPORTB_DR_CDC_MCLK_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTB_DR_CDC_MCLK_POS 24
#define IAXXX_GPIO_SWPORTB_DR_CDC_MCLK_SIZE 1

/*
 * Values written to this register are output on the CDC_PDM0 pin if the
 * corresponding data direction bits
 * are set to Output mode and the corresponding control bit are set to
 * Software mode. The value read back is
 * equal to the last value written to the register.
 */
#define IAXXX_GPIO_SWPORTB_DR_CDC_PDM0_MASK 0x02000000
#define IAXXX_GPIO_SWPORTB_DR_CDC_PDM0_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTB_DR_CDC_PDM0_POS 25
#define IAXXX_GPIO_SWPORTB_DR_CDC_PDM0_SIZE 1

/*
 * Values written to this register are output on the CDC_PDM1 pin if the
 * corresponding data direction bits
 * are set to Output mode and the corresponding control bit are set to
 * Software mode. The value read back is
 * equal to the last value written to the register.
 */
#define IAXXX_GPIO_SWPORTB_DR_CDC_PDM1_MASK 0x04000000
#define IAXXX_GPIO_SWPORTB_DR_CDC_PDM1_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTB_DR_CDC_PDM1_POS 26
#define IAXXX_GPIO_SWPORTB_DR_CDC_PDM1_SIZE 1

/*
 * Values written to this register are output on the CDC_PDM2 pin if the
 * corresponding data direction bits
 * are set to Output mode and the corresponding control bit are set to
 * Software mode. The value read back is
 * equal to the last value written to the register.
 */
#define IAXXX_GPIO_SWPORTB_DR_CDC_PDM2_MASK 0x08000000
#define IAXXX_GPIO_SWPORTB_DR_CDC_PDM2_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTB_DR_CDC_PDM2_POS 27
#define IAXXX_GPIO_SWPORTB_DR_CDC_PDM2_SIZE 1

/*
 * Values written to this register are output on the CLK_IN pin if the
 * corresponding data direction bits
 * are set to Output mode and the corresponding control bit are set to
 * Software mode. The value read back is
 * equal to the last value written to the register.
 */
#define IAXXX_GPIO_SWPORTB_DR_CLK_IN_MASK 0x10000000
#define IAXXX_GPIO_SWPORTB_DR_CLK_IN_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTB_DR_CLK_IN_POS 28
#define IAXXX_GPIO_SWPORTB_DR_CLK_IN_SIZE 1

/*** GPIO_SWPORTB_DDR (0x50012010) ***/
/*
 */
#define IAXXX_GPIO_SWPORTB_DDR_ADDR (0x50012010)
#define IAXXX_GPIO_SWPORTB_DDR_MASK_VAL 0x1fffffff
#define IAXXX_GPIO_SWPORTB_DDR_RMASK_VAL 0x1fffffff
#define IAXXX_GPIO_SWPORTB_DDR_WMASK_VAL 0x1fffffff
#define IAXXX_GPIO_SWPORTB_DDR_RESET_VAL 0x00000000

/*
 * Values written to this register independently control the direction of the
 * SLB_CLK data bit.
 * The default direction is Input.
 * 0:Input (default)
 * 1:Output
 */
#define IAXXX_GPIO_SWPORTB_DDR_SLB_CLK_MASK 0x00000001
#define IAXXX_GPIO_SWPORTB_DDR_SLB_CLK_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTB_DDR_SLB_CLK_POS 0
#define IAXXX_GPIO_SWPORTB_DDR_SLB_CLK_SIZE 1

/*
 * Values written to this register independently control the direction of the
 * SLB_DATA data bit.
 * The default direction is Input.
 * 0:Input (default)
 * 1:Output
 */
#define IAXXX_GPIO_SWPORTB_DDR_SLB_DATA_MASK 0x00000002
#define IAXXX_GPIO_SWPORTB_DDR_SLB_DATA_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTB_DDR_SLB_DATA_POS 1
#define IAXXX_GPIO_SWPORTB_DDR_SLB_DATA_SIZE 1

/*
 * Values written to this register independently control the direction of the
 * COMMC_0 data bit.
 * The default direction is Input.
 * 0:Input (default)
 * 1:Output
 */
#define IAXXX_GPIO_SWPORTB_DDR_COMMC_0_MASK 0x00000004
#define IAXXX_GPIO_SWPORTB_DDR_COMMC_0_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTB_DDR_COMMC_0_POS 2
#define IAXXX_GPIO_SWPORTB_DDR_COMMC_0_SIZE 1

/*
 * Values written to this register independently control the direction of the
 * COMMC_1 data bit.
 * The default direction is Input.
 * 0:Input (default)
 * 1:Output
 */
#define IAXXX_GPIO_SWPORTB_DDR_COMMC_1_MASK 0x00000008
#define IAXXX_GPIO_SWPORTB_DDR_COMMC_1_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTB_DDR_COMMC_1_POS 3
#define IAXXX_GPIO_SWPORTB_DDR_COMMC_1_SIZE 1

/*
 * Values written to this register independently control the direction of the
 * COMMC_2 data bit.
 * The default direction is Input.
 * 0:Input (default)
 * 1:Output
 */
#define IAXXX_GPIO_SWPORTB_DDR_COMMC_2_MASK 0x00000010
#define IAXXX_GPIO_SWPORTB_DDR_COMMC_2_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTB_DDR_COMMC_2_POS 4
#define IAXXX_GPIO_SWPORTB_DDR_COMMC_2_SIZE 1

/*
 * Values written to this register independently control the direction of the
 * COMMC_3 data bit.
 * The default direction is Input.
 * 0:Input (default)
 * 1:Output
 */
#define IAXXX_GPIO_SWPORTB_DDR_COMMC_3_MASK 0x00000020
#define IAXXX_GPIO_SWPORTB_DDR_COMMC_3_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTB_DDR_COMMC_3_POS 5
#define IAXXX_GPIO_SWPORTB_DDR_COMMC_3_SIZE 1

/*
 * Values written to this register independently control the direction of the
 * COMMD_0 data bit.
 * The default direction is Input.
 * 0:Input (default)
 * 1:Output
 */
#define IAXXX_GPIO_SWPORTB_DDR_COMMD_0_MASK 0x00000040
#define IAXXX_GPIO_SWPORTB_DDR_COMMD_0_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTB_DDR_COMMD_0_POS 6
#define IAXXX_GPIO_SWPORTB_DDR_COMMD_0_SIZE 1

/*
 * Values written to this register independently control the direction of the
 * COMMD_1 data bit.
 * The default direction is Input.
 * 0:Input (default)
 * 1:Output
 */
#define IAXXX_GPIO_SWPORTB_DDR_COMMD_1_MASK 0x00000080
#define IAXXX_GPIO_SWPORTB_DDR_COMMD_1_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTB_DDR_COMMD_1_POS 7
#define IAXXX_GPIO_SWPORTB_DDR_COMMD_1_SIZE 1

/*
 * Values written to this register independently control the direction of the
 * COMMD_2 data bit.
 * The default direction is Input.
 * 0:Input (default)
 * 1:Output
 */
#define IAXXX_GPIO_SWPORTB_DDR_COMMD_2_MASK 0x00000100
#define IAXXX_GPIO_SWPORTB_DDR_COMMD_2_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTB_DDR_COMMD_2_POS 8
#define IAXXX_GPIO_SWPORTB_DDR_COMMD_2_SIZE 1

/*
 * Values written to this register independently control the direction of the
 * COMMD_3 data bit.
 * The default direction is Input.
 * 0:Input (default)
 * 1:Output
 */
#define IAXXX_GPIO_SWPORTB_DDR_COMMD_3_MASK 0x00000200
#define IAXXX_GPIO_SWPORTB_DDR_COMMD_3_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTB_DDR_COMMD_3_POS 9
#define IAXXX_GPIO_SWPORTB_DDR_COMMD_3_SIZE 1

/*
 * Values written to this register independently control the direction of the
 * COMME_0 data bit.
 * The default direction is Input.
 * 0:Input (default)
 * 1:Output
 */
#define IAXXX_GPIO_SWPORTB_DDR_COMME_0_MASK 0x00000400
#define IAXXX_GPIO_SWPORTB_DDR_COMME_0_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTB_DDR_COMME_0_POS 10
#define IAXXX_GPIO_SWPORTB_DDR_COMME_0_SIZE 1

/*
 * Values written to this register independently control the direction of the
 * COMME_1 data bit.
 * The default direction is Input.
 * 0:Input (default)
 * 1:Output
 */
#define IAXXX_GPIO_SWPORTB_DDR_COMME_1_MASK 0x00000800
#define IAXXX_GPIO_SWPORTB_DDR_COMME_1_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTB_DDR_COMME_1_POS 11
#define IAXXX_GPIO_SWPORTB_DDR_COMME_1_SIZE 1

/*
 * Values written to this register independently control the direction of the
 * COMME_2 data bit.
 * The default direction is Input.
 * 0:Input (default)
 * 1:Output
 */
#define IAXXX_GPIO_SWPORTB_DDR_COMME_2_MASK 0x00001000
#define IAXXX_GPIO_SWPORTB_DDR_COMME_2_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTB_DDR_COMME_2_POS 12
#define IAXXX_GPIO_SWPORTB_DDR_COMME_2_SIZE 1

/*
 * Values written to this register independently control the direction of the
 * COMME_3 data bit.
 * The default direction is Input.
 * 0:Input (default)
 * 1:Output
 */
#define IAXXX_GPIO_SWPORTB_DDR_COMME_3_MASK 0x00002000
#define IAXXX_GPIO_SWPORTB_DDR_COMME_3_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTB_DDR_COMME_3_POS 13
#define IAXXX_GPIO_SWPORTB_DDR_COMME_3_SIZE 1

/*
 * Values written to this register independently control the direction of the
 * COMMF_0 data bit.
 * The default direction is Input.
 * 0:Input (default)
 * 1:Output
 */
#define IAXXX_GPIO_SWPORTB_DDR_COMMF_0_MASK 0x00004000
#define IAXXX_GPIO_SWPORTB_DDR_COMMF_0_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTB_DDR_COMMF_0_POS 14
#define IAXXX_GPIO_SWPORTB_DDR_COMMF_0_SIZE 1

/*
 * Values written to this register independently control the direction of the
 * COMMF_1 data bit.
 * The default direction is Input.
 * 0:Input (default)
 * 1:Output
 */
#define IAXXX_GPIO_SWPORTB_DDR_COMMF_1_MASK 0x00008000
#define IAXXX_GPIO_SWPORTB_DDR_COMMF_1_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTB_DDR_COMMF_1_POS 15
#define IAXXX_GPIO_SWPORTB_DDR_COMMF_1_SIZE 1

/*
 * Values written to this register independently control the direction of the
 * COMMF_2 data bit.
 * The default direction is Input.
 * 0:Input (default)
 * 1:Output
 */
#define IAXXX_GPIO_SWPORTB_DDR_COMMF_2_MASK 0x00010000
#define IAXXX_GPIO_SWPORTB_DDR_COMMF_2_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTB_DDR_COMMF_2_POS 16
#define IAXXX_GPIO_SWPORTB_DDR_COMMF_2_SIZE 1

/*
 * Values written to this register independently control the direction of the
 * COMMF_3 data bit.
 * The default direction is Input.
 * 0:Input (default)
 * 1:Output
 */
#define IAXXX_GPIO_SWPORTB_DDR_COMMF_3_MASK 0x00020000
#define IAXXX_GPIO_SWPORTB_DDR_COMMF_3_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTB_DDR_COMMF_3_POS 17
#define IAXXX_GPIO_SWPORTB_DDR_COMMF_3_SIZE 1

/*
 * Values written to this register independently control the direction of the
 * PORTE_CLK data bit.
 * The default direction is Input.
 * 0:Input (default)
 * 1:Output
 */
#define IAXXX_GPIO_SWPORTB_DDR_PORTE_CLK_MASK 0x00040000
#define IAXXX_GPIO_SWPORTB_DDR_PORTE_CLK_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTB_DDR_PORTE_CLK_POS 18
#define IAXXX_GPIO_SWPORTB_DDR_PORTE_CLK_SIZE 1

/*
 * Values written to this register independently control the direction of the
 * PORTE_FS data bit.
 * The default direction is Input.
 * 0:Input (default)
 * 1:Output
 */
#define IAXXX_GPIO_SWPORTB_DDR_PORTE_FS_MASK 0x00080000
#define IAXXX_GPIO_SWPORTB_DDR_PORTE_FS_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTB_DDR_PORTE_FS_POS 19
#define IAXXX_GPIO_SWPORTB_DDR_PORTE_FS_SIZE 1

/*
 * Values written to this register independently control the direction of the
 * PORTE_DI data bit.
 * The default direction is Input.
 * 0:Input (default)
 * 1:Output
 */
#define IAXXX_GPIO_SWPORTB_DDR_PORTE_DI_MASK 0x00100000
#define IAXXX_GPIO_SWPORTB_DDR_PORTE_DI_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTB_DDR_PORTE_DI_POS 20
#define IAXXX_GPIO_SWPORTB_DDR_PORTE_DI_SIZE 1

/*
 * Values written to this register independently control the direction of the
 * PORTE_DO data bit.
 * The default direction is Input.
 * 0:Input (default)
 * 1:Output
 */
#define IAXXX_GPIO_SWPORTB_DDR_PORTE_DO_MASK 0x00200000
#define IAXXX_GPIO_SWPORTB_DDR_PORTE_DO_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTB_DDR_PORTE_DO_POS 21
#define IAXXX_GPIO_SWPORTB_DDR_PORTE_DO_SIZE 1

/*
 * This bit is unused
 */
#define IAXXX_GPIO_SWPORTB_DDR_UNUSED_GPIO_22_MASK 0x00400000
#define IAXXX_GPIO_SWPORTB_DDR_UNUSED_GPIO_22_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTB_DDR_UNUSED_GPIO_22_POS 22
#define IAXXX_GPIO_SWPORTB_DDR_UNUSED_GPIO_22_SIZE 1

/*
 * This bit is unused
 */
#define IAXXX_GPIO_SWPORTB_DDR_UNUSED_GPIO_23_MASK 0x00800000
#define IAXXX_GPIO_SWPORTB_DDR_UNUSED_GPIO_23_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTB_DDR_UNUSED_GPIO_23_POS 23
#define IAXXX_GPIO_SWPORTB_DDR_UNUSED_GPIO_23_SIZE 1

/*
 * Values written to this register independently control the direction of the
 * CDC_MCLK data bit.
 * The default direction is Input.
 * 0:Input (default)
 * 1:Output
 */
#define IAXXX_GPIO_SWPORTB_DDR_CDC_MCLK_MASK 0x01000000
#define IAXXX_GPIO_SWPORTB_DDR_CDC_MCLK_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTB_DDR_CDC_MCLK_POS 24
#define IAXXX_GPIO_SWPORTB_DDR_CDC_MCLK_SIZE 1

/*
 * Values written to this register independently control the direction of the
 * CDC_PDM0 data bit.
 * The default direction is Input.
 * 0:Input (default)
 * 1:Output
 */
#define IAXXX_GPIO_SWPORTB_DDR_CDC_PDM0_MASK 0x02000000
#define IAXXX_GPIO_SWPORTB_DDR_CDC_PDM0_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTB_DDR_CDC_PDM0_POS 25
#define IAXXX_GPIO_SWPORTB_DDR_CDC_PDM0_SIZE 1

/*
 * Values written to this register independently control the direction of the
 * CDC_PDM1 data bit.
 * The default direction is Input.
 * 0:Input (default)
 * 1:Output
 */
#define IAXXX_GPIO_SWPORTB_DDR_CDC_PDM1_MASK 0x04000000
#define IAXXX_GPIO_SWPORTB_DDR_CDC_PDM1_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTB_DDR_CDC_PDM1_POS 26
#define IAXXX_GPIO_SWPORTB_DDR_CDC_PDM1_SIZE 1

/*
 * Values written to this register independently control the direction of the
 * CDC_PDM2 data bit.
 * The default direction is Input.
 * 0:Input (default)
 * 1:Output
 */
#define IAXXX_GPIO_SWPORTB_DDR_CDC_PDM2_MASK 0x08000000
#define IAXXX_GPIO_SWPORTB_DDR_CDC_PDM2_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTB_DDR_CDC_PDM2_POS 27
#define IAXXX_GPIO_SWPORTB_DDR_CDC_PDM2_SIZE 1

/*
 * Values written to this register independently control the direction of the
 * CLK_IN data bit.
 * The default direction is Input.
 * 0:Input (default)
 * 1:Output
 */
#define IAXXX_GPIO_SWPORTB_DDR_CLK_IN_MASK 0x10000000
#define IAXXX_GPIO_SWPORTB_DDR_CLK_IN_RESET_VAL 0x0
#define IAXXX_GPIO_SWPORTB_DDR_CLK_IN_POS 28
#define IAXXX_GPIO_SWPORTB_DDR_CLK_IN_SIZE 1

/*** GPIO_INTEN (0x50012030) ***/
/*
 */
#define IAXXX_GPIO_INTEN_ADDR (0x50012030)
#define IAXXX_GPIO_INTEN_MASK_VAL 0xffffffff
#define IAXXX_GPIO_INTEN_RMASK_VAL 0xffffffff
#define IAXXX_GPIO_INTEN_WMASK_VAL 0xffffffff
#define IAXXX_GPIO_INTEN_RESET_VAL 0x00000000

/*
 * Allows COMMA_2 bit of Port A to be configured for interrupts. By default
 * thegeneration of interrupts is disabled. Whenever a 1 is written to a bit
 * of this register, it configures the corresponding bit of Port A to become
 * an interrupt; Otherwise Port A operates as a normal GPIO signal.
 * Interrupts are disabled on the corresponding bit of Port A if the
 * corresponding data direction register is set to output or if Port A mode
 * is set to Hardware.
 * 0:Configure Port A bit as normal GPIO (default)
 * 1:Configure Port A bit as an interrupt
 */
#define IAXXX_GPIO_INTEN_COMMA_2_MASK 0x00000001
#define IAXXX_GPIO_INTEN_COMMA_2_RESET_VAL 0x0
#define IAXXX_GPIO_INTEN_COMMA_2_POS 0
#define IAXXX_GPIO_INTEN_COMMA_2_SIZE 1

/*
 * Allows COMMA_3 bit of Port A to be configured for interrupts. By default
 * thegeneration of interrupts is disabled. Whenever a 1 is written to a bit
 * of this register, it configures the corresponding bit of Port A to become
 * an interrupt; Otherwise Port A operates as a normal GPIO signal.
 * Interrupts are disabled on the corresponding bit of Port A if the
 * corresponding data direction register is set to output or if Port A mode
 * is set to Hardware.
 * 0:Configure Port A bit as normal GPIO (default)
 * 1:Configure Port A bit as an interrupt
 */
#define IAXXX_GPIO_INTEN_COMMA_3_MASK 0x00000002
#define IAXXX_GPIO_INTEN_COMMA_3_RESET_VAL 0x0
#define IAXXX_GPIO_INTEN_COMMA_3_POS 1
#define IAXXX_GPIO_INTEN_COMMA_3_SIZE 1

/*
 * Allows INTR_EVNT bit of Port A to be configured for interrupts. By default
 * thegeneration of interrupts is disabled. Whenever a 1 is written to a bit
 * of this register, it configures the corresponding bit of Port A to become
 * an interrupt; Otherwise Port A operates as a normal GPIO signal.
 * Interrupts are disabled on the corresponding bit of Port A if the
 * corresponding data direction register is set to output or if Port A mode
 * is set to Hardware.
 * 0:Configure Port A bit as normal GPIO (default)
 * 1:Configure Port A bit as an interrupt
 */
#define IAXXX_GPIO_INTEN_INTR_EVNT_MASK 0x00000004
#define IAXXX_GPIO_INTEN_INTR_EVNT_RESET_VAL 0x0
#define IAXXX_GPIO_INTEN_INTR_EVNT_POS 2
#define IAXXX_GPIO_INTEN_INTR_EVNT_SIZE 1

/*
 * Allows CDC_RESET_N bit of Port A to be configured for interrupts. By
 * default thegeneration of interrupts is disabled. Whenever a 1 is written
 * to a bit
 * of this register, it configures the corresponding bit of Port A to become
 * an interrupt; Otherwise Port A operates as a normal GPIO signal.
 * Interrupts are disabled on the corresponding bit of Port A if the
 * corresponding data direction register is set to output or if Port A mode
 * is set to Hardware.
 * 0:Configure Port A bit as normal GPIO (default)
 * 1:Configure Port A bit as an interrupt
 */
#define IAXXX_GPIO_INTEN_CDC_RESET_N_MASK 0x00000008
#define IAXXX_GPIO_INTEN_CDC_RESET_N_RESET_VAL 0x0
#define IAXXX_GPIO_INTEN_CDC_RESET_N_POS 3
#define IAXXX_GPIO_INTEN_CDC_RESET_N_SIZE 1

/*
 * Allows CDC_INT_N bit of Port A to be configured for interrupts. By default
 * thegeneration of interrupts is disabled. Whenever a 1 is written to a bit
 * of this register, it configures the corresponding bit of Port A to become
 * an interrupt; Otherwise Port A operates as a normal GPIO signal.
 * Interrupts are disabled on the corresponding bit of Port A if the
 * corresponding data direction register is set to output or if Port A mode
 * is set to Hardware.
 * 0:Configure Port A bit as normal GPIO (default)
 * 1:Configure Port A bit as an interrupt
 */
#define IAXXX_GPIO_INTEN_CDC_INT_N_MASK 0x00000010
#define IAXXX_GPIO_INTEN_CDC_INT_N_RESET_VAL 0x0
#define IAXXX_GPIO_INTEN_CDC_INT_N_POS 4
#define IAXXX_GPIO_INTEN_CDC_INT_N_SIZE 1

/*
 * Allows CDC_I2C_SCL bit of Port A to be configured for interrupts. By
 * default thegeneration of interrupts is disabled. Whenever a 1 is written
 * to a bit
 * of this register, it configures the corresponding bit of Port A to become
 * an interrupt; Otherwise Port A operates as a normal GPIO signal.
 * Interrupts are disabled on the corresponding bit of Port A if the
 * corresponding data direction register is set to output or if Port A mode
 * is set to Hardware.
 * 0:Configure Port A bit as normal GPIO (default)
 * 1:Configure Port A bit as an interrupt
 */
#define IAXXX_GPIO_INTEN_CDC_I2C_SCL_MASK 0x00000020
#define IAXXX_GPIO_INTEN_CDC_I2C_SCL_RESET_VAL 0x0
#define IAXXX_GPIO_INTEN_CDC_I2C_SCL_POS 5
#define IAXXX_GPIO_INTEN_CDC_I2C_SCL_SIZE 1

/*
 * Allows CDC_I2C_SDA_WR bit of Port A to be configured for interrupts. By
 * default thegeneration of interrupts is disabled. Whenever a 1 is written
 * to a bit
 * of this register, it configures the corresponding bit of Port A to become
 * an interrupt; Otherwise Port A operates as a normal GPIO signal.
 * Interrupts are disabled on the corresponding bit of Port A if the
 * corresponding data direction register is set to output or if Port A mode
 * is set to Hardware.
 * 0:Configure Port A bit as normal GPIO (default)
 * 1:Configure Port A bit as an interrupt
 */
#define IAXXX_GPIO_INTEN_CDC_I2C_SDA_WR_MASK 0x00000040
#define IAXXX_GPIO_INTEN_CDC_I2C_SDA_WR_RESET_VAL 0x0
#define IAXXX_GPIO_INTEN_CDC_I2C_SDA_WR_POS 6
#define IAXXX_GPIO_INTEN_CDC_I2C_SDA_WR_SIZE 1

/*
 * Allows CDC_I2C_SDA_RD bit of Port A to be configured for interrupts. By
 * default thegeneration of interrupts is disabled. Whenever a 1 is written
 * to a bit
 * of this register, it configures the corresponding bit of Port A to become
 * an interrupt; Otherwise Port A operates as a normal GPIO signal.
 * Interrupts are disabled on the corresponding bit of Port A if the
 * corresponding data direction register is set to output or if Port A mode
 * is set to Hardware.
 * 0:Configure Port A bit as normal GPIO (default)
 * 1:Configure Port A bit as an interrupt
 */
#define IAXXX_GPIO_INTEN_CDC_I2C_SDA_RD_MASK 0x00000080
#define IAXXX_GPIO_INTEN_CDC_I2C_SDA_RD_RESET_VAL 0x0
#define IAXXX_GPIO_INTEN_CDC_I2C_SDA_RD_POS 7
#define IAXXX_GPIO_INTEN_CDC_I2C_SDA_RD_SIZE 1

/*
 * Allows CDC_PWRON bit of Port A to be configured for interrupts. By default
 * thegeneration of interrupts is disabled. Whenever a 1 is written to a bit
 * of this register, it configures the corresponding bit of Port A to become
 * an interrupt; Otherwise Port A operates as a normal GPIO signal.
 * Interrupts are disabled on the corresponding bit of Port A if the
 * corresponding data direction register is set to output or if Port A mode
 * is set to Hardware.
 * 0:Configure Port A bit as normal GPIO (default)
 * 1:Configure Port A bit as an interrupt
 */
#define IAXXX_GPIO_INTEN_CDC_PWRON_MASK 0x00000100
#define IAXXX_GPIO_INTEN_CDC_PWRON_RESET_VAL 0x0
#define IAXXX_GPIO_INTEN_CDC_PWRON_POS 8
#define IAXXX_GPIO_INTEN_CDC_PWRON_SIZE 1

/*
 * Allows INTR_API bit of Port A to be configured for interrupts. By default
 * thegeneration of interrupts is disabled. Whenever a 1 is written to a bit
 * of this register, it configures the corresponding bit of Port A to become
 * an interrupt; Otherwise Port A operates as a normal GPIO signal.
 * Interrupts are disabled on the corresponding bit of Port A if the
 * corresponding data direction register is set to output or if Port A mode
 * is set to Hardware.
 * 0:Configure Port A bit as normal GPIO (default)
 * 1:Configure Port A bit as an interrupt
 */
#define IAXXX_GPIO_INTEN_INTR_API_MASK 0x00000200
#define IAXXX_GPIO_INTEN_INTR_API_RESET_VAL 0x0
#define IAXXX_GPIO_INTEN_INTR_API_POS 9
#define IAXXX_GPIO_INTEN_INTR_API_SIZE 1

/*
 * Allows COMMA_0 bit of Port A to be configured for interrupts. By default
 * thegeneration of interrupts is disabled. Whenever a 1 is written to a bit
 * of this register, it configures the corresponding bit of Port A to become
 * an interrupt; Otherwise Port A operates as a normal GPIO signal.
 * Interrupts are disabled on the corresponding bit of Port A if the
 * corresponding data direction register is set to output or if Port A mode
 * is set to Hardware.
 * 0:Configure Port A bit as normal GPIO (default)
 * 1:Configure Port A bit as an interrupt
 */
#define IAXXX_GPIO_INTEN_COMMA_0_MASK 0x00000400
#define IAXXX_GPIO_INTEN_COMMA_0_RESET_VAL 0x0
#define IAXXX_GPIO_INTEN_COMMA_0_POS 10
#define IAXXX_GPIO_INTEN_COMMA_0_SIZE 1

/*
 * Allows COMMA_1 bit of Port A to be configured for interrupts. By default
 * thegeneration of interrupts is disabled. Whenever a 1 is written to a bit
 * of this register, it configures the corresponding bit of Port A to become
 * an interrupt; Otherwise Port A operates as a normal GPIO signal.
 * Interrupts are disabled on the corresponding bit of Port A if the
 * corresponding data direction register is set to output or if Port A mode
 * is set to Hardware.
 * 0:Configure Port A bit as normal GPIO (default)
 * 1:Configure Port A bit as an interrupt
 */
#define IAXXX_GPIO_INTEN_COMMA_1_MASK 0x00000800
#define IAXXX_GPIO_INTEN_COMMA_1_RESET_VAL 0x0
#define IAXXX_GPIO_INTEN_COMMA_1_POS 11
#define IAXXX_GPIO_INTEN_COMMA_1_SIZE 1

/*
 * Allows COMMB_0 bit of Port A to be configured for interrupts. By default
 * thegeneration of interrupts is disabled. Whenever a 1 is written to a bit
 * of this register, it configures the corresponding bit of Port A to become
 * an interrupt; Otherwise Port A operates as a normal GPIO signal.
 * Interrupts are disabled on the corresponding bit of Port A if the
 * corresponding data direction register is set to output or if Port A mode
 * is set to Hardware.
 * 0:Configure Port A bit as normal GPIO (default)
 * 1:Configure Port A bit as an interrupt
 */
#define IAXXX_GPIO_INTEN_COMMB_0_MASK 0x00001000
#define IAXXX_GPIO_INTEN_COMMB_0_RESET_VAL 0x0
#define IAXXX_GPIO_INTEN_COMMB_0_POS 12
#define IAXXX_GPIO_INTEN_COMMB_0_SIZE 1

/*
 * Allows COMMB_1 bit of Port A to be configured for interrupts. By default
 * thegeneration of interrupts is disabled. Whenever a 1 is written to a bit
 * of this register, it configures the corresponding bit of Port A to become
 * an interrupt; Otherwise Port A operates as a normal GPIO signal.
 * Interrupts are disabled on the corresponding bit of Port A if the
 * corresponding data direction register is set to output or if Port A mode
 * is set to Hardware.
 * 0:Configure Port A bit as normal GPIO (default)
 * 1:Configure Port A bit as an interrupt
 */
#define IAXXX_GPIO_INTEN_COMMB_1_MASK 0x00002000
#define IAXXX_GPIO_INTEN_COMMB_1_RESET_VAL 0x0
#define IAXXX_GPIO_INTEN_COMMB_1_POS 13
#define IAXXX_GPIO_INTEN_COMMB_1_SIZE 1

/*
 * Allows COMMB_2 bit of Port A to be configured for interrupts. By default
 * thegeneration of interrupts is disabled. Whenever a 1 is written to a bit
 * of this register, it configures the corresponding bit of Port A to become
 * an interrupt; Otherwise Port A operates as a normal GPIO signal.
 * Interrupts are disabled on the corresponding bit of Port A if the
 * corresponding data direction register is set to output or if Port A mode
 * is set to Hardware.
 * 0:Configure Port A bit as normal GPIO (default)
 * 1:Configure Port A bit as an interrupt
 */
#define IAXXX_GPIO_INTEN_COMMB_2_MASK 0x00004000
#define IAXXX_GPIO_INTEN_COMMB_2_RESET_VAL 0x0
#define IAXXX_GPIO_INTEN_COMMB_2_POS 14
#define IAXXX_GPIO_INTEN_COMMB_2_SIZE 1

/*
 * Allows COMMB_3 bit of Port A to be configured for interrupts. By default
 * thegeneration of interrupts is disabled. Whenever a 1 is written to a bit
 * of this register, it configures the corresponding bit of Port A to become
 * an interrupt; Otherwise Port A operates as a normal GPIO signal.
 * Interrupts are disabled on the corresponding bit of Port A if the
 * corresponding data direction register is set to output or if Port A mode
 * is set to Hardware.
 * 0:Configure Port A bit as normal GPIO (default)
 * 1:Configure Port A bit as an interrupt
 */
#define IAXXX_GPIO_INTEN_COMMB_3_MASK 0x00008000
#define IAXXX_GPIO_INTEN_COMMB_3_RESET_VAL 0x0
#define IAXXX_GPIO_INTEN_COMMB_3_POS 15
#define IAXXX_GPIO_INTEN_COMMB_3_SIZE 1

/*
 * Allows PORTA_CLK bit of Port A to be configured for interrupts. By default
 * thegeneration of interrupts is disabled. Whenever a 1 is written to a bit
 * of this register, it configures the corresponding bit of Port A to become
 * an interrupt; Otherwise Port A operates as a normal GPIO signal.
 * Interrupts are disabled on the corresponding bit of Port A if the
 * corresponding data direction register is set to output or if Port A mode
 * is set to Hardware.
 * 0:Configure Port A bit as normal GPIO (default)
 * 1:Configure Port A bit as an interrupt
 */
#define IAXXX_GPIO_INTEN_PORTA_CLK_MASK 0x00010000
#define IAXXX_GPIO_INTEN_PORTA_CLK_RESET_VAL 0x0
#define IAXXX_GPIO_INTEN_PORTA_CLK_POS 16
#define IAXXX_GPIO_INTEN_PORTA_CLK_SIZE 1

/*
 * Allows PORTA_FS bit of Port A to be configured for interrupts. By default
 * thegeneration of interrupts is disabled. Whenever a 1 is written to a bit
 * of this register, it configures the corresponding bit of Port A to become
 * an interrupt; Otherwise Port A operates as a normal GPIO signal.
 * Interrupts are disabled on the corresponding bit of Port A if the
 * corresponding data direction register is set to output or if Port A mode
 * is set to Hardware.
 * 0:Configure Port A bit as normal GPIO (default)
 * 1:Configure Port A bit as an interrupt
 */
#define IAXXX_GPIO_INTEN_PORTA_FS_MASK 0x00020000
#define IAXXX_GPIO_INTEN_PORTA_FS_RESET_VAL 0x0
#define IAXXX_GPIO_INTEN_PORTA_FS_POS 17
#define IAXXX_GPIO_INTEN_PORTA_FS_SIZE 1

/*
 * Allows PORTA_DI bit of Port A to be configured for interrupts. By default
 * thegeneration of interrupts is disabled. Whenever a 1 is written to a bit
 * of this register, it configures the corresponding bit of Port A to become
 * an interrupt; Otherwise Port A operates as a normal GPIO signal.
 * Interrupts are disabled on the corresponding bit of Port A if the
 * corresponding data direction register is set to output or if Port A mode
 * is set to Hardware.
 * 0:Configure Port A bit as normal GPIO (default)
 * 1:Configure Port A bit as an interrupt
 */
#define IAXXX_GPIO_INTEN_PORTA_DI_MASK 0x00040000
#define IAXXX_GPIO_INTEN_PORTA_DI_RESET_VAL 0x0
#define IAXXX_GPIO_INTEN_PORTA_DI_POS 18
#define IAXXX_GPIO_INTEN_PORTA_DI_SIZE 1

/*
 * Allows PORTA_DO bit of Port A to be configured for interrupts. By default
 * thegeneration of interrupts is disabled. Whenever a 1 is written to a bit
 * of this register, it configures the corresponding bit of Port A to become
 * an interrupt; Otherwise Port A operates as a normal GPIO signal.
 * Interrupts are disabled on the corresponding bit of Port A if the
 * corresponding data direction register is set to output or if Port A mode
 * is set to Hardware.
 * 0:Configure Port A bit as normal GPIO (default)
 * 1:Configure Port A bit as an interrupt
 */
#define IAXXX_GPIO_INTEN_PORTA_DO_MASK 0x00080000
#define IAXXX_GPIO_INTEN_PORTA_DO_RESET_VAL 0x0
#define IAXXX_GPIO_INTEN_PORTA_DO_POS 19
#define IAXXX_GPIO_INTEN_PORTA_DO_SIZE 1

/*
 * Allows PORTB_CLK bit of Port A to be configured for interrupts. By default
 * thegeneration of interrupts is disabled. Whenever a 1 is written to a bit
 * of this register, it configures the corresponding bit of Port A to become
 * an interrupt; Otherwise Port A operates as a normal GPIO signal.
 * Interrupts are disabled on the corresponding bit of Port A if the
 * corresponding data direction register is set to output or if Port A mode
 * is set to Hardware.
 * 0:Configure Port A bit as normal GPIO (default)
 * 1:Configure Port A bit as an interrupt
 */
#define IAXXX_GPIO_INTEN_PORTB_CLK_MASK 0x00100000
#define IAXXX_GPIO_INTEN_PORTB_CLK_RESET_VAL 0x0
#define IAXXX_GPIO_INTEN_PORTB_CLK_POS 20
#define IAXXX_GPIO_INTEN_PORTB_CLK_SIZE 1

/*
 * Allows PORTB_FS bit of Port A to be configured for interrupts. By default
 * thegeneration of interrupts is disabled. Whenever a 1 is written to a bit
 * of this register, it configures the corresponding bit of Port A to become
 * an interrupt; Otherwise Port A operates as a normal GPIO signal.
 * Interrupts are disabled on the corresponding bit of Port A if the
 * corresponding data direction register is set to output or if Port A mode
 * is set to Hardware.
 * 0:Configure Port A bit as normal GPIO (default)
 * 1:Configure Port A bit as an interrupt
 */
#define IAXXX_GPIO_INTEN_PORTB_FS_MASK 0x00200000
#define IAXXX_GPIO_INTEN_PORTB_FS_RESET_VAL 0x0
#define IAXXX_GPIO_INTEN_PORTB_FS_POS 21
#define IAXXX_GPIO_INTEN_PORTB_FS_SIZE 1

/*
 * Allows PORTB_DI bit of Port A to be configured for interrupts. By default
 * thegeneration of interrupts is disabled. Whenever a 1 is written to a bit
 * of this register, it configures the corresponding bit of Port A to become
 * an interrupt; Otherwise Port A operates as a normal GPIO signal.
 * Interrupts are disabled on the corresponding bit of Port A if the
 * corresponding data direction register is set to output or if Port A mode
 * is set to Hardware.
 * 0:Configure Port A bit as normal GPIO (default)
 * 1:Configure Port A bit as an interrupt
 */
#define IAXXX_GPIO_INTEN_PORTB_DI_MASK 0x00400000
#define IAXXX_GPIO_INTEN_PORTB_DI_RESET_VAL 0x0
#define IAXXX_GPIO_INTEN_PORTB_DI_POS 22
#define IAXXX_GPIO_INTEN_PORTB_DI_SIZE 1

/*
 * Allows PORTB_DO bit of Port A to be configured for interrupts. By default
 * thegeneration of interrupts is disabled. Whenever a 1 is written to a bit
 * of this register, it configures the corresponding bit of Port A to become
 * an interrupt; Otherwise Port A operates as a normal GPIO signal.
 * Interrupts are disabled on the corresponding bit of Port A if the
 * corresponding data direction register is set to output or if Port A mode
 * is set to Hardware.
 * 0:Configure Port A bit as normal GPIO (default)
 * 1:Configure Port A bit as an interrupt
 */
#define IAXXX_GPIO_INTEN_PORTB_DO_MASK 0x00800000
#define IAXXX_GPIO_INTEN_PORTB_DO_RESET_VAL 0x0
#define IAXXX_GPIO_INTEN_PORTB_DO_POS 23
#define IAXXX_GPIO_INTEN_PORTB_DO_SIZE 1

/*
 * Allows PORTC_CLK bit of Port A to be configured for interrupts. By default
 * thegeneration of interrupts is disabled. Whenever a 1 is written to a bit
 * of this register, it configures the corresponding bit of Port A to become
 * an interrupt; Otherwise Port A operates as a normal GPIO signal.
 * Interrupts are disabled on the corresponding bit of Port A if the
 * corresponding data direction register is set to output or if Port A mode
 * is set to Hardware.
 * 0:Configure Port A bit as normal GPIO (default)
 * 1:Configure Port A bit as an interrupt
 */
#define IAXXX_GPIO_INTEN_PORTC_CLK_MASK 0x01000000
#define IAXXX_GPIO_INTEN_PORTC_CLK_RESET_VAL 0x0
#define IAXXX_GPIO_INTEN_PORTC_CLK_POS 24
#define IAXXX_GPIO_INTEN_PORTC_CLK_SIZE 1

/*
 * Allows PORTC_FS bit of Port A to be configured for interrupts. By default
 * thegeneration of interrupts is disabled. Whenever a 1 is written to a bit
 * of this register, it configures the corresponding bit of Port A to become
 * an interrupt; Otherwise Port A operates as a normal GPIO signal.
 * Interrupts are disabled on the corresponding bit of Port A if the
 * corresponding data direction register is set to output or if Port A mode
 * is set to Hardware.
 * 0:Configure Port A bit as normal GPIO (default)
 * 1:Configure Port A bit as an interrupt
 */
#define IAXXX_GPIO_INTEN_PORTC_FS_MASK 0x02000000
#define IAXXX_GPIO_INTEN_PORTC_FS_RESET_VAL 0x0
#define IAXXX_GPIO_INTEN_PORTC_FS_POS 25
#define IAXXX_GPIO_INTEN_PORTC_FS_SIZE 1

/*
 * Allows PORTC_DI bit of Port A to be configured for interrupts. By default
 * thegeneration of interrupts is disabled. Whenever a 1 is written to a bit
 * of this register, it configures the corresponding bit of Port A to become
 * an interrupt; Otherwise Port A operates as a normal GPIO signal.
 * Interrupts are disabled on the corresponding bit of Port A if the
 * corresponding data direction register is set to output or if Port A mode
 * is set to Hardware.
 * 0:Configure Port A bit as normal GPIO (default)
 * 1:Configure Port A bit as an interrupt
 */
#define IAXXX_GPIO_INTEN_PORTC_DI_MASK 0x04000000
#define IAXXX_GPIO_INTEN_PORTC_DI_RESET_VAL 0x0
#define IAXXX_GPIO_INTEN_PORTC_DI_POS 26
#define IAXXX_GPIO_INTEN_PORTC_DI_SIZE 1

/*
 * Allows PORTC_DO bit of Port A to be configured for interrupts. By default
 * thegeneration of interrupts is disabled. Whenever a 1 is written to a bit
 * of this register, it configures the corresponding bit of Port A to become
 * an interrupt; Otherwise Port A operates as a normal GPIO signal.
 * Interrupts are disabled on the corresponding bit of Port A if the
 * corresponding data direction register is set to output or if Port A mode
 * is set to Hardware.
 * 0:Configure Port A bit as normal GPIO (default)
 * 1:Configure Port A bit as an interrupt
 */
#define IAXXX_GPIO_INTEN_PORTC_DO_MASK 0x08000000
#define IAXXX_GPIO_INTEN_PORTC_DO_RESET_VAL 0x0
#define IAXXX_GPIO_INTEN_PORTC_DO_POS 27
#define IAXXX_GPIO_INTEN_PORTC_DO_SIZE 1

/*
 * Allows PORTD_CLK bit of Port A to be configured for interrupts. By default
 * thegeneration of interrupts is disabled. Whenever a 1 is written to a bit
 * of this register, it configures the corresponding bit of Port A to become
 * an interrupt; Otherwise Port A operates as a normal GPIO signal.
 * Interrupts are disabled on the corresponding bit of Port A if the
 * corresponding data direction register is set to output or if Port A mode
 * is set to Hardware.
 * 0:Configure Port A bit as normal GPIO (default)
 * 1:Configure Port A bit as an interrupt
 */
#define IAXXX_GPIO_INTEN_PORTD_CLK_MASK 0x10000000
#define IAXXX_GPIO_INTEN_PORTD_CLK_RESET_VAL 0x0
#define IAXXX_GPIO_INTEN_PORTD_CLK_POS 28
#define IAXXX_GPIO_INTEN_PORTD_CLK_SIZE 1

/*
 * Allows PORTD_FS bit of Port A to be configured for interrupts. By default
 * thegeneration of interrupts is disabled. Whenever a 1 is written to a bit
 * of this register, it configures the corresponding bit of Port A to become
 * an interrupt; Otherwise Port A operates as a normal GPIO signal.
 * Interrupts are disabled on the corresponding bit of Port A if the
 * corresponding data direction register is set to output or if Port A mode
 * is set to Hardware.
 * 0:Configure Port A bit as normal GPIO (default)
 * 1:Configure Port A bit as an interrupt
 */
#define IAXXX_GPIO_INTEN_PORTD_FS_MASK 0x20000000
#define IAXXX_GPIO_INTEN_PORTD_FS_RESET_VAL 0x0
#define IAXXX_GPIO_INTEN_PORTD_FS_POS 29
#define IAXXX_GPIO_INTEN_PORTD_FS_SIZE 1

/*
 * Allows PORTD_DI bit of Port A to be configured for interrupts. By default
 * thegeneration of interrupts is disabled. Whenever a 1 is written to a bit
 * of this register, it configures the corresponding bit of Port A to become
 * an interrupt; Otherwise Port A operates as a normal GPIO signal.
 * Interrupts are disabled on the corresponding bit of Port A if the
 * corresponding data direction register is set to output or if Port A mode
 * is set to Hardware.
 * 0:Configure Port A bit as normal GPIO (default)
 * 1:Configure Port A bit as an interrupt
 */
#define IAXXX_GPIO_INTEN_PORTD_DI_MASK 0x40000000
#define IAXXX_GPIO_INTEN_PORTD_DI_RESET_VAL 0x0
#define IAXXX_GPIO_INTEN_PORTD_DI_POS 30
#define IAXXX_GPIO_INTEN_PORTD_DI_SIZE 1

/*
 * Allows PORTD_DO bit of Port A to be configured for interrupts. By default
 * thegeneration of interrupts is disabled. Whenever a 1 is written to a bit
 * of this register, it configures the corresponding bit of Port A to become
 * an interrupt; Otherwise Port A operates as a normal GPIO signal.
 * Interrupts are disabled on the corresponding bit of Port A if the
 * corresponding data direction register is set to output or if Port A mode
 * is set to Hardware.
 * 0:Configure Port A bit as normal GPIO (default)
 * 1:Configure Port A bit as an interrupt
 */
#define IAXXX_GPIO_INTEN_PORTD_DO_MASK 0x80000000
#define IAXXX_GPIO_INTEN_PORTD_DO_RESET_VAL 0x0
#define IAXXX_GPIO_INTEN_PORTD_DO_POS 31
#define IAXXX_GPIO_INTEN_PORTD_DO_SIZE 1

/*** GPIO_INTMASK (0x50012034) ***/
/*
 */
#define IAXXX_GPIO_INTMASK_ADDR (0x50012034)
#define IAXXX_GPIO_INTMASK_MASK_VAL 0xffffffff
#define IAXXX_GPIO_INTMASK_RMASK_VAL 0xffffffff
#define IAXXX_GPIO_INTMASK_WMASK_VAL 0xffffffff
#define IAXXX_GPIO_INTMASK_RESET_VAL 0x00000000

/*
 * Control whether an interrupt can create an interrupt for the interrupt
 * controller for COMMA_2 by not masking it.
 * By default all interrupts are unmasked. Whenever a 1 is written to a bit
 * in this register, it masks the interrupt
 * generation capability for this signal; otherwise interrupts are allowed
 * through.
 * 0:Interrupt bits are unmasked (default)
 * 1:Mask interrupt
 */
#define IAXXX_GPIO_INTMASK_COMMA_2_MASK 0x00000001
#define IAXXX_GPIO_INTMASK_COMMA_2_RESET_VAL 0x0
#define IAXXX_GPIO_INTMASK_COMMA_2_POS 0
#define IAXXX_GPIO_INTMASK_COMMA_2_SIZE 1

/*
 * Control whether an interrupt can create an interrupt for the interrupt
 * controller for COMMA_3 by not masking it.
 * By default all interrupts are unmasked. Whenever a 1 is written to a bit
 * in this register, it masks the interrupt
 * generation capability for this signal; otherwise interrupts are allowed
 * through.
 * 0:Interrupt bits are unmasked (default)
 * 1:Mask interrupt
 */
#define IAXXX_GPIO_INTMASK_COMMA_3_MASK 0x00000002
#define IAXXX_GPIO_INTMASK_COMMA_3_RESET_VAL 0x0
#define IAXXX_GPIO_INTMASK_COMMA_3_POS 1
#define IAXXX_GPIO_INTMASK_COMMA_3_SIZE 1

/*
 * Control whether an interrupt can create an interrupt for the interrupt
 * controller for INTR_EVNT by not masking it.
 * By default all interrupts are unmasked. Whenever a 1 is written to a bit
 * in this register, it masks the interrupt
 * generation capability for this signal; otherwise interrupts are allowed
 * through.
 * 0:Interrupt bits are unmasked (default)
 * 1:Mask interrupt
 */
#define IAXXX_GPIO_INTMASK_INTR_EVNT_MASK 0x00000004
#define IAXXX_GPIO_INTMASK_INTR_EVNT_RESET_VAL 0x0
#define IAXXX_GPIO_INTMASK_INTR_EVNT_POS 2
#define IAXXX_GPIO_INTMASK_INTR_EVNT_SIZE 1

/*
 * Control whether an interrupt can create an interrupt for the interrupt
 * controller for CDC_RESET_N by not masking it.
 * By default all interrupts are unmasked. Whenever a 1 is written to a bit
 * in this register, it masks the interrupt
 * generation capability for this signal; otherwise interrupts are allowed
 * through.
 * 0:Interrupt bits are unmasked (default)
 * 1:Mask interrupt
 */
#define IAXXX_GPIO_INTMASK_CDC_RESET_N_MASK 0x00000008
#define IAXXX_GPIO_INTMASK_CDC_RESET_N_RESET_VAL 0x0
#define IAXXX_GPIO_INTMASK_CDC_RESET_N_POS 3
#define IAXXX_GPIO_INTMASK_CDC_RESET_N_SIZE 1

/*
 * Control whether an interrupt can create an interrupt for the interrupt
 * controller for CDC_INT_N by not masking it.
 * By default all interrupts are unmasked. Whenever a 1 is written to a bit
 * in this register, it masks the interrupt
 * generation capability for this signal; otherwise interrupts are allowed
 * through.
 * 0:Interrupt bits are unmasked (default)
 * 1:Mask interrupt
 */
#define IAXXX_GPIO_INTMASK_CDC_INT_N_MASK 0x00000010
#define IAXXX_GPIO_INTMASK_CDC_INT_N_RESET_VAL 0x0
#define IAXXX_GPIO_INTMASK_CDC_INT_N_POS 4
#define IAXXX_GPIO_INTMASK_CDC_INT_N_SIZE 1

/*
 * Control whether an interrupt can create an interrupt for the interrupt
 * controller for CDC_I2C_SCL by not masking it.
 * By default all interrupts are unmasked. Whenever a 1 is written to a bit
 * in this register, it masks the interrupt
 * generation capability for this signal; otherwise interrupts are allowed
 * through.
 * 0:Interrupt bits are unmasked (default)
 * 1:Mask interrupt
 */
#define IAXXX_GPIO_INTMASK_CDC_I2C_SCL_MASK 0x00000020
#define IAXXX_GPIO_INTMASK_CDC_I2C_SCL_RESET_VAL 0x0
#define IAXXX_GPIO_INTMASK_CDC_I2C_SCL_POS 5
#define IAXXX_GPIO_INTMASK_CDC_I2C_SCL_SIZE 1

/*
 * Control whether an interrupt can create an interrupt for the interrupt
 * controller for CDC_I2C_SDA_WR by not masking it.
 * By default all interrupts are unmasked. Whenever a 1 is written to a bit
 * in this register, it masks the interrupt
 * generation capability for this signal; otherwise interrupts are allowed
 * through.
 * 0:Interrupt bits are unmasked (default)
 * 1:Mask interrupt
 */
#define IAXXX_GPIO_INTMASK_CDC_I2C_SDA_WR_MASK 0x00000040
#define IAXXX_GPIO_INTMASK_CDC_I2C_SDA_WR_RESET_VAL 0x0
#define IAXXX_GPIO_INTMASK_CDC_I2C_SDA_WR_POS 6
#define IAXXX_GPIO_INTMASK_CDC_I2C_SDA_WR_SIZE 1

/*
 * Control whether an interrupt can create an interrupt for the interrupt
 * controller for CDC_I2C_SDA_RD by not masking it.
 * By default all interrupts are unmasked. Whenever a 1 is written to a bit
 * in this register, it masks the interrupt
 * generation capability for this signal; otherwise interrupts are allowed
 * through.
 * 0:Interrupt bits are unmasked (default)
 * 1:Mask interrupt
 */
#define IAXXX_GPIO_INTMASK_CDC_I2C_SDA_RD_MASK 0x00000080
#define IAXXX_GPIO_INTMASK_CDC_I2C_SDA_RD_RESET_VAL 0x0
#define IAXXX_GPIO_INTMASK_CDC_I2C_SDA_RD_POS 7
#define IAXXX_GPIO_INTMASK_CDC_I2C_SDA_RD_SIZE 1

/*
 * Control whether an interrupt can create an interrupt for the interrupt
 * controller for CDC_PWRON by not masking it.
 * By default all interrupts are unmasked. Whenever a 1 is written to a bit
 * in this register, it masks the interrupt
 * generation capability for this signal; otherwise interrupts are allowed
 * through.
 * 0:Interrupt bits are unmasked (default)
 * 1:Mask interrupt
 */
#define IAXXX_GPIO_INTMASK_CDC_PWRON_MASK 0x00000100
#define IAXXX_GPIO_INTMASK_CDC_PWRON_RESET_VAL 0x0
#define IAXXX_GPIO_INTMASK_CDC_PWRON_POS 8
#define IAXXX_GPIO_INTMASK_CDC_PWRON_SIZE 1

/*
 * Control whether an interrupt can create an interrupt for the interrupt
 * controller for INTR_API by not masking it.
 * By default all interrupts are unmasked. Whenever a 1 is written to a bit
 * in this register, it masks the interrupt
 * generation capability for this signal; otherwise interrupts are allowed
 * through.
 * 0:Interrupt bits are unmasked (default)
 * 1:Mask interrupt
 */
#define IAXXX_GPIO_INTMASK_INTR_API_MASK 0x00000200
#define IAXXX_GPIO_INTMASK_INTR_API_RESET_VAL 0x0
#define IAXXX_GPIO_INTMASK_INTR_API_POS 9
#define IAXXX_GPIO_INTMASK_INTR_API_SIZE 1

/*
 * Control whether an interrupt can create an interrupt for the interrupt
 * controller for COMMA_0 by not masking it.
 * By default all interrupts are unmasked. Whenever a 1 is written to a bit
 * in this register, it masks the interrupt
 * generation capability for this signal; otherwise interrupts are allowed
 * through.
 * 0:Interrupt bits are unmasked (default)
 * 1:Mask interrupt
 */
#define IAXXX_GPIO_INTMASK_COMMA_0_MASK 0x00000400
#define IAXXX_GPIO_INTMASK_COMMA_0_RESET_VAL 0x0
#define IAXXX_GPIO_INTMASK_COMMA_0_POS 10
#define IAXXX_GPIO_INTMASK_COMMA_0_SIZE 1

/*
 * Control whether an interrupt can create an interrupt for the interrupt
 * controller for COMMA_1 by not masking it.
 * By default all interrupts are unmasked. Whenever a 1 is written to a bit
 * in this register, it masks the interrupt
 * generation capability for this signal; otherwise interrupts are allowed
 * through.
 * 0:Interrupt bits are unmasked (default)
 * 1:Mask interrupt
 */
#define IAXXX_GPIO_INTMASK_COMMA_1_MASK 0x00000800
#define IAXXX_GPIO_INTMASK_COMMA_1_RESET_VAL 0x0
#define IAXXX_GPIO_INTMASK_COMMA_1_POS 11
#define IAXXX_GPIO_INTMASK_COMMA_1_SIZE 1

/*
 * Control whether an interrupt can create an interrupt for the interrupt
 * controller for COMMB_0 by not masking it.
 * By default all interrupts are unmasked. Whenever a 1 is written to a bit
 * in this register, it masks the interrupt
 * generation capability for this signal; otherwise interrupts are allowed
 * through.
 * 0:Interrupt bits are unmasked (default)
 * 1:Mask interrupt
 */
#define IAXXX_GPIO_INTMASK_COMMB_0_MASK 0x00001000
#define IAXXX_GPIO_INTMASK_COMMB_0_RESET_VAL 0x0
#define IAXXX_GPIO_INTMASK_COMMB_0_POS 12
#define IAXXX_GPIO_INTMASK_COMMB_0_SIZE 1

/*
 * Control whether an interrupt can create an interrupt for the interrupt
 * controller for UART_SIN by not masking it.
 * By default all interrupts are unmasked. Whenever a 1 is written to a bit
 * in this register, it masks the interrupt
 * generation capability for this signal; otherwise interrupts are allowed
 * through.
 * 0:Interrupt bits are unmasked (default)
 * 1:Mask interrupt
 */
#define IAXXX_GPIO_INTMASK_COMMB_1_MASK 0x00002000
#define IAXXX_GPIO_INTMASK_COMMB_1_RESET_VAL 0x0
#define IAXXX_GPIO_INTMASK_COMMB_1_POS 13
#define IAXXX_GPIO_INTMASK_COMMB_1_SIZE 1

/*
 * Control whether an interrupt can create an interrupt for the interrupt
 * controller for COMMB_1 by not masking it.
 * By default all interrupts are unmasked. Whenever a 1 is written to a bit
 * in this register, it masks the interrupt
 * generation capability for this signal; otherwise interrupts are allowed
 * through.
 * 0:Interrupt bits are unmasked (default)
 * 1:Mask interrupt
 */
#define IAXXX_GPIO_INTMASK_COMMB_2_MASK 0x00004000
#define IAXXX_GPIO_INTMASK_COMMB_2_RESET_VAL 0x0
#define IAXXX_GPIO_INTMASK_COMMB_2_POS 14
#define IAXXX_GPIO_INTMASK_COMMB_2_SIZE 1

/*
 * Control whether an interrupt can create an interrupt for the interrupt
 * controller for COMMB_3 by not masking it.
 * By default all interrupts are unmasked. Whenever a 1 is written to a bit
 * in this register, it masks the interrupt
 * generation capability for this signal; otherwise interrupts are allowed
 * through.
 * 0:Interrupt bits are unmasked (default)
 * 1:Mask interrupt
 */
#define IAXXX_GPIO_INTMASK_COMMB_3_MASK 0x00008000
#define IAXXX_GPIO_INTMASK_COMMB_3_RESET_VAL 0x0
#define IAXXX_GPIO_INTMASK_COMMB_3_POS 15
#define IAXXX_GPIO_INTMASK_COMMB_3_SIZE 1

/*
 * Control whether an interrupt can create an interrupt for the interrupt
 * controller for PORTA_CLK by not masking it.
 * By default all interrupts are unmasked. Whenever a 1 is written to a bit
 * in this register, it masks the interrupt
 * generation capability for this signal; otherwise interrupts are allowed
 * through.
 * 0:Interrupt bits are unmasked (default)
 * 1:Mask interrupt
 */
#define IAXXX_GPIO_INTMASK_PORTA_CLK_MASK 0x00010000
#define IAXXX_GPIO_INTMASK_PORTA_CLK_RESET_VAL 0x0
#define IAXXX_GPIO_INTMASK_PORTA_CLK_POS 16
#define IAXXX_GPIO_INTMASK_PORTA_CLK_SIZE 1

/*
 * Control whether an interrupt can create an interrupt for the interrupt
 * controller for PORTA_FS by not masking it.
 * By default all interrupts are unmasked. Whenever a 1 is written to a bit
 * in this register, it masks the interrupt
 * generation capability for this signal; otherwise interrupts are allowed
 * through.
 * 0:Interrupt bits are unmasked (default)
 * 1:Mask interrupt
 */
#define IAXXX_GPIO_INTMASK_PORTA_FS_MASK 0x00020000
#define IAXXX_GPIO_INTMASK_PORTA_FS_RESET_VAL 0x0
#define IAXXX_GPIO_INTMASK_PORTA_FS_POS 17
#define IAXXX_GPIO_INTMASK_PORTA_FS_SIZE 1

/*
 * Control whether an interrupt can create an interrupt for the interrupt
 * controller for PORTA_DI by not masking it.
 * By default all interrupts are unmasked. Whenever a 1 is written to a bit
 * in this register, it masks the interrupt
 * generation capability for this signal; otherwise interrupts are allowed
 * through.
 * 0:Interrupt bits are unmasked (default)
 * 1:Mask interrupt
 */
#define IAXXX_GPIO_INTMASK_PORTA_DI_MASK 0x00040000
#define IAXXX_GPIO_INTMASK_PORTA_DI_RESET_VAL 0x0
#define IAXXX_GPIO_INTMASK_PORTA_DI_POS 18
#define IAXXX_GPIO_INTMASK_PORTA_DI_SIZE 1

/*
 * Control whether an interrupt can create an interrupt for the interrupt
 * controller for PORTA_DO by not masking it.
 * By default all interrupts are unmasked. Whenever a 1 is written to a bit
 * in this register, it masks the interrupt
 * generation capability for this signal; otherwise interrupts are allowed
 * through.
 * 0:Interrupt bits are unmasked (default)
 * 1:Mask interrupt
 */
#define IAXXX_GPIO_INTMASK_PORTA_DO_MASK 0x00080000
#define IAXXX_GPIO_INTMASK_PORTA_DO_RESET_VAL 0x0
#define IAXXX_GPIO_INTMASK_PORTA_DO_POS 19
#define IAXXX_GPIO_INTMASK_PORTA_DO_SIZE 1

/*
 * Control whether an interrupt can create an interrupt for the interrupt
 * controller for PORTB_CLK by not masking it.
 * By default all interrupts are unmasked. Whenever a 1 is written to a bit
 * in this register, it masks the interrupt
 * generation capability for this signal; otherwise interrupts are allowed
 * through.
 * 0:Interrupt bits are unmasked (default)
 * 1:Mask interrupt
 */
#define IAXXX_GPIO_INTMASK_PORTB_CLK_MASK 0x00100000
#define IAXXX_GPIO_INTMASK_PORTB_CLK_RESET_VAL 0x0
#define IAXXX_GPIO_INTMASK_PORTB_CLK_POS 20
#define IAXXX_GPIO_INTMASK_PORTB_CLK_SIZE 1

/*
 * Control whether an interrupt can create an interrupt for the interrupt
 * controller for PORTB_FS by not masking it.
 * By default all interrupts are unmasked. Whenever a 1 is written to a bit
 * in this register, it masks the interrupt
 * generation capability for this signal; otherwise interrupts are allowed
 * through.
 * 0:Interrupt bits are unmasked (default)
 * 1:Mask interrupt
 */
#define IAXXX_GPIO_INTMASK_PORTB_FS_MASK 0x00200000
#define IAXXX_GPIO_INTMASK_PORTB_FS_RESET_VAL 0x0
#define IAXXX_GPIO_INTMASK_PORTB_FS_POS 21
#define IAXXX_GPIO_INTMASK_PORTB_FS_SIZE 1

/*
 * Control whether an interrupt can create an interrupt for the interrupt
 * controller for PORTB_DI by not masking it.
 * By default all interrupts are unmasked. Whenever a 1 is written to a bit
 * in this register, it masks the interrupt
 * generation capability for this signal; otherwise interrupts are allowed
 * through.
 * 0:Interrupt bits are unmasked (default)
 * 1:Mask interrupt
 */
#define IAXXX_GPIO_INTMASK_PORTB_DI_MASK 0x00400000
#define IAXXX_GPIO_INTMASK_PORTB_DI_RESET_VAL 0x0
#define IAXXX_GPIO_INTMASK_PORTB_DI_POS 22
#define IAXXX_GPIO_INTMASK_PORTB_DI_SIZE 1

/*
 * Control whether an interrupt can create an interrupt for the interrupt
 * controller for PORTB_DO by not masking it.
 * By default all interrupts are unmasked. Whenever a 1 is written to a bit
 * in this register, it masks the interrupt
 * generation capability for this signal; otherwise interrupts are allowed
 * through.
 * 0:Interrupt bits are unmasked (default)
 * 1:Mask interrupt
 */
#define IAXXX_GPIO_INTMASK_PORTB_DO_MASK 0x00800000
#define IAXXX_GPIO_INTMASK_PORTB_DO_RESET_VAL 0x0
#define IAXXX_GPIO_INTMASK_PORTB_DO_POS 23
#define IAXXX_GPIO_INTMASK_PORTB_DO_SIZE 1

/*
 * Control whether an interrupt can create an interrupt for the interrupt
 * controller for PORTC_CLK by not masking it.
 * By default all interrupts are unmasked. Whenever a 1 is written to a bit
 * in this register, it masks the interrupt
 * generation capability for this signal; otherwise interrupts are allowed
 * through.
 * 0:Interrupt bits are unmasked (default)
 * 1:Mask interrupt
 */
#define IAXXX_GPIO_INTMASK_PORTC_CLK_MASK 0x01000000
#define IAXXX_GPIO_INTMASK_PORTC_CLK_RESET_VAL 0x0
#define IAXXX_GPIO_INTMASK_PORTC_CLK_POS 24
#define IAXXX_GPIO_INTMASK_PORTC_CLK_SIZE 1

/*
 * Control whether an interrupt can create an interrupt for the interrupt
 * controller for PORTC_FS by not masking it.
 * By default all interrupts are unmasked. Whenever a 1 is written to a bit
 * in this register, it masks the interrupt
 * generation capability for this signal; otherwise interrupts are allowed
 * through.
 * 0:Interrupt bits are unmasked (default)
 * 1:Mask interrupt
 */
#define IAXXX_GPIO_INTMASK_PORTC_FS_MASK 0x02000000
#define IAXXX_GPIO_INTMASK_PORTC_FS_RESET_VAL 0x0
#define IAXXX_GPIO_INTMASK_PORTC_FS_POS 25
#define IAXXX_GPIO_INTMASK_PORTC_FS_SIZE 1

/*
 * Control whether an interrupt can create an interrupt for the interrupt
 * controller for PORTC_DI by not masking it.
 * By default all interrupts are unmasked. Whenever a 1 is written to a bit
 * in this register, it masks the interrupt
 * generation capability for this signal; otherwise interrupts are allowed
 * through.
 * 0:Interrupt bits are unmasked (default)
 * 1:Mask interrupt
 */
#define IAXXX_GPIO_INTMASK_PORTC_DI_MASK 0x04000000
#define IAXXX_GPIO_INTMASK_PORTC_DI_RESET_VAL 0x0
#define IAXXX_GPIO_INTMASK_PORTC_DI_POS 26
#define IAXXX_GPIO_INTMASK_PORTC_DI_SIZE 1

/*
 * Control whether an interrupt can create an interrupt for the interrupt
 * controller for PORTC_DO by not masking it.
 * By default all interrupts are unmasked. Whenever a 1 is written to a bit
 * in this register, it masks the interrupt
 * generation capability for this signal; otherwise interrupts are allowed
 * through.
 * 0:Interrupt bits are unmasked (default)
 * 1:Mask interrupt
 */
#define IAXXX_GPIO_INTMASK_PORTC_DO_MASK 0x08000000
#define IAXXX_GPIO_INTMASK_PORTC_DO_RESET_VAL 0x0
#define IAXXX_GPIO_INTMASK_PORTC_DO_POS 27
#define IAXXX_GPIO_INTMASK_PORTC_DO_SIZE 1

/*
 * Control whether an interrupt can create an interrupt for the interrupt
 * controller for PORTD_CLK by not masking it.
 * By default all interrupts are unmasked. Whenever a 1 is written to a bit
 * in this register, it masks the interrupt
 * generation capability for this signal; otherwise interrupts are allowed
 * through.
 * 0:Interrupt bits are unmasked (default)
 * 1:Mask interrupt
 */
#define IAXXX_GPIO_INTMASK_PORTD_CLK_MASK 0x10000000
#define IAXXX_GPIO_INTMASK_PORTD_CLK_RESET_VAL 0x0
#define IAXXX_GPIO_INTMASK_PORTD_CLK_POS 28
#define IAXXX_GPIO_INTMASK_PORTD_CLK_SIZE 1

/*
 * Control whether an interrupt can create an interrupt for the interrupt
 * controller for PORTD_FS by not masking it.
 * By default all interrupts are unmasked. Whenever a 1 is written to a bit
 * in this register, it masks the interrupt
 * generation capability for this signal; otherwise interrupts are allowed
 * through.
 * 0:Interrupt bits are unmasked (default)
 * 1:Mask interrupt
 */
#define IAXXX_GPIO_INTMASK_PORTD_FS_MASK 0x20000000
#define IAXXX_GPIO_INTMASK_PORTD_FS_RESET_VAL 0x0
#define IAXXX_GPIO_INTMASK_PORTD_FS_POS 29
#define IAXXX_GPIO_INTMASK_PORTD_FS_SIZE 1

/*
 * Control whether an interrupt can create an interrupt for the interrupt
 * controller for PORTD_DI by not masking it.
 * By default all interrupts are unmasked. Whenever a 1 is written to a bit
 * in this register, it masks the interrupt
 * generation capability for this signal; otherwise interrupts are allowed
 * through.
 * 0:Interrupt bits are unmasked (default)
 * 1:Mask interrupt
 */
#define IAXXX_GPIO_INTMASK_PORTD_DI_MASK 0x40000000
#define IAXXX_GPIO_INTMASK_PORTD_DI_RESET_VAL 0x0
#define IAXXX_GPIO_INTMASK_PORTD_DI_POS 30
#define IAXXX_GPIO_INTMASK_PORTD_DI_SIZE 1

/*
 * Control whether an interrupt can create an interrupt for the interrupt
 * controller for PORTD_DO by not masking it.
 * By default all interrupts are unmasked. Whenever a 1 is written to a bit
 * in this register, it masks the interrupt
 * generation capability for this signal; otherwise interrupts are allowed
 * through.
 * 0:Interrupt bits are unmasked (default)
 * 1:Mask interrupt
 */
#define IAXXX_GPIO_INTMASK_PORTD_DO_MASK 0x80000000
#define IAXXX_GPIO_INTMASK_PORTD_DO_RESET_VAL 0x0
#define IAXXX_GPIO_INTMASK_PORTD_DO_POS 31
#define IAXXX_GPIO_INTMASK_PORTD_DO_SIZE 1

/*** GPIO_INTTYPE_LEVEL (0x50012038) ***/
/*
 */
#define IAXXX_GPIO_INTTYPE_LEVEL_ADDR (0x50012038)
#define IAXXX_GPIO_INTTYPE_LEVEL_MASK_VAL 0xffffffff
#define IAXXX_GPIO_INTTYPE_LEVEL_RMASK_VAL 0xffffffff
#define IAXXX_GPIO_INTTYPE_LEVEL_WMASK_VAL 0xffffffff
#define IAXXX_GPIO_INTTYPE_LEVEL_RESET_VAL 0x00000000

/*
 * Control the type of interrupt that can occur for COMMA_2. Whenever a 0 is
 * written to a bit of this register, it
 * configures the interrupt type be level sensitive otherwise it is
 * sensitive.
 * 0:Level (default)
 * 1:edge
 */
#define IAXXX_GPIO_INTTYPE_LEVEL_COMMA_2_MASK 0x00000001
#define IAXXX_GPIO_INTTYPE_LEVEL_COMMA_2_RESET_VAL 0x0
#define IAXXX_GPIO_INTTYPE_LEVEL_COMMA_2_POS 0
#define IAXXX_GPIO_INTTYPE_LEVEL_COMMA_2_SIZE 1

/*
 * Control the type of interrupt that can occur for COMMA_3. Whenever a 0 is
 * written to a bit of this register, it
 * configures the interrupt type be level sensitive otherwise it is
 * sensitive.
 * 0:Level (default)
 * 1:edge
 */
#define IAXXX_GPIO_INTTYPE_LEVEL_COMMA_3_MASK 0x00000002
#define IAXXX_GPIO_INTTYPE_LEVEL_COMMA_3_RESET_VAL 0x0
#define IAXXX_GPIO_INTTYPE_LEVEL_COMMA_3_POS 1
#define IAXXX_GPIO_INTTYPE_LEVEL_COMMA_3_SIZE 1

/*
 * Control the type of interrupt that can occur for INTR_EVNT. Whenever a 0
 * is written to a bit of this register, it
 * configures the interrupt type be level sensitive otherwise it is
 * sensitive.
 * 0:Level (default)
 * 1:edge
 */
#define IAXXX_GPIO_INTTYPE_LEVEL_INTR_EVNT_MASK 0x00000004
#define IAXXX_GPIO_INTTYPE_LEVEL_INTR_EVNT_RESET_VAL 0x0
#define IAXXX_GPIO_INTTYPE_LEVEL_INTR_EVNT_POS 2
#define IAXXX_GPIO_INTTYPE_LEVEL_INTR_EVNT_SIZE 1

/*
 * Control the type of interrupt that can occur for CDC_RESET_N. Whenever a 0
 * is written to a bit of this register, it
 * configures the interrupt type be level sensitive otherwise it is
 * sensitive.
 * 0:Level (default)
 * 1:edge
 */
#define IAXXX_GPIO_INTTYPE_LEVEL_CDC_RESET_N_MASK 0x00000008
#define IAXXX_GPIO_INTTYPE_LEVEL_CDC_RESET_N_RESET_VAL 0x0
#define IAXXX_GPIO_INTTYPE_LEVEL_CDC_RESET_N_POS 3
#define IAXXX_GPIO_INTTYPE_LEVEL_CDC_RESET_N_SIZE 1

/*
 * Control the type of interrupt that can occur for CDC_INT_N. Whenever a 0
 * is written to a bit of this register, it
 * configures the interrupt type be level sensitive otherwise it is
 * sensitive.
 * 0:Level (default)
 * 1:edge
 */
#define IAXXX_GPIO_INTTYPE_LEVEL_CDC_INT_N_MASK 0x00000010
#define IAXXX_GPIO_INTTYPE_LEVEL_CDC_INT_N_RESET_VAL 0x0
#define IAXXX_GPIO_INTTYPE_LEVEL_CDC_INT_N_POS 4
#define IAXXX_GPIO_INTTYPE_LEVEL_CDC_INT_N_SIZE 1

/*
 * Control the type of interrupt that can occur for CDC_I2C_SCL. Whenever a 0
 * is written to a bit of this register, it
 * configures the interrupt type be level sensitive otherwise it is
 * sensitive.
 * 0:Level (default)
 * 1:edge
 */
#define IAXXX_GPIO_INTTYPE_LEVEL_CDC_I2C_SCL_MASK 0x00000020
#define IAXXX_GPIO_INTTYPE_LEVEL_CDC_I2C_SCL_RESET_VAL 0x0
#define IAXXX_GPIO_INTTYPE_LEVEL_CDC_I2C_SCL_POS 5
#define IAXXX_GPIO_INTTYPE_LEVEL_CDC_I2C_SCL_SIZE 1

/*
 * Control the type of interrupt that can occur for CDC_I2C_SDA_WR. Whenever
 * a 0 is written to a bit of this register, it
 * configures the interrupt type be level sensitive otherwise it is
 * sensitive.
 * 0:Level (default)
 * 1:edge
 */
#define IAXXX_GPIO_INTTYPE_LEVEL_CDC_I2C_SDA_WR_MASK 0x00000040
#define IAXXX_GPIO_INTTYPE_LEVEL_CDC_I2C_SDA_WR_RESET_VAL 0x0
#define IAXXX_GPIO_INTTYPE_LEVEL_CDC_I2C_SDA_WR_POS 6
#define IAXXX_GPIO_INTTYPE_LEVEL_CDC_I2C_SDA_WR_SIZE 1

/*
 * Control the type of interrupt that can occur for CDC_I2C_SDA_RD. Whenever
 * a 0 is written to a bit of this register, it
 * configures the interrupt type be level sensitive otherwise it is
 * sensitive.
 * 0:Level (default)
 * 1:edge
 */
#define IAXXX_GPIO_INTTYPE_LEVEL_CDC_I2C_SDA_RD_MASK 0x00000080
#define IAXXX_GPIO_INTTYPE_LEVEL_CDC_I2C_SDA_RD_RESET_VAL 0x0
#define IAXXX_GPIO_INTTYPE_LEVEL_CDC_I2C_SDA_RD_POS 7
#define IAXXX_GPIO_INTTYPE_LEVEL_CDC_I2C_SDA_RD_SIZE 1

/*
 * Control the type of interrupt that can occur for CDC_PWRON. Whenever a 0
 * is written to a bit of this register, it
 * configures the interrupt type be level sensitive otherwise it is
 * sensitive.
 * 0:Level (default)
 * 1:edge
 */
#define IAXXX_GPIO_INTTYPE_LEVEL_CDC_PWRON_MASK 0x00000100
#define IAXXX_GPIO_INTTYPE_LEVEL_CDC_PWRON_RESET_VAL 0x0
#define IAXXX_GPIO_INTTYPE_LEVEL_CDC_PWRON_POS 8
#define IAXXX_GPIO_INTTYPE_LEVEL_CDC_PWRON_SIZE 1

/*
 * Control the type of interrupt that can occur for INTR_API. Whenever a 0 is
 * written to a bit of this register, it
 * configures the interrupt type be level sensitive otherwise it is
 * sensitive.
 * 0:Level (default)
 * 1:edge
 */
#define IAXXX_GPIO_INTTYPE_LEVEL_INTR_API_MASK 0x00000200
#define IAXXX_GPIO_INTTYPE_LEVEL_INTR_API_RESET_VAL 0x0
#define IAXXX_GPIO_INTTYPE_LEVEL_INTR_API_POS 9
#define IAXXX_GPIO_INTTYPE_LEVEL_INTR_API_SIZE 1

/*
 * Control the type of interrupt that can occur for COMMA_0. Whenever a 0 is
 * written to a bit of this register, it
 * configures the interrupt type be level sensitive otherwise it is
 * sensitive.
 * 0:Level (default)
 * 1:edge
 */
#define IAXXX_GPIO_INTTYPE_LEVEL_COMMA_0_MASK 0x00000400
#define IAXXX_GPIO_INTTYPE_LEVEL_COMMA_0_RESET_VAL 0x0
#define IAXXX_GPIO_INTTYPE_LEVEL_COMMA_0_POS 10
#define IAXXX_GPIO_INTTYPE_LEVEL_COMMA_0_SIZE 1

/*
 * Control the type of interrupt that can occur for COMMA_1. Whenever a 0 is
 * written to a bit of this register, it
 * configures the interrupt type be level sensitive otherwise it is
 * sensitive.
 * 0:Level (default)
 * 1:edge
 */
#define IAXXX_GPIO_INTTYPE_LEVEL_COMMA_1_MASK 0x00000800
#define IAXXX_GPIO_INTTYPE_LEVEL_COMMA_1_RESET_VAL 0x0
#define IAXXX_GPIO_INTTYPE_LEVEL_COMMA_1_POS 11
#define IAXXX_GPIO_INTTYPE_LEVEL_COMMA_1_SIZE 1

/*
 * Control the type of interrupt that can occur for COMMB_0. Whenever a 0 is
 * written to a bit of this register, it
 * configures the interrupt type be level sensitive otherwise it is
 * sensitive.
 * 0:Level (default)
 * 1:edge
 */
#define IAXXX_GPIO_INTTYPE_LEVEL_COMMB_0_MASK 0x00001000
#define IAXXX_GPIO_INTTYPE_LEVEL_COMMB_0_RESET_VAL 0x0
#define IAXXX_GPIO_INTTYPE_LEVEL_COMMB_0_POS 12
#define IAXXX_GPIO_INTTYPE_LEVEL_COMMB_0_SIZE 1

/*
 * Control the type of interrupt that can occur for COMMB_1. Whenever a 0 is
 * written to a bit of this register, it
 * configures the interrupt type be level sensitive otherwise it is
 * sensitive.
 * 0:Level (default)
 * 1:edge
 */
#define IAXXX_GPIO_INTTYPE_LEVEL_COMMB_1_MASK 0x00002000
#define IAXXX_GPIO_INTTYPE_LEVEL_COMMB_1_RESET_VAL 0x0
#define IAXXX_GPIO_INTTYPE_LEVEL_COMMB_1_POS 13
#define IAXXX_GPIO_INTTYPE_LEVEL_COMMB_1_SIZE 1

/*
 * Control the type of interrupt that can occur for COMMB_2. Whenever a 0 is
 * written to a bit of this register, it
 * configures the interrupt type be level sensitive otherwise it is
 * sensitive.
 * 0:Level (default)
 * 1:edge
 */
#define IAXXX_GPIO_INTTYPE_LEVEL_COMMB_2_MASK 0x00004000
#define IAXXX_GPIO_INTTYPE_LEVEL_COMMB_2_RESET_VAL 0x0
#define IAXXX_GPIO_INTTYPE_LEVEL_COMMB_2_POS 14
#define IAXXX_GPIO_INTTYPE_LEVEL_COMMB_2_SIZE 1

/*
 * Control the type of interrupt that can occur for COMMB_3. Whenever a 0 is
 * written to a bit of this register, it
 * configures the interrupt type be level sensitive otherwise it is
 * sensitive.
 * 0:Level (default)
 * 1:edge
 */
#define IAXXX_GPIO_INTTYPE_LEVEL_COMMB_3_MASK 0x00008000
#define IAXXX_GPIO_INTTYPE_LEVEL_COMMB_3_RESET_VAL 0x0
#define IAXXX_GPIO_INTTYPE_LEVEL_COMMB_3_POS 15
#define IAXXX_GPIO_INTTYPE_LEVEL_COMMB_3_SIZE 1

/*
 * Control the type of interrupt that can occur for PORTA_CLK. Whenever a 0
 * is written to a bit of this register, it
 * configures the interrupt type be level sensitive otherwise it is
 * sensitive.
 * 0:Level (default)
 * 1:edge
 */
#define IAXXX_GPIO_INTTYPE_LEVEL_PORTA_CLK_MASK 0x00010000
#define IAXXX_GPIO_INTTYPE_LEVEL_PORTA_CLK_RESET_VAL 0x0
#define IAXXX_GPIO_INTTYPE_LEVEL_PORTA_CLK_POS 16
#define IAXXX_GPIO_INTTYPE_LEVEL_PORTA_CLK_SIZE 1

/*
 * Control the type of interrupt that can occur for PORTA_FS. Whenever a 0 is
 * written to a bit of this register, it
 * configures the interrupt type be level sensitive otherwise it is
 * sensitive.
 * 0:Level (default)
 * 1:edge
 */
#define IAXXX_GPIO_INTTYPE_LEVEL_PORTA_FS_MASK 0x00020000
#define IAXXX_GPIO_INTTYPE_LEVEL_PORTA_FS_RESET_VAL 0x0
#define IAXXX_GPIO_INTTYPE_LEVEL_PORTA_FS_POS 17
#define IAXXX_GPIO_INTTYPE_LEVEL_PORTA_FS_SIZE 1

/*
 * Control the type of interrupt that can occur for PORTA_DI. Whenever a 0 is
 * written to a bit of this register, it
 * configures the interrupt type be level sensitive otherwise it is
 * sensitive.
 * 0:Level (default)
 * 1:edge
 */
#define IAXXX_GPIO_INTTYPE_LEVEL_PORTA_DI_MASK 0x00040000
#define IAXXX_GPIO_INTTYPE_LEVEL_PORTA_DI_RESET_VAL 0x0
#define IAXXX_GPIO_INTTYPE_LEVEL_PORTA_DI_POS 18
#define IAXXX_GPIO_INTTYPE_LEVEL_PORTA_DI_SIZE 1

/*
 * Control the type of interrupt that can occur for PORTA_DO. Whenever a 0 is
 * written to a bit of this register, it
 * configures the interrupt type be level sensitive otherwise it is
 * sensitive.
 * 0:Level (default)
 * 1:edge
 */
#define IAXXX_GPIO_INTTYPE_LEVEL_PORTA_DO_MASK 0x00080000
#define IAXXX_GPIO_INTTYPE_LEVEL_PORTA_DO_RESET_VAL 0x0
#define IAXXX_GPIO_INTTYPE_LEVEL_PORTA_DO_POS 19
#define IAXXX_GPIO_INTTYPE_LEVEL_PORTA_DO_SIZE 1

/*
 * Control the type of interrupt that can occur for PORTB_CLK. Whenever a 0
 * is written to a bit of this register, it
 * configures the interrupt type be level sensitive otherwise it is
 * sensitive.
 * 0:Level (default)
 * 1:edge
 */
#define IAXXX_GPIO_INTTYPE_LEVEL_PORTB_CLK_MASK 0x00100000
#define IAXXX_GPIO_INTTYPE_LEVEL_PORTB_CLK_RESET_VAL 0x0
#define IAXXX_GPIO_INTTYPE_LEVEL_PORTB_CLK_POS 20
#define IAXXX_GPIO_INTTYPE_LEVEL_PORTB_CLK_SIZE 1

/*
 * Control the type of interrupt that can occur for PORTB_FS. Whenever a 0 is
 * written to a bit of this register, it
 * configures the interrupt type be level sensitive otherwise it is
 * sensitive.
 * 0:Level (default)
 * 1:edge
 */
#define IAXXX_GPIO_INTTYPE_LEVEL_PORTB_FS_MASK 0x00200000
#define IAXXX_GPIO_INTTYPE_LEVEL_PORTB_FS_RESET_VAL 0x0
#define IAXXX_GPIO_INTTYPE_LEVEL_PORTB_FS_POS 21
#define IAXXX_GPIO_INTTYPE_LEVEL_PORTB_FS_SIZE 1

/*
 * Control the type of interrupt that can occur for PORTB_DI. Whenever a 0 is
 * written to a bit of this register, it
 * configures the interrupt type be level sensitive otherwise it is
 * sensitive.
 * 0:Level (default)
 * 1:edge
 */
#define IAXXX_GPIO_INTTYPE_LEVEL_PORTB_DI_MASK 0x00400000
#define IAXXX_GPIO_INTTYPE_LEVEL_PORTB_DI_RESET_VAL 0x0
#define IAXXX_GPIO_INTTYPE_LEVEL_PORTB_DI_POS 22
#define IAXXX_GPIO_INTTYPE_LEVEL_PORTB_DI_SIZE 1

/*
 * Control the type of interrupt that can occur for PORTB_DO. Whenever a 0 is
 * written to a bit of this register, it
 * configures the interrupt type be level sensitive otherwise it is
 * sensitive.
 * 0:Level (default)
 * 1:edge
 */
#define IAXXX_GPIO_INTTYPE_LEVEL_PORTB_DO_MASK 0x00800000
#define IAXXX_GPIO_INTTYPE_LEVEL_PORTB_DO_RESET_VAL 0x0
#define IAXXX_GPIO_INTTYPE_LEVEL_PORTB_DO_POS 23
#define IAXXX_GPIO_INTTYPE_LEVEL_PORTB_DO_SIZE 1

/*
 * Control the type of interrupt that can occur for PORTC_CLK. Whenever a 0
 * is written to a bit of this register, it
 * configures the interrupt type be level sensitive otherwise it is
 * sensitive.
 * 0:Level (default)
 * 1:edge
 */
#define IAXXX_GPIO_INTTYPE_LEVEL_PORTC_CLK_MASK 0x01000000
#define IAXXX_GPIO_INTTYPE_LEVEL_PORTC_CLK_RESET_VAL 0x0
#define IAXXX_GPIO_INTTYPE_LEVEL_PORTC_CLK_POS 24
#define IAXXX_GPIO_INTTYPE_LEVEL_PORTC_CLK_SIZE 1

/*
 * Control the type of interrupt that can occur for PORTC_FS. Whenever a 0 is
 * written to a bit of this register, it
 * configures the interrupt type be level sensitive otherwise it is
 * sensitive.
 * 0:Level (default)
 * 1:edge
 */
#define IAXXX_GPIO_INTTYPE_LEVEL_PORTC_FS_MASK 0x02000000
#define IAXXX_GPIO_INTTYPE_LEVEL_PORTC_FS_RESET_VAL 0x0
#define IAXXX_GPIO_INTTYPE_LEVEL_PORTC_FS_POS 25
#define IAXXX_GPIO_INTTYPE_LEVEL_PORTC_FS_SIZE 1

/*
 * Control the type of interrupt that can occur for PORTC_DI. Whenever a 0 is
 * written to a bit of this register, it
 * configures the interrupt type be level sensitive otherwise it is
 * sensitive.
 * 0:Level (default)
 * 1:edge
 */
#define IAXXX_GPIO_INTTYPE_LEVEL_PORTC_DI_MASK 0x04000000
#define IAXXX_GPIO_INTTYPE_LEVEL_PORTC_DI_RESET_VAL 0x0
#define IAXXX_GPIO_INTTYPE_LEVEL_PORTC_DI_POS 26
#define IAXXX_GPIO_INTTYPE_LEVEL_PORTC_DI_SIZE 1

/*
 * Control the type of interrupt that can occur for PORTC_DO. Whenever a 0 is
 * written to a bit of this register, it
 * configures the interrupt type be level sensitive otherwise it is
 * sensitive.
 * 0:Level (default)
 * 1:edge
 */
#define IAXXX_GPIO_INTTYPE_LEVEL_PORTC_DO_MASK 0x08000000
#define IAXXX_GPIO_INTTYPE_LEVEL_PORTC_DO_RESET_VAL 0x0
#define IAXXX_GPIO_INTTYPE_LEVEL_PORTC_DO_POS 27
#define IAXXX_GPIO_INTTYPE_LEVEL_PORTC_DO_SIZE 1

/*
 * Control the type of interrupt that can occur for PORTD_CLK. Whenever a 0
 * is written to a bit of this register, it
 * configures the interrupt type be level sensitive otherwise it is
 * sensitive.
 * 0:Level (default)
 * 1:edge
 */
#define IAXXX_GPIO_INTTYPE_LEVEL_PORTD_CLK_MASK 0x10000000
#define IAXXX_GPIO_INTTYPE_LEVEL_PORTD_CLK_RESET_VAL 0x0
#define IAXXX_GPIO_INTTYPE_LEVEL_PORTD_CLK_POS 28
#define IAXXX_GPIO_INTTYPE_LEVEL_PORTD_CLK_SIZE 1

/*
 * Control the type of interrupt that can occur for PORTD_FS. Whenever a 0 is
 * written to a bit of this register, it
 * configures the interrupt type be level sensitive otherwise it is
 * sensitive.
 * 0:Level (default)
 * 1:edge
 */
#define IAXXX_GPIO_INTTYPE_LEVEL_PORTD_FS_MASK 0x20000000
#define IAXXX_GPIO_INTTYPE_LEVEL_PORTD_FS_RESET_VAL 0x0
#define IAXXX_GPIO_INTTYPE_LEVEL_PORTD_FS_POS 29
#define IAXXX_GPIO_INTTYPE_LEVEL_PORTD_FS_SIZE 1

/*
 * Control the type of interrupt that can occur for PORTD_DI. Whenever a 0 is
 * written to a bit of this register, it
 * configures the interrupt type be level sensitive otherwise it is
 * sensitive.
 * 0:Level (default)
 * 1:edge
 */
#define IAXXX_GPIO_INTTYPE_LEVEL_PORTD_DI_MASK 0x40000000
#define IAXXX_GPIO_INTTYPE_LEVEL_PORTD_DI_RESET_VAL 0x0
#define IAXXX_GPIO_INTTYPE_LEVEL_PORTD_DI_POS 30
#define IAXXX_GPIO_INTTYPE_LEVEL_PORTD_DI_SIZE 1

/*
 * Control the type of interrupt that can occur for PORTD_DO. Whenever a 0 is
 * written to a bit of this register, it
 * configures the interrupt type be level sensitive otherwise it is
 * sensitive.
 * 0:Level (default)
 * 1:edge
 */
#define IAXXX_GPIO_INTTYPE_LEVEL_PORTD_DO_MASK 0x80000000
#define IAXXX_GPIO_INTTYPE_LEVEL_PORTD_DO_RESET_VAL 0x0
#define IAXXX_GPIO_INTTYPE_LEVEL_PORTD_DO_POS 31
#define IAXXX_GPIO_INTTYPE_LEVEL_PORTD_DO_SIZE 1

/*** GPIO_INT_POLARITY (0x5001203c) ***/
/*
 */
#define IAXXX_GPIO_INT_POLARITY_ADDR (0x5001203c)
#define IAXXX_GPIO_INT_POLARITY_MASK_VAL 0xffffffff
#define IAXXX_GPIO_INT_POLARITY_RMASK_VAL 0xffffffff
#define IAXXX_GPIO_INT_POLARITY_WMASK_VAL 0xffffffff
#define IAXXX_GPIO_INT_POLARITY_RESET_VAL 0x00000000

/*
 * Controls the polarity of edge or level sensitivity that can occur on the
 * COMMA_2 port.
 * Whenever a 0 is written to a bit of this register, it configures the
 * interrupt type to
 * falling edge or active low sensitive; otherwise, it is rising edge or
 * active high.
 * 0:Active low (default)
 * 1:Active high
 */
#define IAXXX_GPIO_INT_POLARITY_COMMA_2_MASK 0x00000001
#define IAXXX_GPIO_INT_POLARITY_COMMA_2_RESET_VAL 0x0
#define IAXXX_GPIO_INT_POLARITY_COMMA_2_POS 0
#define IAXXX_GPIO_INT_POLARITY_COMMA_2_SIZE 1

/*
 * Controls the polarity of edge or level sensitivity that can occur on the
 * COMMA_3 port.
 * Whenever a 0 is written to a bit of this register, it configures the
 * interrupt type to
 * falling edge or active low sensitive; otherwise, it is rising edge or
 * active high.
 * 0:Active low (default)
 * 1:Active high
 */
#define IAXXX_GPIO_INT_POLARITY_COMMA_3_MASK 0x00000002
#define IAXXX_GPIO_INT_POLARITY_COMMA_3_RESET_VAL 0x0
#define IAXXX_GPIO_INT_POLARITY_COMMA_3_POS 1
#define IAXXX_GPIO_INT_POLARITY_COMMA_3_SIZE 1

/*
 * Controls the polarity of edge or level sensitivity that can occur on the
 * INTR_EVNT port.
 * Whenever a 0 is written to a bit of this register, it configures the
 * interrupt type to
 * falling edge or active low sensitive; otherwise, it is rising edge or
 * active high.
 * 0:Active low (default)
 * 1:Active high
 */
#define IAXXX_GPIO_INT_POLARITY_INTR_EVNT_MASK 0x00000004
#define IAXXX_GPIO_INT_POLARITY_INTR_EVNT_RESET_VAL 0x0
#define IAXXX_GPIO_INT_POLARITY_INTR_EVNT_POS 2
#define IAXXX_GPIO_INT_POLARITY_INTR_EVNT_SIZE 1

/*
 * Controls the polarity of edge or level sensitivity that can occur on the
 * CDC_RESET_N port.
 * Whenever a 0 is written to a bit of this register, it configures the
 * interrupt type to
 * falling edge or active low sensitive; otherwise, it is rising edge or
 * active high.
 * 0:Active low (default)
 * 1:Active high
 */
#define IAXXX_GPIO_INT_POLARITY_CDC_RESET_N_MASK 0x00000008
#define IAXXX_GPIO_INT_POLARITY_CDC_RESET_N_RESET_VAL 0x0
#define IAXXX_GPIO_INT_POLARITY_CDC_RESET_N_POS 3
#define IAXXX_GPIO_INT_POLARITY_CDC_RESET_N_SIZE 1

/*
 * Controls the polarity of edge or level sensitivity that can occur on the
 * CDC_INT_N port.
 * Whenever a 0 is written to a bit of this register, it configures the
 * interrupt type to
 * falling edge or active low sensitive; otherwise, it is rising edge or
 * active high.
 * 0:Active low (default)
 * 1:Active high
 */
#define IAXXX_GPIO_INT_POLARITY_CDC_INT_N_MASK 0x00000010
#define IAXXX_GPIO_INT_POLARITY_CDC_INT_N_RESET_VAL 0x0
#define IAXXX_GPIO_INT_POLARITY_CDC_INT_N_POS 4
#define IAXXX_GPIO_INT_POLARITY_CDC_INT_N_SIZE 1

/*
 * Controls the polarity of edge or level sensitivity that can occur on the
 * CDC_I2C_SCL port.
 * Whenever a 0 is written to a bit of this register, it configures the
 * interrupt type to
 * falling edge or active low sensitive; otherwise, it is rising edge or
 * active high.
 * 0:Active low (default)
 * 1:Active high
 */
#define IAXXX_GPIO_INT_POLARITY_CDC_I2C_SCL_MASK 0x00000020
#define IAXXX_GPIO_INT_POLARITY_CDC_I2C_SCL_RESET_VAL 0x0
#define IAXXX_GPIO_INT_POLARITY_CDC_I2C_SCL_POS 5
#define IAXXX_GPIO_INT_POLARITY_CDC_I2C_SCL_SIZE 1

/*
 * Controls the polarity of edge or level sensitivity that can occur on the
 * CDC_I2C_SDA_WR port.
 * Whenever a 0 is written to a bit of this register, it configures the
 * interrupt type to
 * falling edge or active low sensitive; otherwise, it is rising edge or
 * active high.
 * 0:Active low (default)
 * 1:Active high
 */
#define IAXXX_GPIO_INT_POLARITY_CDC_I2C_SDA_WR_MASK 0x00000040
#define IAXXX_GPIO_INT_POLARITY_CDC_I2C_SDA_WR_RESET_VAL 0x0
#define IAXXX_GPIO_INT_POLARITY_CDC_I2C_SDA_WR_POS 6
#define IAXXX_GPIO_INT_POLARITY_CDC_I2C_SDA_WR_SIZE 1

/*
 * Controls the polarity of edge or level sensitivity that can occur on the
 * CDC_I2C_SDA_RD port.
 * Whenever a 0 is written to a bit of this register, it configures the
 * interrupt type to
 * falling edge or active low sensitive; otherwise, it is rising edge or
 * active high.
 * 0:Active low (default)
 * 1:Active high
 */
#define IAXXX_GPIO_INT_POLARITY_CDC_I2C_SDA_RD_MASK 0x00000080
#define IAXXX_GPIO_INT_POLARITY_CDC_I2C_SDA_RD_RESET_VAL 0x0
#define IAXXX_GPIO_INT_POLARITY_CDC_I2C_SDA_RD_POS 7
#define IAXXX_GPIO_INT_POLARITY_CDC_I2C_SDA_RD_SIZE 1

/*
 * Controls the polarity of edge or level sensitivity that can occur on the
 * CDC_PWRON port.
 * Whenever a 0 is written to a bit of this register, it configures the
 * interrupt type to
 * falling edge or active low sensitive; otherwise, it is rising edge or
 * active high.
 * 0:Active low (default)
 * 1:Active high
 */
#define IAXXX_GPIO_INT_POLARITY_CDC_PWRON_MASK 0x00000100
#define IAXXX_GPIO_INT_POLARITY_CDC_PWRON_RESET_VAL 0x0
#define IAXXX_GPIO_INT_POLARITY_CDC_PWRON_POS 8
#define IAXXX_GPIO_INT_POLARITY_CDC_PWRON_SIZE 1

/*
 * Controls the polarity of edge or level sensitivity that can occur on the
 * INTR_API port.
 * Whenever a 0 is written to a bit of this register, it configures the
 * interrupt type to
 * falling edge or active low sensitive; otherwise, it is rising edge or
 * active high.
 * 0:Active low (default)
 * 1:Active high
 */
#define IAXXX_GPIO_INT_POLARITY_INTR_API_MASK 0x00000200
#define IAXXX_GPIO_INT_POLARITY_INTR_API_RESET_VAL 0x0
#define IAXXX_GPIO_INT_POLARITY_INTR_API_POS 9
#define IAXXX_GPIO_INT_POLARITY_INTR_API_SIZE 1

/*
 * Controls the polarity of edge or level sensitivity that can occur on the
 * COMMA_0 port.
 * Whenever a 0 is written to a bit of this register, it configures the
 * interrupt type to
 * falling edge or active low sensitive; otherwise, it is rising edge or
 * active high.
 * 0:Active low (default)
 * 1:Active high
 */
#define IAXXX_GPIO_INT_POLARITY_COMMA_0_MASK 0x00000400
#define IAXXX_GPIO_INT_POLARITY_COMMA_0_RESET_VAL 0x0
#define IAXXX_GPIO_INT_POLARITY_COMMA_0_POS 10
#define IAXXX_GPIO_INT_POLARITY_COMMA_0_SIZE 1

/*
 * Controls the polarity of edge or level sensitivity that can occur on the
 * COMMA_1 port.
 * Whenever a 0 is written to a bit of this register, it configures the
 * interrupt type to
 * falling edge or active low sensitive; otherwise, it is rising edge or
 * active high.
 * 0:Active low (default)
 * 1:Active high
 */
#define IAXXX_GPIO_INT_POLARITY_COMMA_1_MASK 0x00000800
#define IAXXX_GPIO_INT_POLARITY_COMMA_1_RESET_VAL 0x0
#define IAXXX_GPIO_INT_POLARITY_COMMA_1_POS 11
#define IAXXX_GPIO_INT_POLARITY_COMMA_1_SIZE 1

/*
 * Controls the polarity of edge or level sensitivity that can occur on the
 * COMMB_0 port.
 * Whenever a 0 is written to a bit of this register, it configures the
 * interrupt type to
 * falling edge or active low sensitive; otherwise, it is rising edge or
 * active high.
 * 0:Active low (default)
 * 1:Active high
 */
#define IAXXX_GPIO_INT_POLARITY_COMMB_0_MASK 0x00001000
#define IAXXX_GPIO_INT_POLARITY_COMMB_0_RESET_VAL 0x0
#define IAXXX_GPIO_INT_POLARITY_COMMB_0_POS 12
#define IAXXX_GPIO_INT_POLARITY_COMMB_0_SIZE 1

/*
 * Controls the polarity of edge or level sensitivity that can occur on the
 * COMMB_1 port.
 * Whenever a 0 is written to a bit of this register, it configures the
 * interrupt type to
 * falling edge or active low sensitive; otherwise, it is rising edge or
 * active high.
 * 0:Active low (default)
 * 1:Active high
 */
#define IAXXX_GPIO_INT_POLARITY_COMMB_1_MASK 0x00002000
#define IAXXX_GPIO_INT_POLARITY_COMMB_1_RESET_VAL 0x0
#define IAXXX_GPIO_INT_POLARITY_COMMB_1_POS 13
#define IAXXX_GPIO_INT_POLARITY_COMMB_1_SIZE 1

/*
 * Controls the polarity of edge or level sensitivity that can occur on the
 * COMMB_2 port.
 * Whenever a 0 is written to a bit of this register, it configures the
 * interrupt type to
 * falling edge or active low sensitive; otherwise, it is rising edge or
 * active high.
 * 0:Active low (default)
 * 1:Active high
 */
#define IAXXX_GPIO_INT_POLARITY_COMMB_2_MASK 0x00004000
#define IAXXX_GPIO_INT_POLARITY_COMMB_2_RESET_VAL 0x0
#define IAXXX_GPIO_INT_POLARITY_COMMB_2_POS 14
#define IAXXX_GPIO_INT_POLARITY_COMMB_2_SIZE 1

/*
 * Controls the polarity of edge or level sensitivity that can occur on the
 * COMMB_3 port.
 * Whenever a 0 is written to a bit of this register, it configures the
 * interrupt type to
 * falling edge or active low sensitive; otherwise, it is rising edge or
 * active high.
 * 0:Active low (default)
 * 1:Active high
 */
#define IAXXX_GPIO_INT_POLARITY_COMMB_3_MASK 0x00008000
#define IAXXX_GPIO_INT_POLARITY_COMMB_3_RESET_VAL 0x0
#define IAXXX_GPIO_INT_POLARITY_COMMB_3_POS 15
#define IAXXX_GPIO_INT_POLARITY_COMMB_3_SIZE 1

/*
 * Controls the polarity of edge or level sensitivity that can occur on the
 * PORTA_CLK port.
 * Whenever a 0 is written to a bit of this register, it configures the
 * interrupt type to
 * falling edge or active low sensitive; otherwise, it is rising edge or
 * active high.
 * 0:Active low (default)
 * 1:Active high
 */
#define IAXXX_GPIO_INT_POLARITY_PORTA_CLK_MASK 0x00010000
#define IAXXX_GPIO_INT_POLARITY_PORTA_CLK_RESET_VAL 0x0
#define IAXXX_GPIO_INT_POLARITY_PORTA_CLK_POS 16
#define IAXXX_GPIO_INT_POLARITY_PORTA_CLK_SIZE 1

/*
 * Controls the polarity of edge or level sensitivity that can occur on the
 * PORTA_FS port.
 * Whenever a 0 is written to a bit of this register, it configures the
 * interrupt type to
 * falling edge or active low sensitive; otherwise, it is rising edge or
 * active high.
 * 0:Active low (default)
 * 1:Active high
 */
#define IAXXX_GPIO_INT_POLARITY_PORTA_FS_MASK 0x00020000
#define IAXXX_GPIO_INT_POLARITY_PORTA_FS_RESET_VAL 0x0
#define IAXXX_GPIO_INT_POLARITY_PORTA_FS_POS 17
#define IAXXX_GPIO_INT_POLARITY_PORTA_FS_SIZE 1

/*
 * Controls the polarity of edge or level sensitivity that can occur on the
 * PORTA_DI port.
 * Whenever a 0 is written to a bit of this register, it configures the
 * interrupt type to
 * falling edge or active low sensitive; otherwise, it is rising edge or
 * active high.
 * 0:Active low (default)
 * 1:Active high
 */
#define IAXXX_GPIO_INT_POLARITY_PORTA_DI_MASK 0x00040000
#define IAXXX_GPIO_INT_POLARITY_PORTA_DI_RESET_VAL 0x0
#define IAXXX_GPIO_INT_POLARITY_PORTA_DI_POS 18
#define IAXXX_GPIO_INT_POLARITY_PORTA_DI_SIZE 1

/*
 * Controls the polarity of edge or level sensitivity that can occur on the
 * PORTA_DO port.
 * Whenever a 0 is written to a bit of this register, it configures the
 * interrupt type to
 * falling edge or active low sensitive; otherwise, it is rising edge or
 * active high.
 * 0:Active low (default)
 * 1:Active high
 */
#define IAXXX_GPIO_INT_POLARITY_PORTA_DO_MASK 0x00080000
#define IAXXX_GPIO_INT_POLARITY_PORTA_DO_RESET_VAL 0x0
#define IAXXX_GPIO_INT_POLARITY_PORTA_DO_POS 19
#define IAXXX_GPIO_INT_POLARITY_PORTA_DO_SIZE 1

/*
 * Controls the polarity of edge or level sensitivity that can occur on the
 * PORTB_CLK port.
 * Whenever a 0 is written to a bit of this register, it configures the
 * interrupt type to
 * falling edge or active low sensitive; otherwise, it is rising edge or
 * active high.
 * 0:Active low (default)
 * 1:Active high
 */
#define IAXXX_GPIO_INT_POLARITY_PORTB_CLK_MASK 0x00100000
#define IAXXX_GPIO_INT_POLARITY_PORTB_CLK_RESET_VAL 0x0
#define IAXXX_GPIO_INT_POLARITY_PORTB_CLK_POS 20
#define IAXXX_GPIO_INT_POLARITY_PORTB_CLK_SIZE 1

/*
 * Controls the polarity of edge or level sensitivity that can occur on the
 * PORTB_FS port.
 * Whenever a 0 is written to a bit of this register, it configures the
 * interrupt type to
 * falling edge or active low sensitive; otherwise, it is rising edge or
 * active high.
 * 0:Active low (default)
 * 1:Active high
 */
#define IAXXX_GPIO_INT_POLARITY_PORTB_FS_MASK 0x00200000
#define IAXXX_GPIO_INT_POLARITY_PORTB_FS_RESET_VAL 0x0
#define IAXXX_GPIO_INT_POLARITY_PORTB_FS_POS 21
#define IAXXX_GPIO_INT_POLARITY_PORTB_FS_SIZE 1

/*
 * Controls the polarity of edge or level sensitivity that can occur on the
 * PORTB_DI port.
 * Whenever a 0 is written to a bit of this register, it configures the
 * interrupt type to
 * falling edge or active low sensitive; otherwise, it is rising edge or
 * active high.
 * 0:Active low (default)
 * 1:Active high
 */
#define IAXXX_GPIO_INT_POLARITY_PORTB_DI_MASK 0x00400000
#define IAXXX_GPIO_INT_POLARITY_PORTB_DI_RESET_VAL 0x0
#define IAXXX_GPIO_INT_POLARITY_PORTB_DI_POS 22
#define IAXXX_GPIO_INT_POLARITY_PORTB_DI_SIZE 1

/*
 * Controls the polarity of edge or level sensitivity that can occur on the
 * PORTB_DO port.
 * Whenever a 0 is written to a bit of this register, it configures the
 * interrupt type to
 * falling edge or active low sensitive; otherwise, it is rising edge or
 * active high.
 * 0:Active low (default)
 * 1:Active high
 */
#define IAXXX_GPIO_INT_POLARITY_PORTB_DO_MASK 0x00800000
#define IAXXX_GPIO_INT_POLARITY_PORTB_DO_RESET_VAL 0x0
#define IAXXX_GPIO_INT_POLARITY_PORTB_DO_POS 23
#define IAXXX_GPIO_INT_POLARITY_PORTB_DO_SIZE 1

/*
 * Controls the polarity of edge or level sensitivity that can occur on the
 * PORTC_CLK port.
 * Whenever a 0 is written to a bit of this register, it configures the
 * interrupt type to
 * falling edge or active low sensitive; otherwise, it is rising edge or
 * active high.
 * 0:Active low (default)
 * 1:Active high
 */
#define IAXXX_GPIO_INT_POLARITY_PORTC_CLK_MASK 0x01000000
#define IAXXX_GPIO_INT_POLARITY_PORTC_CLK_RESET_VAL 0x0
#define IAXXX_GPIO_INT_POLARITY_PORTC_CLK_POS 24
#define IAXXX_GPIO_INT_POLARITY_PORTC_CLK_SIZE 1

/*
 * Controls the polarity of edge or level sensitivity that can occur on the
 * PORTC_FS port.
 * Whenever a 0 is written to a bit of this register, it configures the
 * interrupt type to
 * falling edge or active low sensitive; otherwise, it is rising edge or
 * active high.
 * 0:Active low (default)
 * 1:Active high
 */
#define IAXXX_GPIO_INT_POLARITY_PORTC_FS_MASK 0x02000000
#define IAXXX_GPIO_INT_POLARITY_PORTC_FS_RESET_VAL 0x0
#define IAXXX_GPIO_INT_POLARITY_PORTC_FS_POS 25
#define IAXXX_GPIO_INT_POLARITY_PORTC_FS_SIZE 1

/*
 * Controls the polarity of edge or level sensitivity that can occur on the
 * PORTC_DI port.
 * Whenever a 0 is written to a bit of this register, it configures the
 * interrupt type to
 * falling edge or active low sensitive; otherwise, it is rising edge or
 * active high.
 * 0:Active low (default)
 * 1:Active high
 */
#define IAXXX_GPIO_INT_POLARITY_PORTC_DI_MASK 0x04000000
#define IAXXX_GPIO_INT_POLARITY_PORTC_DI_RESET_VAL 0x0
#define IAXXX_GPIO_INT_POLARITY_PORTC_DI_POS 26
#define IAXXX_GPIO_INT_POLARITY_PORTC_DI_SIZE 1

/*
 * Controls the polarity of edge or level sensitivity that can occur on the
 * PORTC_DO port.
 * Whenever a 0 is written to a bit of this register, it configures the
 * interrupt type to
 * falling edge or active low sensitive; otherwise, it is rising edge or
 * active high.
 * 0:Active low (default)
 * 1:Active high
 */
#define IAXXX_GPIO_INT_POLARITY_PORTC_DO_MASK 0x08000000
#define IAXXX_GPIO_INT_POLARITY_PORTC_DO_RESET_VAL 0x0
#define IAXXX_GPIO_INT_POLARITY_PORTC_DO_POS 27
#define IAXXX_GPIO_INT_POLARITY_PORTC_DO_SIZE 1

/*
 * Controls the polarity of edge or level sensitivity that can occur on the
 * PORTD_CLK port.
 * Whenever a 0 is written to a bit of this register, it configures the
 * interrupt type to
 * falling edge or active low sensitive; otherwise, it is rising edge or
 * active high.
 * 0:Active low (default)
 * 1:Active high
 */
#define IAXXX_GPIO_INT_POLARITY_PORTD_CLK_MASK 0x10000000
#define IAXXX_GPIO_INT_POLARITY_PORTD_CLK_RESET_VAL 0x0
#define IAXXX_GPIO_INT_POLARITY_PORTD_CLK_POS 28
#define IAXXX_GPIO_INT_POLARITY_PORTD_CLK_SIZE 1

/*
 * Controls the polarity of edge or level sensitivity that can occur on the
 * PORTD_FS port.
 * Whenever a 0 is written to a bit of this register, it configures the
 * interrupt type to
 * falling edge or active low sensitive; otherwise, it is rising edge or
 * active high.
 * 0:Active low (default)
 * 1:Active high
 */
#define IAXXX_GPIO_INT_POLARITY_PORTD_FS_MASK 0x20000000
#define IAXXX_GPIO_INT_POLARITY_PORTD_FS_RESET_VAL 0x0
#define IAXXX_GPIO_INT_POLARITY_PORTD_FS_POS 29
#define IAXXX_GPIO_INT_POLARITY_PORTD_FS_SIZE 1

/*
 * Controls the polarity of edge or level sensitivity that can occur on the
 * PORTD_DI port.
 * Whenever a 0 is written to a bit of this register, it configures the
 * interrupt type to
 * falling edge or active low sensitive; otherwise, it is rising edge or
 * active high.
 * 0:Active low (default)
 * 1:Active high
 */
#define IAXXX_GPIO_INT_POLARITY_PORTD_DI_MASK 0x40000000
#define IAXXX_GPIO_INT_POLARITY_PORTD_DI_RESET_VAL 0x0
#define IAXXX_GPIO_INT_POLARITY_PORTD_DI_POS 30
#define IAXXX_GPIO_INT_POLARITY_PORTD_DI_SIZE 1

/*
 * Controls the polarity of edge or level sensitivity that can occur on the
 * PORTD_DO port.
 * Whenever a 0 is written to a bit of this register, it configures the
 * interrupt type to
 * falling edge or active low sensitive; otherwise, it is rising edge or
 * active high.
 * 0:Active low (default)
 * 1:Active high
 */
#define IAXXX_GPIO_INT_POLARITY_PORTD_DO_MASK 0x80000000
#define IAXXX_GPIO_INT_POLARITY_PORTD_DO_RESET_VAL 0x0
#define IAXXX_GPIO_INT_POLARITY_PORTD_DO_POS 31
#define IAXXX_GPIO_INT_POLARITY_PORTD_DO_SIZE 1

/*** GPIO_INTSTATUS (0x50012040) ***/
/*
 */
#define IAXXX_GPIO_INTSTATUS_ADDR (0x50012040)
#define IAXXX_GPIO_INTSTATUS_MASK_VAL 0xffffffff
#define IAXXX_GPIO_INTSTATUS_RMASK_VAL 0xffffffff
#define IAXXX_GPIO_INTSTATUS_WMASK_VAL 0x00000000
#define IAXXX_GPIO_INTSTATUS_RESET_VAL 0x00000000

/*
 * Interrupt Status
 */
#define IAXXX_GPIO_INTSTATUS_COMMA_2_MASK 0x00000001
#define IAXXX_GPIO_INTSTATUS_COMMA_2_RESET_VAL 0x0
#define IAXXX_GPIO_INTSTATUS_COMMA_2_POS 0
#define IAXXX_GPIO_INTSTATUS_COMMA_2_SIZE 1

/*
 * Interrupt Status
 */
#define IAXXX_GPIO_INTSTATUS_COMMA_3_MASK 0x00000002
#define IAXXX_GPIO_INTSTATUS_COMMA_3_RESET_VAL 0x0
#define IAXXX_GPIO_INTSTATUS_COMMA_3_POS 1
#define IAXXX_GPIO_INTSTATUS_COMMA_3_SIZE 1

/*
 * Interrupt Status
 */
#define IAXXX_GPIO_INTSTATUS_INTR_EVNT_MASK 0x00000004
#define IAXXX_GPIO_INTSTATUS_INTR_EVNT_RESET_VAL 0x0
#define IAXXX_GPIO_INTSTATUS_INTR_EVNT_POS 2
#define IAXXX_GPIO_INTSTATUS_INTR_EVNT_SIZE 1

/*
 * Interrupt Status
 */
#define IAXXX_GPIO_INTSTATUS_CDC_RESET_N_MASK 0x00000008
#define IAXXX_GPIO_INTSTATUS_CDC_RESET_N_RESET_VAL 0x0
#define IAXXX_GPIO_INTSTATUS_CDC_RESET_N_POS 3
#define IAXXX_GPIO_INTSTATUS_CDC_RESET_N_SIZE 1

/*
 * Interrupt Status
 */
#define IAXXX_GPIO_INTSTATUS_CDC_INT_N_MASK 0x00000010
#define IAXXX_GPIO_INTSTATUS_CDC_INT_N_RESET_VAL 0x0
#define IAXXX_GPIO_INTSTATUS_CDC_INT_N_POS 4
#define IAXXX_GPIO_INTSTATUS_CDC_INT_N_SIZE 1

/*
 * Interrupt Status
 */
#define IAXXX_GPIO_INTSTATUS_CDC_I2C_SCL_MASK 0x00000020
#define IAXXX_GPIO_INTSTATUS_CDC_I2C_SCL_RESET_VAL 0x0
#define IAXXX_GPIO_INTSTATUS_CDC_I2C_SCL_POS 5
#define IAXXX_GPIO_INTSTATUS_CDC_I2C_SCL_SIZE 1

/*
 * Interrupt Status
 */
#define IAXXX_GPIO_INTSTATUS_CDC_I2C_SDA_WR_MASK 0x00000040
#define IAXXX_GPIO_INTSTATUS_CDC_I2C_SDA_WR_RESET_VAL 0x0
#define IAXXX_GPIO_INTSTATUS_CDC_I2C_SDA_WR_POS 6
#define IAXXX_GPIO_INTSTATUS_CDC_I2C_SDA_WR_SIZE 1

/*
 * Interrupt Status
 */
#define IAXXX_GPIO_INTSTATUS_CDC_I2C_SDA_RD_MASK 0x00000080
#define IAXXX_GPIO_INTSTATUS_CDC_I2C_SDA_RD_RESET_VAL 0x0
#define IAXXX_GPIO_INTSTATUS_CDC_I2C_SDA_RD_POS 7
#define IAXXX_GPIO_INTSTATUS_CDC_I2C_SDA_RD_SIZE 1

/*
 * Interrupt Status
 */
#define IAXXX_GPIO_INTSTATUS_CDC_PWRON_MASK 0x00000100
#define IAXXX_GPIO_INTSTATUS_CDC_PWRON_RESET_VAL 0x0
#define IAXXX_GPIO_INTSTATUS_CDC_PWRON_POS 8
#define IAXXX_GPIO_INTSTATUS_CDC_PWRON_SIZE 1

/*
 * Interrupt Status
 */
#define IAXXX_GPIO_INTSTATUS_INTR_API_MASK 0x00000200
#define IAXXX_GPIO_INTSTATUS_INTR_API_RESET_VAL 0x0
#define IAXXX_GPIO_INTSTATUS_INTR_API_POS 9
#define IAXXX_GPIO_INTSTATUS_INTR_API_SIZE 1

/*
 * Interrupt Status
 */
#define IAXXX_GPIO_INTSTATUS_COMMA_0_MASK 0x00000400
#define IAXXX_GPIO_INTSTATUS_COMMA_0_RESET_VAL 0x0
#define IAXXX_GPIO_INTSTATUS_COMMA_0_POS 10
#define IAXXX_GPIO_INTSTATUS_COMMA_0_SIZE 1

/*
 * Interrupt Status
 */
#define IAXXX_GPIO_INTSTATUS_COMMA_1_MASK 0x00000800
#define IAXXX_GPIO_INTSTATUS_COMMA_1_RESET_VAL 0x0
#define IAXXX_GPIO_INTSTATUS_COMMA_1_POS 11
#define IAXXX_GPIO_INTSTATUS_COMMA_1_SIZE 1

/*
 * Interrupt Status
 */
#define IAXXX_GPIO_INTSTATUS_COMMB_0_MASK 0x00001000
#define IAXXX_GPIO_INTSTATUS_COMMB_0_RESET_VAL 0x0
#define IAXXX_GPIO_INTSTATUS_COMMB_0_POS 12
#define IAXXX_GPIO_INTSTATUS_COMMB_0_SIZE 1

/*
 * Interrupt Status
 */
#define IAXXX_GPIO_INTSTATUS_COMMB_1_MASK 0x00002000
#define IAXXX_GPIO_INTSTATUS_COMMB_1_RESET_VAL 0x0
#define IAXXX_GPIO_INTSTATUS_COMMB_1_POS 13
#define IAXXX_GPIO_INTSTATUS_COMMB_1_SIZE 1

/*
 * Interrupt Status
 */
#define IAXXX_GPIO_INTSTATUS_COMMB_2_MASK 0x00004000
#define IAXXX_GPIO_INTSTATUS_COMMB_2_RESET_VAL 0x0
#define IAXXX_GPIO_INTSTATUS_COMMB_2_POS 14
#define IAXXX_GPIO_INTSTATUS_COMMB_2_SIZE 1

/*
 * Interrupt Status
 */
#define IAXXX_GPIO_INTSTATUS_COMMB_3_MASK 0x00008000
#define IAXXX_GPIO_INTSTATUS_COMMB_3_RESET_VAL 0x0
#define IAXXX_GPIO_INTSTATUS_COMMB_3_POS 15
#define IAXXX_GPIO_INTSTATUS_COMMB_3_SIZE 1

/*
 * Interrupt Status
 */
#define IAXXX_GPIO_INTSTATUS_PORTA_CLK_MASK 0x00010000
#define IAXXX_GPIO_INTSTATUS_PORTA_CLK_RESET_VAL 0x0
#define IAXXX_GPIO_INTSTATUS_PORTA_CLK_POS 16
#define IAXXX_GPIO_INTSTATUS_PORTA_CLK_SIZE 1

/*
 * Interrupt Status
 */
#define IAXXX_GPIO_INTSTATUS_PORTA_FS_MASK 0x00020000
#define IAXXX_GPIO_INTSTATUS_PORTA_FS_RESET_VAL 0x0
#define IAXXX_GPIO_INTSTATUS_PORTA_FS_POS 17
#define IAXXX_GPIO_INTSTATUS_PORTA_FS_SIZE 1

/*
 * Interrupt Status
 */
#define IAXXX_GPIO_INTSTATUS_PORTA_DI_MASK 0x00040000
#define IAXXX_GPIO_INTSTATUS_PORTA_DI_RESET_VAL 0x0
#define IAXXX_GPIO_INTSTATUS_PORTA_DI_POS 18
#define IAXXX_GPIO_INTSTATUS_PORTA_DI_SIZE 1

/*
 * Interrupt Status
 */
#define IAXXX_GPIO_INTSTATUS_PORTA_DO_MASK 0x00080000
#define IAXXX_GPIO_INTSTATUS_PORTA_DO_RESET_VAL 0x0
#define IAXXX_GPIO_INTSTATUS_PORTA_DO_POS 19
#define IAXXX_GPIO_INTSTATUS_PORTA_DO_SIZE 1

/*
 * Interrupt Status
 */
#define IAXXX_GPIO_INTSTATUS_PORTB_CLK_MASK 0x00100000
#define IAXXX_GPIO_INTSTATUS_PORTB_CLK_RESET_VAL 0x0
#define IAXXX_GPIO_INTSTATUS_PORTB_CLK_POS 20
#define IAXXX_GPIO_INTSTATUS_PORTB_CLK_SIZE 1

/*
 * Interrupt Status
 */
#define IAXXX_GPIO_INTSTATUS_PORTB_FS_MASK 0x00200000
#define IAXXX_GPIO_INTSTATUS_PORTB_FS_RESET_VAL 0x0
#define IAXXX_GPIO_INTSTATUS_PORTB_FS_POS 21
#define IAXXX_GPIO_INTSTATUS_PORTB_FS_SIZE 1

/*
 * Interrupt Status
 */
#define IAXXX_GPIO_INTSTATUS_PORTB_DI_MASK 0x00400000
#define IAXXX_GPIO_INTSTATUS_PORTB_DI_RESET_VAL 0x0
#define IAXXX_GPIO_INTSTATUS_PORTB_DI_POS 22
#define IAXXX_GPIO_INTSTATUS_PORTB_DI_SIZE 1

/*
 * Interrupt Status
 */
#define IAXXX_GPIO_INTSTATUS_PORTB_DO_MASK 0x00800000
#define IAXXX_GPIO_INTSTATUS_PORTB_DO_RESET_VAL 0x0
#define IAXXX_GPIO_INTSTATUS_PORTB_DO_POS 23
#define IAXXX_GPIO_INTSTATUS_PORTB_DO_SIZE 1

/*
 * Interrupt Status
 */
#define IAXXX_GPIO_INTSTATUS_PORTC_CLK_MASK 0x01000000
#define IAXXX_GPIO_INTSTATUS_PORTC_CLK_RESET_VAL 0x0
#define IAXXX_GPIO_INTSTATUS_PORTC_CLK_POS 24
#define IAXXX_GPIO_INTSTATUS_PORTC_CLK_SIZE 1

/*
 * Interrupt Status
 */
#define IAXXX_GPIO_INTSTATUS_PORTC_FS_MASK 0x02000000
#define IAXXX_GPIO_INTSTATUS_PORTC_FS_RESET_VAL 0x0
#define IAXXX_GPIO_INTSTATUS_PORTC_FS_POS 25
#define IAXXX_GPIO_INTSTATUS_PORTC_FS_SIZE 1

/*
 * Interrupt Status
 */
#define IAXXX_GPIO_INTSTATUS_PORTC_DI_MASK 0x04000000
#define IAXXX_GPIO_INTSTATUS_PORTC_DI_RESET_VAL 0x0
#define IAXXX_GPIO_INTSTATUS_PORTC_DI_POS 26
#define IAXXX_GPIO_INTSTATUS_PORTC_DI_SIZE 1

/*
 * Interrupt Status
 */
#define IAXXX_GPIO_INTSTATUS_PORTC_DO_MASK 0x08000000
#define IAXXX_GPIO_INTSTATUS_PORTC_DO_RESET_VAL 0x0
#define IAXXX_GPIO_INTSTATUS_PORTC_DO_POS 27
#define IAXXX_GPIO_INTSTATUS_PORTC_DO_SIZE 1

/*
 * Interrupt Status
 */
#define IAXXX_GPIO_INTSTATUS_PORTD_CLK_MASK 0x10000000
#define IAXXX_GPIO_INTSTATUS_PORTD_CLK_RESET_VAL 0x0
#define IAXXX_GPIO_INTSTATUS_PORTD_CLK_POS 28
#define IAXXX_GPIO_INTSTATUS_PORTD_CLK_SIZE 1

/*
 * Interrupt Status
 */
#define IAXXX_GPIO_INTSTATUS_PORTD_FS_MASK 0x20000000
#define IAXXX_GPIO_INTSTATUS_PORTD_FS_RESET_VAL 0x0
#define IAXXX_GPIO_INTSTATUS_PORTD_FS_POS 29
#define IAXXX_GPIO_INTSTATUS_PORTD_FS_SIZE 1

/*
 * Interrupt Status
 */
#define IAXXX_GPIO_INTSTATUS_PORTD_DI_MASK 0x40000000
#define IAXXX_GPIO_INTSTATUS_PORTD_DI_RESET_VAL 0x0
#define IAXXX_GPIO_INTSTATUS_PORTD_DI_POS 30
#define IAXXX_GPIO_INTSTATUS_PORTD_DI_SIZE 1

/*
 * Interrupt Status
 */
#define IAXXX_GPIO_INTSTATUS_PORTD_DO_MASK 0x80000000
#define IAXXX_GPIO_INTSTATUS_PORTD_DO_RESET_VAL 0x0
#define IAXXX_GPIO_INTSTATUS_PORTD_DO_POS 31
#define IAXXX_GPIO_INTSTATUS_PORTD_DO_SIZE 1

/*** GPIO_RAW_INTSTATUS (0x50012044) ***/
/*
 */
#define IAXXX_GPIO_RAW_INTSTATUS_ADDR (0x50012044)
#define IAXXX_GPIO_RAW_INTSTATUS_MASK_VAL 0xffffffff
#define IAXXX_GPIO_RAW_INTSTATUS_RMASK_VAL 0xffffffff
#define IAXXX_GPIO_RAW_INTSTATUS_WMASK_VAL 0x00000000
#define IAXXX_GPIO_RAW_INTSTATUS_RESET_VAL 0x00000000

/*
 * Raw Interrupt Status
 */
#define IAXXX_GPIO_RAW_INTSTATUS_COMMA_2_MASK 0x00000001
#define IAXXX_GPIO_RAW_INTSTATUS_COMMA_2_RESET_VAL 0x0
#define IAXXX_GPIO_RAW_INTSTATUS_COMMA_2_POS 0
#define IAXXX_GPIO_RAW_INTSTATUS_COMMA_2_SIZE 1

/*
 * Raw Interrupt Status
 */
#define IAXXX_GPIO_RAW_INTSTATUS_COMMA_3_MASK 0x00000002
#define IAXXX_GPIO_RAW_INTSTATUS_COMMA_3_RESET_VAL 0x0
#define IAXXX_GPIO_RAW_INTSTATUS_COMMA_3_POS 1
#define IAXXX_GPIO_RAW_INTSTATUS_COMMA_3_SIZE 1

/*
 * Raw Interrupt Status
 */
#define IAXXX_GPIO_RAW_INTSTATUS_INTR_EVNT_MASK 0x00000004
#define IAXXX_GPIO_RAW_INTSTATUS_INTR_EVNT_RESET_VAL 0x0
#define IAXXX_GPIO_RAW_INTSTATUS_INTR_EVNT_POS 2
#define IAXXX_GPIO_RAW_INTSTATUS_INTR_EVNT_SIZE 1

/*
 * Raw Interrupt Status
 */
#define IAXXX_GPIO_RAW_INTSTATUS_CDC_RESET_N_MASK 0x00000008
#define IAXXX_GPIO_RAW_INTSTATUS_CDC_RESET_N_RESET_VAL 0x0
#define IAXXX_GPIO_RAW_INTSTATUS_CDC_RESET_N_POS 3
#define IAXXX_GPIO_RAW_INTSTATUS_CDC_RESET_N_SIZE 1

/*
 * Raw Interrupt Status
 */
#define IAXXX_GPIO_RAW_INTSTATUS_CDC_INT_N_MASK 0x00000010
#define IAXXX_GPIO_RAW_INTSTATUS_CDC_INT_N_RESET_VAL 0x0
#define IAXXX_GPIO_RAW_INTSTATUS_CDC_INT_N_POS 4
#define IAXXX_GPIO_RAW_INTSTATUS_CDC_INT_N_SIZE 1

/*
 * Raw Interrupt Status
 */
#define IAXXX_GPIO_RAW_INTSTATUS_CDC_I2C_SCL_MASK 0x00000020
#define IAXXX_GPIO_RAW_INTSTATUS_CDC_I2C_SCL_RESET_VAL 0x0
#define IAXXX_GPIO_RAW_INTSTATUS_CDC_I2C_SCL_POS 5
#define IAXXX_GPIO_RAW_INTSTATUS_CDC_I2C_SCL_SIZE 1

/*
 * Raw Interrupt Status
 */
#define IAXXX_GPIO_RAW_INTSTATUS_CDC_I2C_SDA_WR_MASK 0x00000040
#define IAXXX_GPIO_RAW_INTSTATUS_CDC_I2C_SDA_WR_RESET_VAL 0x0
#define IAXXX_GPIO_RAW_INTSTATUS_CDC_I2C_SDA_WR_POS 6
#define IAXXX_GPIO_RAW_INTSTATUS_CDC_I2C_SDA_WR_SIZE 1

/*
 * Raw Interrupt Status
 */
#define IAXXX_GPIO_RAW_INTSTATUS_CDC_I2C_SDA_RD_MASK 0x00000080
#define IAXXX_GPIO_RAW_INTSTATUS_CDC_I2C_SDA_RD_RESET_VAL 0x0
#define IAXXX_GPIO_RAW_INTSTATUS_CDC_I2C_SDA_RD_POS 7
#define IAXXX_GPIO_RAW_INTSTATUS_CDC_I2C_SDA_RD_SIZE 1

/*
 * Raw Interrupt Status
 */
#define IAXXX_GPIO_RAW_INTSTATUS_CDC_PWRON_MASK 0x00000100
#define IAXXX_GPIO_RAW_INTSTATUS_CDC_PWRON_RESET_VAL 0x0
#define IAXXX_GPIO_RAW_INTSTATUS_CDC_PWRON_POS 8
#define IAXXX_GPIO_RAW_INTSTATUS_CDC_PWRON_SIZE 1

/*
 * Raw Interrupt Status
 */
#define IAXXX_GPIO_RAW_INTSTATUS_INTR_API_MASK 0x00000200
#define IAXXX_GPIO_RAW_INTSTATUS_INTR_API_RESET_VAL 0x0
#define IAXXX_GPIO_RAW_INTSTATUS_INTR_API_POS 9
#define IAXXX_GPIO_RAW_INTSTATUS_INTR_API_SIZE 1

/*
 * Raw Interrupt Status
 */
#define IAXXX_GPIO_RAW_INTSTATUS_COMMA_0_MASK 0x00000400
#define IAXXX_GPIO_RAW_INTSTATUS_COMMA_0_RESET_VAL 0x0
#define IAXXX_GPIO_RAW_INTSTATUS_COMMA_0_POS 10
#define IAXXX_GPIO_RAW_INTSTATUS_COMMA_0_SIZE 1

/*
 * Raw Interrupt Status
 */
#define IAXXX_GPIO_RAW_INTSTATUS_COMMA_1_MASK 0x00000800
#define IAXXX_GPIO_RAW_INTSTATUS_COMMA_1_RESET_VAL 0x0
#define IAXXX_GPIO_RAW_INTSTATUS_COMMA_1_POS 11
#define IAXXX_GPIO_RAW_INTSTATUS_COMMA_1_SIZE 1

/*
 * Raw Interrupt Status
 */
#define IAXXX_GPIO_RAW_INTSTATUS_COMMB_0_MASK 0x00001000
#define IAXXX_GPIO_RAW_INTSTATUS_COMMB_0_RESET_VAL 0x0
#define IAXXX_GPIO_RAW_INTSTATUS_COMMB_0_POS 12
#define IAXXX_GPIO_RAW_INTSTATUS_COMMB_0_SIZE 1

/*
 * Raw Interrupt Status
 */
#define IAXXX_GPIO_RAW_INTSTATUS_COMMB_1_MASK 0x00002000
#define IAXXX_GPIO_RAW_INTSTATUS_COMMB_1_RESET_VAL 0x0
#define IAXXX_GPIO_RAW_INTSTATUS_COMMB_1_POS 13
#define IAXXX_GPIO_RAW_INTSTATUS_COMMB_1_SIZE 1

/*
 * Raw Interrupt Status
 */
#define IAXXX_GPIO_RAW_INTSTATUS_COMMB_2_MASK 0x00004000
#define IAXXX_GPIO_RAW_INTSTATUS_COMMB_2_RESET_VAL 0x0
#define IAXXX_GPIO_RAW_INTSTATUS_COMMB_2_POS 14
#define IAXXX_GPIO_RAW_INTSTATUS_COMMB_2_SIZE 1

/*
 * Raw Interrupt Status
 */
#define IAXXX_GPIO_RAW_INTSTATUS_COMMB_3_MASK 0x00008000
#define IAXXX_GPIO_RAW_INTSTATUS_COMMB_3_RESET_VAL 0x0
#define IAXXX_GPIO_RAW_INTSTATUS_COMMB_3_POS 15
#define IAXXX_GPIO_RAW_INTSTATUS_COMMB_3_SIZE 1

/*
 * Raw Interrupt Status
 */
#define IAXXX_GPIO_RAW_INTSTATUS_PORTA_CLK_MASK 0x00010000
#define IAXXX_GPIO_RAW_INTSTATUS_PORTA_CLK_RESET_VAL 0x0
#define IAXXX_GPIO_RAW_INTSTATUS_PORTA_CLK_POS 16
#define IAXXX_GPIO_RAW_INTSTATUS_PORTA_CLK_SIZE 1

/*
 * Raw Interrupt Status
 */
#define IAXXX_GPIO_RAW_INTSTATUS_PORTA_FS_MASK 0x00020000
#define IAXXX_GPIO_RAW_INTSTATUS_PORTA_FS_RESET_VAL 0x0
#define IAXXX_GPIO_RAW_INTSTATUS_PORTA_FS_POS 17
#define IAXXX_GPIO_RAW_INTSTATUS_PORTA_FS_SIZE 1

/*
 * Raw Interrupt Status
 */
#define IAXXX_GPIO_RAW_INTSTATUS_PORTA_DI_MASK 0x00040000
#define IAXXX_GPIO_RAW_INTSTATUS_PORTA_DI_RESET_VAL 0x0
#define IAXXX_GPIO_RAW_INTSTATUS_PORTA_DI_POS 18
#define IAXXX_GPIO_RAW_INTSTATUS_PORTA_DI_SIZE 1

/*
 * Raw Interrupt Status
 */
#define IAXXX_GPIO_RAW_INTSTATUS_PORTA_DO_MASK 0x00080000
#define IAXXX_GPIO_RAW_INTSTATUS_PORTA_DO_RESET_VAL 0x0
#define IAXXX_GPIO_RAW_INTSTATUS_PORTA_DO_POS 19
#define IAXXX_GPIO_RAW_INTSTATUS_PORTA_DO_SIZE 1

/*
 * Raw Interrupt Status
 */
#define IAXXX_GPIO_RAW_INTSTATUS_PORTB_CLK_MASK 0x00100000
#define IAXXX_GPIO_RAW_INTSTATUS_PORTB_CLK_RESET_VAL 0x0
#define IAXXX_GPIO_RAW_INTSTATUS_PORTB_CLK_POS 20
#define IAXXX_GPIO_RAW_INTSTATUS_PORTB_CLK_SIZE 1

/*
 * Raw Interrupt Status
 */
#define IAXXX_GPIO_RAW_INTSTATUS_PORTB_FS_MASK 0x00200000
#define IAXXX_GPIO_RAW_INTSTATUS_PORTB_FS_RESET_VAL 0x0
#define IAXXX_GPIO_RAW_INTSTATUS_PORTB_FS_POS 21
#define IAXXX_GPIO_RAW_INTSTATUS_PORTB_FS_SIZE 1

/*
 * Raw Interrupt Status
 */
#define IAXXX_GPIO_RAW_INTSTATUS_PORTB_DI_MASK 0x00400000
#define IAXXX_GPIO_RAW_INTSTATUS_PORTB_DI_RESET_VAL 0x0
#define IAXXX_GPIO_RAW_INTSTATUS_PORTB_DI_POS 22
#define IAXXX_GPIO_RAW_INTSTATUS_PORTB_DI_SIZE 1

/*
 * Raw Interrupt Status
 */
#define IAXXX_GPIO_RAW_INTSTATUS_PORTB_DO_MASK 0x00800000
#define IAXXX_GPIO_RAW_INTSTATUS_PORTB_DO_RESET_VAL 0x0
#define IAXXX_GPIO_RAW_INTSTATUS_PORTB_DO_POS 23
#define IAXXX_GPIO_RAW_INTSTATUS_PORTB_DO_SIZE 1

/*
 * Raw Interrupt Status
 */
#define IAXXX_GPIO_RAW_INTSTATUS_PORTC_CLK_MASK 0x01000000
#define IAXXX_GPIO_RAW_INTSTATUS_PORTC_CLK_RESET_VAL 0x0
#define IAXXX_GPIO_RAW_INTSTATUS_PORTC_CLK_POS 24
#define IAXXX_GPIO_RAW_INTSTATUS_PORTC_CLK_SIZE 1

/*
 * Raw Interrupt Status
 */
#define IAXXX_GPIO_RAW_INTSTATUS_PORTC_FS_MASK 0x02000000
#define IAXXX_GPIO_RAW_INTSTATUS_PORTC_FS_RESET_VAL 0x0
#define IAXXX_GPIO_RAW_INTSTATUS_PORTC_FS_POS 25
#define IAXXX_GPIO_RAW_INTSTATUS_PORTC_FS_SIZE 1

/*
 * Raw Interrupt Status
 */
#define IAXXX_GPIO_RAW_INTSTATUS_PORTC_DI_MASK 0x04000000
#define IAXXX_GPIO_RAW_INTSTATUS_PORTC_DI_RESET_VAL 0x0
#define IAXXX_GPIO_RAW_INTSTATUS_PORTC_DI_POS 26
#define IAXXX_GPIO_RAW_INTSTATUS_PORTC_DI_SIZE 1

/*
 * Raw Interrupt Status
 */
#define IAXXX_GPIO_RAW_INTSTATUS_PORTC_DO_MASK 0x08000000
#define IAXXX_GPIO_RAW_INTSTATUS_PORTC_DO_RESET_VAL 0x0
#define IAXXX_GPIO_RAW_INTSTATUS_PORTC_DO_POS 27
#define IAXXX_GPIO_RAW_INTSTATUS_PORTC_DO_SIZE 1

/*
 * Raw Interrupt Status
 */
#define IAXXX_GPIO_RAW_INTSTATUS_PORTD_CLK_MASK 0x10000000
#define IAXXX_GPIO_RAW_INTSTATUS_PORTD_CLK_RESET_VAL 0x0
#define IAXXX_GPIO_RAW_INTSTATUS_PORTD_CLK_POS 28
#define IAXXX_GPIO_RAW_INTSTATUS_PORTD_CLK_SIZE 1

/*
 * Raw Interrupt Status
 */
#define IAXXX_GPIO_RAW_INTSTATUS_PORTD_FS_MASK 0x20000000
#define IAXXX_GPIO_RAW_INTSTATUS_PORTD_FS_RESET_VAL 0x0
#define IAXXX_GPIO_RAW_INTSTATUS_PORTD_FS_POS 29
#define IAXXX_GPIO_RAW_INTSTATUS_PORTD_FS_SIZE 1

/*
 * Raw Interrupt Status
 */
#define IAXXX_GPIO_RAW_INTSTATUS_PORTD_DI_MASK 0x40000000
#define IAXXX_GPIO_RAW_INTSTATUS_PORTD_DI_RESET_VAL 0x0
#define IAXXX_GPIO_RAW_INTSTATUS_PORTD_DI_POS 30
#define IAXXX_GPIO_RAW_INTSTATUS_PORTD_DI_SIZE 1

/*
 * Raw Interrupt Status
 */
#define IAXXX_GPIO_RAW_INTSTATUS_PORTD_DO_MASK 0x80000000
#define IAXXX_GPIO_RAW_INTSTATUS_PORTD_DO_RESET_VAL 0x0
#define IAXXX_GPIO_RAW_INTSTATUS_PORTD_DO_POS 31
#define IAXXX_GPIO_RAW_INTSTATUS_PORTD_DO_SIZE 1

/*** GPIO_PORTA_EOI (0x5001204c) ***/
/*
 */
#define IAXXX_GPIO_PORTA_EOI_ADDR (0x5001204c)
#define IAXXX_GPIO_PORTA_EOI_MASK_VAL 0xffffffff
#define IAXXX_GPIO_PORTA_EOI_RMASK_VAL 0x00000000
#define IAXXX_GPIO_PORTA_EOI_WMASK_VAL 0xffffffff
#define IAXXX_GPIO_PORTA_EOI_RESET_VAL 0x00000000

/*
 * Controls the clearing of edge type interrupts for the COMMA_2 bit.
 * When a 1 is written into a corresponding bit of this register, the
 * interrupt is cleared.
 * 0: No interrupt clear (default)
 * 1: Clear interrupt
 */
#define IAXXX_GPIO_PORTA_EOI_COMMA_2_MASK 0x00000001
#define IAXXX_GPIO_PORTA_EOI_COMMA_2_RESET_VAL 0x0
#define IAXXX_GPIO_PORTA_EOI_COMMA_2_POS 0
#define IAXXX_GPIO_PORTA_EOI_COMMA_2_SIZE 1

/*
 * Controls the clearing of edge type interrupts for the COMMA_3 bit.
 * When a 1 is written into a corresponding bit of this register, the
 * interrupt is cleared.
 * 0: No interrupt clear (default)
 * 1: Clear interrupt
 */
#define IAXXX_GPIO_PORTA_EOI_COMMA_3_MASK 0x00000002
#define IAXXX_GPIO_PORTA_EOI_COMMA_3_RESET_VAL 0x0
#define IAXXX_GPIO_PORTA_EOI_COMMA_3_POS 1
#define IAXXX_GPIO_PORTA_EOI_COMMA_3_SIZE 1

/*
 * Controls the clearing of edge type interrupts for the INTR_EVNT bit.
 * When a 1 is written into a corresponding bit of this register, the
 * interrupt is cleared.
 * 0: No interrupt clear (default)
 * 1: Clear interrupt
 */
#define IAXXX_GPIO_PORTA_EOI_INTR_EVNT_MASK 0x00000004
#define IAXXX_GPIO_PORTA_EOI_INTR_EVNT_RESET_VAL 0x0
#define IAXXX_GPIO_PORTA_EOI_INTR_EVNT_POS 2
#define IAXXX_GPIO_PORTA_EOI_INTR_EVNT_SIZE 1

/*
 * Controls the clearing of edge type interrupts for the CDC_RESET_N bit.
 * When a 1 is written into a corresponding bit of this register, the
 * interrupt is cleared.
 * 0: No interrupt clear (default)
 * 1: Clear interrupt
 */
#define IAXXX_GPIO_PORTA_EOI_CDC_RESET_N_MASK 0x00000008
#define IAXXX_GPIO_PORTA_EOI_CDC_RESET_N_RESET_VAL 0x0
#define IAXXX_GPIO_PORTA_EOI_CDC_RESET_N_POS 3
#define IAXXX_GPIO_PORTA_EOI_CDC_RESET_N_SIZE 1

/*
 * Controls the clearing of edge type interrupts for the CDC_INT_N bit.
 * When a 1 is written into a corresponding bit of this register, the
 * interrupt is cleared.
 * 0: No interrupt clear (default)
 * 1: Clear interrupt
 */
#define IAXXX_GPIO_PORTA_EOI_CDC_INT_N_MASK 0x00000010
#define IAXXX_GPIO_PORTA_EOI_CDC_INT_N_RESET_VAL 0x0
#define IAXXX_GPIO_PORTA_EOI_CDC_INT_N_POS 4
#define IAXXX_GPIO_PORTA_EOI_CDC_INT_N_SIZE 1

/*
 * Controls the clearing of edge type interrupts for the CDC_I2C_SCL bit.
 * When a 1 is written into a corresponding bit of this register, the
 * interrupt is cleared.
 * 0: No interrupt clear (default)
 * 1: Clear interrupt
 */
#define IAXXX_GPIO_PORTA_EOI_CDC_I2C_SCL_MASK 0x00000020
#define IAXXX_GPIO_PORTA_EOI_CDC_I2C_SCL_RESET_VAL 0x0
#define IAXXX_GPIO_PORTA_EOI_CDC_I2C_SCL_POS 5
#define IAXXX_GPIO_PORTA_EOI_CDC_I2C_SCL_SIZE 1

/*
 * Controls the clearing of edge type interrupts for the CDC_I2C_SDA_WR bit.
 * When a 1 is written into a corresponding bit of this register, the
 * interrupt is cleared.
 * 0: No interrupt clear (default)
 * 1: Clear interrupt
 */
#define IAXXX_GPIO_PORTA_EOI_CDC_I2C_SDA_WR_MASK 0x00000040
#define IAXXX_GPIO_PORTA_EOI_CDC_I2C_SDA_WR_RESET_VAL 0x0
#define IAXXX_GPIO_PORTA_EOI_CDC_I2C_SDA_WR_POS 6
#define IAXXX_GPIO_PORTA_EOI_CDC_I2C_SDA_WR_SIZE 1

/*
 * Controls the clearing of edge type interrupts for the CDC_I2C_SDA_RD bit.
 * When a 1 is written into a corresponding bit of this register, the
 * interrupt is cleared.
 * 0: No interrupt clear (default)
 * 1: Clear interrupt
 */
#define IAXXX_GPIO_PORTA_EOI_CDC_I2C_SDA_RD_MASK 0x00000080
#define IAXXX_GPIO_PORTA_EOI_CDC_I2C_SDA_RD_RESET_VAL 0x0
#define IAXXX_GPIO_PORTA_EOI_CDC_I2C_SDA_RD_POS 7
#define IAXXX_GPIO_PORTA_EOI_CDC_I2C_SDA_RD_SIZE 1

/*
 * Controls the clearing of edge type interrupts for the CDC_PWRON bit.
 * When a 1 is written into a corresponding bit of this register, the
 * interrupt is cleared.
 * 0: No interrupt clear (default)
 * 1: Clear interrupt
 */
#define IAXXX_GPIO_PORTA_EOI_CDC_PWRON_MASK 0x00000100
#define IAXXX_GPIO_PORTA_EOI_CDC_PWRON_RESET_VAL 0x0
#define IAXXX_GPIO_PORTA_EOI_CDC_PWRON_POS 8
#define IAXXX_GPIO_PORTA_EOI_CDC_PWRON_SIZE 1

/*
 * Controls the clearing of edge type interrupts for the INTR_API bit.
 * When a 1 is written into a corresponding bit of this register, the
 * interrupt is cleared.
 * 0: No interrupt clear (default)
 * 1: Clear interrupt
 */
#define IAXXX_GPIO_PORTA_EOI_INTR_API_MASK 0x00000200
#define IAXXX_GPIO_PORTA_EOI_INTR_API_RESET_VAL 0x0
#define IAXXX_GPIO_PORTA_EOI_INTR_API_POS 9
#define IAXXX_GPIO_PORTA_EOI_INTR_API_SIZE 1

/*
 * Controls the clearing of edge type interrupts for the COMMA_0 bit.
 * When a 1 is written into a corresponding bit of this register, the
 * interrupt is cleared.
 * 0: No interrupt clear (default)
 * 1: Clear interrupt
 */
#define IAXXX_GPIO_PORTA_EOI_COMMA_0_MASK 0x00000400
#define IAXXX_GPIO_PORTA_EOI_COMMA_0_RESET_VAL 0x0
#define IAXXX_GPIO_PORTA_EOI_COMMA_0_POS 10
#define IAXXX_GPIO_PORTA_EOI_COMMA_0_SIZE 1

/*
 * Controls the clearing of edge type interrupts for the COMMA_1 bit.
 * When a 1 is written into a corresponding bit of this register, the
 * interrupt is cleared.
 * 0: No interrupt clear (default)
 * 1: Clear interrupt
 */
#define IAXXX_GPIO_PORTA_EOI_COMMA_1_MASK 0x00000800
#define IAXXX_GPIO_PORTA_EOI_COMMA_1_RESET_VAL 0x0
#define IAXXX_GPIO_PORTA_EOI_COMMA_1_POS 11
#define IAXXX_GPIO_PORTA_EOI_COMMA_1_SIZE 1

/*
 * Controls the clearing of edge type interrupts for the COMMB_0 bit.
 * When a 1 is written into a corresponding bit of this register, the
 * interrupt is cleared.
 * 0: No interrupt clear (default)
 * 1: Clear interrupt
 */
#define IAXXX_GPIO_PORTA_EOI_COMMB_0_MASK 0x00001000
#define IAXXX_GPIO_PORTA_EOI_COMMB_0_RESET_VAL 0x0
#define IAXXX_GPIO_PORTA_EOI_COMMB_0_POS 12
#define IAXXX_GPIO_PORTA_EOI_COMMB_0_SIZE 1

/*
 * Controls the clearing of edge type interrupts for the COMMB_1 bit.
 * When a 1 is written into a corresponding bit of this register, the
 * interrupt is cleared.
 * 0: No interrupt clear (default)
 * 1: Clear interrupt
 */
#define IAXXX_GPIO_PORTA_EOI_COMMB_1_MASK 0x00002000
#define IAXXX_GPIO_PORTA_EOI_COMMB_1_RESET_VAL 0x0
#define IAXXX_GPIO_PORTA_EOI_COMMB_1_POS 13
#define IAXXX_GPIO_PORTA_EOI_COMMB_1_SIZE 1

/*
 * Controls the clearing of edge type interrupts for the COMMB_2 bit.
 * When a 1 is written into a corresponding bit of this register, the
 * interrupt is cleared.
 * 0: No interrupt clear (default)
 * 1: Clear interrupt
 */
#define IAXXX_GPIO_PORTA_EOI_COMMB_2_MASK 0x00004000
#define IAXXX_GPIO_PORTA_EOI_COMMB_2_RESET_VAL 0x0
#define IAXXX_GPIO_PORTA_EOI_COMMB_2_POS 14
#define IAXXX_GPIO_PORTA_EOI_COMMB_2_SIZE 1

/*
 * Controls the clearing of edge type interrupts for the COMMB_3 bit.
 * When a 1 is written into a corresponding bit of this register, the
 * interrupt is cleared.
 * 0: No interrupt clear (default)
 * 1: Clear interrupt
 */
#define IAXXX_GPIO_PORTA_EOI_COMMB_3_MASK 0x00008000
#define IAXXX_GPIO_PORTA_EOI_COMMB_3_RESET_VAL 0x0
#define IAXXX_GPIO_PORTA_EOI_COMMB_3_POS 15
#define IAXXX_GPIO_PORTA_EOI_COMMB_3_SIZE 1

/*
 * Controls the clearing of edge type interrupts for the PORTA_CLK bit.
 * When a 1 is written into a corresponding bit of this register, the
 * interrupt is cleared.
 * 0: No interrupt clear (default)
 * 1: Clear interrupt
 */
#define IAXXX_GPIO_PORTA_EOI_PORTA_CLK_MASK 0x00010000
#define IAXXX_GPIO_PORTA_EOI_PORTA_CLK_RESET_VAL 0x0
#define IAXXX_GPIO_PORTA_EOI_PORTA_CLK_POS 16
#define IAXXX_GPIO_PORTA_EOI_PORTA_CLK_SIZE 1

/*
 * Controls the clearing of edge type interrupts for the PORTA_FS bit.
 * When a 1 is written into a corresponding bit of this register, the
 * interrupt is cleared.
 * 0: No interrupt clear (default)
 * 1: Clear interrupt
 */
#define IAXXX_GPIO_PORTA_EOI_PORTA_FS_MASK 0x00020000
#define IAXXX_GPIO_PORTA_EOI_PORTA_FS_RESET_VAL 0x0
#define IAXXX_GPIO_PORTA_EOI_PORTA_FS_POS 17
#define IAXXX_GPIO_PORTA_EOI_PORTA_FS_SIZE 1

/*
 * Controls the clearing of edge type interrupts for the PORTA_DI bit.
 * When a 1 is written into a corresponding bit of this register, the
 * interrupt is cleared.
 * 0: No interrupt clear (default)
 * 1: Clear interrupt
 */
#define IAXXX_GPIO_PORTA_EOI_PORTA_DI_MASK 0x00040000
#define IAXXX_GPIO_PORTA_EOI_PORTA_DI_RESET_VAL 0x0
#define IAXXX_GPIO_PORTA_EOI_PORTA_DI_POS 18
#define IAXXX_GPIO_PORTA_EOI_PORTA_DI_SIZE 1

/*
 * Controls the clearing of edge type interrupts for the PORTA_DO bit.
 * When a 1 is written into a corresponding bit of this register, the
 * interrupt is cleared.
 * 0: No interrupt clear (default)
 * 1: Clear interrupt
 */
#define IAXXX_GPIO_PORTA_EOI_PORTA_DO_MASK 0x00080000
#define IAXXX_GPIO_PORTA_EOI_PORTA_DO_RESET_VAL 0x0
#define IAXXX_GPIO_PORTA_EOI_PORTA_DO_POS 19
#define IAXXX_GPIO_PORTA_EOI_PORTA_DO_SIZE 1

/*
 * Controls the clearing of edge type interrupts for the PORTB_CLK bit.
 * When a 1 is written into a corresponding bit of this register, the
 * interrupt is cleared.
 * 0: No interrupt clear (default)
 * 1: Clear interrupt
 */
#define IAXXX_GPIO_PORTA_EOI_PORTB_CLK_MASK 0x00100000
#define IAXXX_GPIO_PORTA_EOI_PORTB_CLK_RESET_VAL 0x0
#define IAXXX_GPIO_PORTA_EOI_PORTB_CLK_POS 20
#define IAXXX_GPIO_PORTA_EOI_PORTB_CLK_SIZE 1

/*
 * Controls the clearing of edge type interrupts for the PORTB_FS bit.
 * When a 1 is written into a corresponding bit of this register, the
 * interrupt is cleared.
 * 0: No interrupt clear (default)
 * 1: Clear interrupt
 */
#define IAXXX_GPIO_PORTA_EOI_PORTB_FS_MASK 0x00200000
#define IAXXX_GPIO_PORTA_EOI_PORTB_FS_RESET_VAL 0x0
#define IAXXX_GPIO_PORTA_EOI_PORTB_FS_POS 21
#define IAXXX_GPIO_PORTA_EOI_PORTB_FS_SIZE 1

/*
 * Controls the clearing of edge type interrupts for the PORTB_DI bit.
 * When a 1 is written into a corresponding bit of this register, the
 * interrupt is cleared.
 * 0: No interrupt clear (default)
 * 1: Clear interrupt
 */
#define IAXXX_GPIO_PORTA_EOI_PORTB_DI_MASK 0x00400000
#define IAXXX_GPIO_PORTA_EOI_PORTB_DI_RESET_VAL 0x0
#define IAXXX_GPIO_PORTA_EOI_PORTB_DI_POS 22
#define IAXXX_GPIO_PORTA_EOI_PORTB_DI_SIZE 1

/*
 * Controls the clearing of edge type interrupts for the PORTB_DO bit.
 * When a 1 is written into a corresponding bit of this register, the
 * interrupt is cleared.
 * 0: No interrupt clear (default)
 * 1: Clear interrupt
 */
#define IAXXX_GPIO_PORTA_EOI_PORTB_DO_MASK 0x00800000
#define IAXXX_GPIO_PORTA_EOI_PORTB_DO_RESET_VAL 0x0
#define IAXXX_GPIO_PORTA_EOI_PORTB_DO_POS 23
#define IAXXX_GPIO_PORTA_EOI_PORTB_DO_SIZE 1

/*
 * Controls the clearing of edge type interrupts for the PORTC_CLK bit.
 * When a 1 is written into a corresponding bit of this register, the
 * interrupt is cleared.
 * 0: No interrupt clear (default)
 * 1: Clear interrupt
 */
#define IAXXX_GPIO_PORTA_EOI_PORTC_CLK_MASK 0x01000000
#define IAXXX_GPIO_PORTA_EOI_PORTC_CLK_RESET_VAL 0x0
#define IAXXX_GPIO_PORTA_EOI_PORTC_CLK_POS 24
#define IAXXX_GPIO_PORTA_EOI_PORTC_CLK_SIZE 1

/*
 * Controls the clearing of edge type interrupts for the PORTC_FS bit.
 * When a 1 is written into a corresponding bit of this register, the
 * interrupt is cleared.
 * 0: No interrupt clear (default)
 * 1: Clear interrupt
 */
#define IAXXX_GPIO_PORTA_EOI_PORTC_FS_MASK 0x02000000
#define IAXXX_GPIO_PORTA_EOI_PORTC_FS_RESET_VAL 0x0
#define IAXXX_GPIO_PORTA_EOI_PORTC_FS_POS 25
#define IAXXX_GPIO_PORTA_EOI_PORTC_FS_SIZE 1

/*
 * Controls the clearing of edge type interrupts for the PORTC_DI bit.
 * When a 1 is written into a corresponding bit of this register, the
 * interrupt is cleared.
 * 0: No interrupt clear (default)
 * 1: Clear interrupt
 */
#define IAXXX_GPIO_PORTA_EOI_PORTC_DI_MASK 0x04000000
#define IAXXX_GPIO_PORTA_EOI_PORTC_DI_RESET_VAL 0x0
#define IAXXX_GPIO_PORTA_EOI_PORTC_DI_POS 26
#define IAXXX_GPIO_PORTA_EOI_PORTC_DI_SIZE 1

/*
 * Controls the clearing of edge type interrupts for the PORTC_DO bit.
 * When a 1 is written into a corresponding bit of this register, the
 * interrupt is cleared.
 * 0: No interrupt clear (default)
 * 1: Clear interrupt
 */
#define IAXXX_GPIO_PORTA_EOI_PORTC_DO_MASK 0x08000000
#define IAXXX_GPIO_PORTA_EOI_PORTC_DO_RESET_VAL 0x0
#define IAXXX_GPIO_PORTA_EOI_PORTC_DO_POS 27
#define IAXXX_GPIO_PORTA_EOI_PORTC_DO_SIZE 1

/*
 * Controls the clearing of edge type interrupts for the PORTD_CLK bit.
 * When a 1 is written into a corresponding bit of this register, the
 * interrupt is cleared.
 * 0: No interrupt clear (default)
 * 1: Clear interrupt
 */
#define IAXXX_GPIO_PORTA_EOI_PORTD_CLK_MASK 0x10000000
#define IAXXX_GPIO_PORTA_EOI_PORTD_CLK_RESET_VAL 0x0
#define IAXXX_GPIO_PORTA_EOI_PORTD_CLK_POS 28
#define IAXXX_GPIO_PORTA_EOI_PORTD_CLK_SIZE 1

/*
 * Controls the clearing of edge type interrupts for the PORTD_FS bit.
 * When a 1 is written into a corresponding bit of this register, the
 * interrupt is cleared.
 * 0: No interrupt clear (default)
 * 1: Clear interrupt
 */
#define IAXXX_GPIO_PORTA_EOI_PORTD_FS_MASK 0x20000000
#define IAXXX_GPIO_PORTA_EOI_PORTD_FS_RESET_VAL 0x0
#define IAXXX_GPIO_PORTA_EOI_PORTD_FS_POS 29
#define IAXXX_GPIO_PORTA_EOI_PORTD_FS_SIZE 1

/*
 * Controls the clearing of edge type interrupts for the PORTD_DI bit.
 * When a 1 is written into a corresponding bit of this register, the
 * interrupt is cleared.
 * 0: No interrupt clear (default)
 * 1: Clear interrupt
 */
#define IAXXX_GPIO_PORTA_EOI_PORTD_DI_MASK 0x40000000
#define IAXXX_GPIO_PORTA_EOI_PORTD_DI_RESET_VAL 0x0
#define IAXXX_GPIO_PORTA_EOI_PORTD_DI_POS 30
#define IAXXX_GPIO_PORTA_EOI_PORTD_DI_SIZE 1

/*
 * Controls the clearing of edge type interrupts for the PORTD_DO bit.
 * When a 1 is written into a corresponding bit of this register, the
 * interrupt is cleared.
 * 0: No interrupt clear (default)
 * 1: Clear interrupt
 */
#define IAXXX_GPIO_PORTA_EOI_PORTD_DO_MASK 0x80000000
#define IAXXX_GPIO_PORTA_EOI_PORTD_DO_RESET_VAL 0x0
#define IAXXX_GPIO_PORTA_EOI_PORTD_DO_POS 31
#define IAXXX_GPIO_PORTA_EOI_PORTD_DO_SIZE 1

/*** GPIO_EXT_PORTA (0x50012050) ***/
/*
 */
#define IAXXX_GPIO_EXT_PORTA_ADDR (0x50012050)
#define IAXXX_GPIO_EXT_PORTA_MASK_VAL 0xffffffff
#define IAXXX_GPIO_EXT_PORTA_RMASK_VAL 0xffffffff
#define IAXXX_GPIO_EXT_PORTA_WMASK_VAL 0x00000000
#define IAXXX_GPIO_EXT_PORTA_RESET_VAL 0x00000000

/*
 * When the port is configured as input, then reading this location reads the
 * values on the COMMA_2 bit.
 * When the data direction is set as output, reading this location reads the
 * data register.
 */
#define IAXXX_GPIO_EXT_PORTA_COMMA_2_MASK 0x00000001
#define IAXXX_GPIO_EXT_PORTA_COMMA_2_RESET_VAL 0x0
#define IAXXX_GPIO_EXT_PORTA_COMMA_2_POS 0
#define IAXXX_GPIO_EXT_PORTA_COMMA_2_SIZE 1

/*
 * When the port is configured as input, then reading this location reads the
 * values on the COMMA_3 bit.
 * When the data direction is set as output, reading this location reads the
 * data register.
 */
#define IAXXX_GPIO_EXT_PORTA_COMMA_3_MASK 0x00000002
#define IAXXX_GPIO_EXT_PORTA_COMMA_3_RESET_VAL 0x0
#define IAXXX_GPIO_EXT_PORTA_COMMA_3_POS 1
#define IAXXX_GPIO_EXT_PORTA_COMMA_3_SIZE 1

/*
 * When the port is configured as input, then reading this location reads the
 * values on the INTR_EVNT bit.
 * When the data direction is set as output, reading this location reads the
 * data register.
 */
#define IAXXX_GPIO_EXT_PORTA_INTR_EVNT_MASK 0x00000004
#define IAXXX_GPIO_EXT_PORTA_INTR_EVNT_RESET_VAL 0x0
#define IAXXX_GPIO_EXT_PORTA_INTR_EVNT_POS 2
#define IAXXX_GPIO_EXT_PORTA_INTR_EVNT_SIZE 1

/*
 * When the port is configured as input, then reading this location reads the
 * values on the CDC_RESET_N bit.
 * When the data direction is set as output, reading this location reads the
 * data register.
 */
#define IAXXX_GPIO_EXT_PORTA_CDC_RESET_N_MASK 0x00000008
#define IAXXX_GPIO_EXT_PORTA_CDC_RESET_N_RESET_VAL 0x0
#define IAXXX_GPIO_EXT_PORTA_CDC_RESET_N_POS 3
#define IAXXX_GPIO_EXT_PORTA_CDC_RESET_N_SIZE 1

/*
 * When the port is configured as input, then reading this location reads the
 * values on the CDC_INT_N bit.
 * When the data direction is set as output, reading this location reads the
 * data register.
 */
#define IAXXX_GPIO_EXT_PORTA_CDC_INT_N_MASK 0x00000010
#define IAXXX_GPIO_EXT_PORTA_CDC_INT_N_RESET_VAL 0x0
#define IAXXX_GPIO_EXT_PORTA_CDC_INT_N_POS 4
#define IAXXX_GPIO_EXT_PORTA_CDC_INT_N_SIZE 1

/*
 * When the port is configured as input, then reading this location reads the
 * values on the CDC_I2C_SCL bit.
 * When the data direction is set as output, reading this location reads the
 * data register.
 */
#define IAXXX_GPIO_EXT_PORTA_CDC_I2C_SCL_MASK 0x00000020
#define IAXXX_GPIO_EXT_PORTA_CDC_I2C_SCL_RESET_VAL 0x0
#define IAXXX_GPIO_EXT_PORTA_CDC_I2C_SCL_POS 5
#define IAXXX_GPIO_EXT_PORTA_CDC_I2C_SCL_SIZE 1

/*
 * When the port is configured as input, then reading this location reads the
 * values on the CDC_I2C_SDA_WR bit.
 * When the data direction is set as output, reading this location reads the
 * data register.
 */
#define IAXXX_GPIO_EXT_PORTA_CDC_I2C_SDA_WR_MASK 0x00000040
#define IAXXX_GPIO_EXT_PORTA_CDC_I2C_SDA_WR_RESET_VAL 0x0
#define IAXXX_GPIO_EXT_PORTA_CDC_I2C_SDA_WR_POS 6
#define IAXXX_GPIO_EXT_PORTA_CDC_I2C_SDA_WR_SIZE 1

/*
 * When the port is configured as input, then reading this location reads the
 * values on the CDC_I2C_SDA_RD bit.
 * When the data direction is set as output, reading this location reads the
 * data register.
 */
#define IAXXX_GPIO_EXT_PORTA_CDC_I2C_SDA_RD_MASK 0x00000080
#define IAXXX_GPIO_EXT_PORTA_CDC_I2C_SDA_RD_RESET_VAL 0x0
#define IAXXX_GPIO_EXT_PORTA_CDC_I2C_SDA_RD_POS 7
#define IAXXX_GPIO_EXT_PORTA_CDC_I2C_SDA_RD_SIZE 1

/*
 * When the port is configured as input, then reading this location reads the
 * values on the CDC_PWRON bit.
 * When the data direction is set as output, reading this location reads the
 * data register.
 */
#define IAXXX_GPIO_EXT_PORTA_CDC_PWRON_MASK 0x00000100
#define IAXXX_GPIO_EXT_PORTA_CDC_PWRON_RESET_VAL 0x0
#define IAXXX_GPIO_EXT_PORTA_CDC_PWRON_POS 8
#define IAXXX_GPIO_EXT_PORTA_CDC_PWRON_SIZE 1

/*
 * When the port is configured as input, then reading this location reads the
 * values on the INTR_API bit.
 * When the data direction is set as output, reading this location reads the
 * data register.
 */
#define IAXXX_GPIO_EXT_PORTA_INTR_API_MASK 0x00000200
#define IAXXX_GPIO_EXT_PORTA_INTR_API_RESET_VAL 0x0
#define IAXXX_GPIO_EXT_PORTA_INTR_API_POS 9
#define IAXXX_GPIO_EXT_PORTA_INTR_API_SIZE 1

/*
 * When the port is configured as input, then reading this location reads the
 * values on the COMMA_0 bit.
 * When the data direction is set as output, reading this location reads the
 * data register.
 */
#define IAXXX_GPIO_EXT_PORTA_COMMA_0_MASK 0x00000400
#define IAXXX_GPIO_EXT_PORTA_COMMA_0_RESET_VAL 0x0
#define IAXXX_GPIO_EXT_PORTA_COMMA_0_POS 10
#define IAXXX_GPIO_EXT_PORTA_COMMA_0_SIZE 1

/*
 * When the port is configured as input, then reading this location reads the
 * values on the COMMA_1 bit.
 * When the data direction is set as output, reading this location reads the
 * data register.
 */
#define IAXXX_GPIO_EXT_PORTA_COMMA_1_MASK 0x00000800
#define IAXXX_GPIO_EXT_PORTA_COMMA_1_RESET_VAL 0x0
#define IAXXX_GPIO_EXT_PORTA_COMMA_1_POS 11
#define IAXXX_GPIO_EXT_PORTA_COMMA_1_SIZE 1

/*
 * When the port is configured as input, then reading this location reads the
 * values on the COMMB_0 bit.
 * When the data direction is set as output, reading this location reads the
 * data register.
 */
#define IAXXX_GPIO_EXT_PORTA_COMMB_0_MASK 0x00001000
#define IAXXX_GPIO_EXT_PORTA_COMMB_0_RESET_VAL 0x0
#define IAXXX_GPIO_EXT_PORTA_COMMB_0_POS 12
#define IAXXX_GPIO_EXT_PORTA_COMMB_0_SIZE 1

/*
 * When the port is configured as input, then reading this location reads the
 * values on the COMMB_1 bit.
 * When the data direction is set as output, reading this location reads the
 * data register.
 */
#define IAXXX_GPIO_EXT_PORTA_COMMB_1_MASK 0x00002000
#define IAXXX_GPIO_EXT_PORTA_COMMB_1_RESET_VAL 0x0
#define IAXXX_GPIO_EXT_PORTA_COMMB_1_POS 13
#define IAXXX_GPIO_EXT_PORTA_COMMB_1_SIZE 1

/*
 * When the port is configured as input, then reading this location reads the
 * values on the COMMB_2 bit.
 * When the data direction is set as output, reading this location reads the
 * data register.
 */
#define IAXXX_GPIO_EXT_PORTA_COMMB_2_MASK 0x00004000
#define IAXXX_GPIO_EXT_PORTA_COMMB_2_RESET_VAL 0x0
#define IAXXX_GPIO_EXT_PORTA_COMMB_2_POS 14
#define IAXXX_GPIO_EXT_PORTA_COMMB_2_SIZE 1

/*
 * When the port is configured as input, then reading this location reads the
 * values on the COMMB_3 bit.
 * When the data direction is set as output, reading this location reads the
 * data register.
 */
#define IAXXX_GPIO_EXT_PORTA_COMMB_3_MASK 0x00008000
#define IAXXX_GPIO_EXT_PORTA_COMMB_3_RESET_VAL 0x0
#define IAXXX_GPIO_EXT_PORTA_COMMB_3_POS 15
#define IAXXX_GPIO_EXT_PORTA_COMMB_3_SIZE 1

/*
 * When the port is configured as input, then reading this location reads the
 * values on the PORTA_CLK bit.
 * When the data direction is set as output, reading this location reads the
 * data register.
 */
#define IAXXX_GPIO_EXT_PORTA_PORTA_CLK_MASK 0x00010000
#define IAXXX_GPIO_EXT_PORTA_PORTA_CLK_RESET_VAL 0x0
#define IAXXX_GPIO_EXT_PORTA_PORTA_CLK_POS 16
#define IAXXX_GPIO_EXT_PORTA_PORTA_CLK_SIZE 1

/*
 * When the port is configured as input, then reading this location reads the
 * values on the PORTA_FS bit.
 * When the data direction is set as output, reading this location reads the
 * data register.
 */
#define IAXXX_GPIO_EXT_PORTA_PORTA_FS_MASK 0x00020000
#define IAXXX_GPIO_EXT_PORTA_PORTA_FS_RESET_VAL 0x0
#define IAXXX_GPIO_EXT_PORTA_PORTA_FS_POS 17
#define IAXXX_GPIO_EXT_PORTA_PORTA_FS_SIZE 1

/*
 * When the port is configured as input, then reading this location reads the
 * values on the PORTA_DI bit.
 * When the data direction is set as output, reading this location reads the
 * data register.
 */
#define IAXXX_GPIO_EXT_PORTA_PORTA_DI_MASK 0x00040000
#define IAXXX_GPIO_EXT_PORTA_PORTA_DI_RESET_VAL 0x0
#define IAXXX_GPIO_EXT_PORTA_PORTA_DI_POS 18
#define IAXXX_GPIO_EXT_PORTA_PORTA_DI_SIZE 1

/*
 * When the port is configured as input, then reading this location reads the
 * values on the PORTA_DO bit.
 * When the data direction is set as output, reading this location reads the
 * data register.
 */
#define IAXXX_GPIO_EXT_PORTA_PORTA_DO_MASK 0x00080000
#define IAXXX_GPIO_EXT_PORTA_PORTA_DO_RESET_VAL 0x0
#define IAXXX_GPIO_EXT_PORTA_PORTA_DO_POS 19
#define IAXXX_GPIO_EXT_PORTA_PORTA_DO_SIZE 1

/*
 * When the port is configured as input, then reading this location reads the
 * values on the PORTB_CLK bit.
 * When the data direction is set as output, reading this location reads the
 * data register.
 */
#define IAXXX_GPIO_EXT_PORTA_PORTB_CLK_MASK 0x00100000
#define IAXXX_GPIO_EXT_PORTA_PORTB_CLK_RESET_VAL 0x0
#define IAXXX_GPIO_EXT_PORTA_PORTB_CLK_POS 20
#define IAXXX_GPIO_EXT_PORTA_PORTB_CLK_SIZE 1

/*
 * When the port is configured as input, then reading this location reads the
 * values on the PORTB_FS bit.
 * When the data direction is set as output, reading this location reads the
 * data register.
 */
#define IAXXX_GPIO_EXT_PORTA_PORTB_FS_MASK 0x00200000
#define IAXXX_GPIO_EXT_PORTA_PORTB_FS_RESET_VAL 0x0
#define IAXXX_GPIO_EXT_PORTA_PORTB_FS_POS 21
#define IAXXX_GPIO_EXT_PORTA_PORTB_FS_SIZE 1

/*
 * When the port is configured as input, then reading this location reads the
 * values on the PORTB_DI bit.
 * When the data direction is set as output, reading this location reads the
 * data register.
 */
#define IAXXX_GPIO_EXT_PORTA_PORTB_DI_MASK 0x00400000
#define IAXXX_GPIO_EXT_PORTA_PORTB_DI_RESET_VAL 0x0
#define IAXXX_GPIO_EXT_PORTA_PORTB_DI_POS 22
#define IAXXX_GPIO_EXT_PORTA_PORTB_DI_SIZE 1

/*
 * When the port is configured as input, then reading this location reads the
 * values on the PORTB_DO bit.
 * When the data direction is set as output, reading this location reads the
 * data register.
 */
#define IAXXX_GPIO_EXT_PORTA_PORTB_DO_MASK 0x00800000
#define IAXXX_GPIO_EXT_PORTA_PORTB_DO_RESET_VAL 0x0
#define IAXXX_GPIO_EXT_PORTA_PORTB_DO_POS 23
#define IAXXX_GPIO_EXT_PORTA_PORTB_DO_SIZE 1

/*
 * When the port is configured as input, then reading this location reads the
 * values on the PORTC_CLK bit.
 * When the data direction is set as output, reading this location reads the
 * data register.
 */
#define IAXXX_GPIO_EXT_PORTA_PORTC_CLK_MASK 0x01000000
#define IAXXX_GPIO_EXT_PORTA_PORTC_CLK_RESET_VAL 0x0
#define IAXXX_GPIO_EXT_PORTA_PORTC_CLK_POS 24
#define IAXXX_GPIO_EXT_PORTA_PORTC_CLK_SIZE 1

/*
 * When the port is configured as input, then reading this location reads the
 * values on the PORTC_FS bit.
 * When the data direction is set as output, reading this location reads the
 * data register.
 */
#define IAXXX_GPIO_EXT_PORTA_PORTC_FS_MASK 0x02000000
#define IAXXX_GPIO_EXT_PORTA_PORTC_FS_RESET_VAL 0x0
#define IAXXX_GPIO_EXT_PORTA_PORTC_FS_POS 25
#define IAXXX_GPIO_EXT_PORTA_PORTC_FS_SIZE 1

/*
 * When the port is configured as input, then reading this location reads the
 * values on the PORTC_DI bit.
 * When the data direction is set as output, reading this location reads the
 * data register.
 */
#define IAXXX_GPIO_EXT_PORTA_PORTC_DI_MASK 0x04000000
#define IAXXX_GPIO_EXT_PORTA_PORTC_DI_RESET_VAL 0x0
#define IAXXX_GPIO_EXT_PORTA_PORTC_DI_POS 26
#define IAXXX_GPIO_EXT_PORTA_PORTC_DI_SIZE 1

/*
 * When the port is configured as input, then reading this location reads the
 * values on the PORTC_DO bit.
 * When the data direction is set as output, reading this location reads the
 * data register.
 */
#define IAXXX_GPIO_EXT_PORTA_PORTC_DO_MASK 0x08000000
#define IAXXX_GPIO_EXT_PORTA_PORTC_DO_RESET_VAL 0x0
#define IAXXX_GPIO_EXT_PORTA_PORTC_DO_POS 27
#define IAXXX_GPIO_EXT_PORTA_PORTC_DO_SIZE 1

/*
 * When the port is configured as input, then reading this location reads the
 * values on the PORTD_CLK bit.
 * When the data direction is set as output, reading this location reads the
 * data register.
 */
#define IAXXX_GPIO_EXT_PORTA_PORTD_CLK_MASK 0x10000000
#define IAXXX_GPIO_EXT_PORTA_PORTD_CLK_RESET_VAL 0x0
#define IAXXX_GPIO_EXT_PORTA_PORTD_CLK_POS 28
#define IAXXX_GPIO_EXT_PORTA_PORTD_CLK_SIZE 1

/*
 * When the port is configured as input, then reading this location reads the
 * values on the PORTD_FS bit.
 * When the data direction is set as output, reading this location reads the
 * data register.
 */
#define IAXXX_GPIO_EXT_PORTA_PORTD_FS_MASK 0x20000000
#define IAXXX_GPIO_EXT_PORTA_PORTD_FS_RESET_VAL 0x0
#define IAXXX_GPIO_EXT_PORTA_PORTD_FS_POS 29
#define IAXXX_GPIO_EXT_PORTA_PORTD_FS_SIZE 1

/*
 * When the port is configured as input, then reading this location reads the
 * values on the PORTD_DI bit.
 * When the data direction is set as output, reading this location reads the
 * data register.
 */
#define IAXXX_GPIO_EXT_PORTA_PORTD_DI_MASK 0x40000000
#define IAXXX_GPIO_EXT_PORTA_PORTD_DI_RESET_VAL 0x0
#define IAXXX_GPIO_EXT_PORTA_PORTD_DI_POS 30
#define IAXXX_GPIO_EXT_PORTA_PORTD_DI_SIZE 1

/*
 * When the port is configured as input, then reading this location reads the
 * values on the PORTD_DO bit.
 * When the data direction is set as output, reading this location reads the
 * data register.
 */
#define IAXXX_GPIO_EXT_PORTA_PORTD_DO_MASK 0x80000000
#define IAXXX_GPIO_EXT_PORTA_PORTD_DO_RESET_VAL 0x0
#define IAXXX_GPIO_EXT_PORTA_PORTD_DO_POS 31
#define IAXXX_GPIO_EXT_PORTA_PORTD_DO_SIZE 1

/*** GPIO_EXT_PORTB (0x50012054) ***/
/*
 */
#define IAXXX_GPIO_EXT_PORTB_ADDR (0x50012054)
#define IAXXX_GPIO_EXT_PORTB_MASK_VAL 0x1f3fffff
#define IAXXX_GPIO_EXT_PORTB_RMASK_VAL 0x1f3fffff
#define IAXXX_GPIO_EXT_PORTB_WMASK_VAL 0x00000000
#define IAXXX_GPIO_EXT_PORTB_RESET_VAL 0x00000000

/*
 * When the port is configured as input, then reading this location reads the
 * values on the MIPI_CLK bit.
 * When the data direction is set as output, reading this location reads the
 * data register.
 */
#define IAXXX_GPIO_EXT_PORTB_MIPI_CLK_MASK 0x00000001
#define IAXXX_GPIO_EXT_PORTB_MIPI_CLK_RESET_VAL 0x0
#define IAXXX_GPIO_EXT_PORTB_MIPI_CLK_POS 0
#define IAXXX_GPIO_EXT_PORTB_MIPI_CLK_SIZE 1

/*
 * When the port is configured as input, then reading this location reads the
 * values on the MIPI_DATA bit.
 * When the data direction is set as output, reading this location reads the
 * data register.
 */
#define IAXXX_GPIO_EXT_PORTB_MIPI_DATA_MASK 0x00000002
#define IAXXX_GPIO_EXT_PORTB_MIPI_DATA_RESET_VAL 0x0
#define IAXXX_GPIO_EXT_PORTB_MIPI_DATA_POS 1
#define IAXXX_GPIO_EXT_PORTB_MIPI_DATA_SIZE 1

/*
 * When the port is configured as input, then reading this location reads the
 * values on the COMMC_0 bit.
 * When the data direction is set as output, reading this location reads the
 * data register.
 */
#define IAXXX_GPIO_EXT_PORTB_COMMC_0_MASK 0x00000004
#define IAXXX_GPIO_EXT_PORTB_COMMC_0_RESET_VAL 0x0
#define IAXXX_GPIO_EXT_PORTB_COMMC_0_POS 2
#define IAXXX_GPIO_EXT_PORTB_COMMC_0_SIZE 1

/*
 * When the port is configured as input, then reading this location reads the
 * values on the COMMC_1 bit.
 * When the data direction is set as output, reading this location reads the
 * data register.
 */
#define IAXXX_GPIO_EXT_PORTB_COMMC_1_MASK 0x00000008
#define IAXXX_GPIO_EXT_PORTB_COMMC_1_RESET_VAL 0x0
#define IAXXX_GPIO_EXT_PORTB_COMMC_1_POS 3
#define IAXXX_GPIO_EXT_PORTB_COMMC_1_SIZE 1

/*
 * When the port is configured as input, then reading this location reads the
 * values on the COMMC_2 bit.
 * When the data direction is set as output, reading this location reads the
 * data register.
 */
#define IAXXX_GPIO_EXT_PORTB_COMMC_2_MASK 0x00000010
#define IAXXX_GPIO_EXT_PORTB_COMMC_2_RESET_VAL 0x0
#define IAXXX_GPIO_EXT_PORTB_COMMC_2_POS 4
#define IAXXX_GPIO_EXT_PORTB_COMMC_2_SIZE 1

/*
 * When the port is configured as input, then reading this location reads the
 * values on the COMMC_3 bit.
 * When the data direction is set as output, reading this location reads the
 * data register.
 */
#define IAXXX_GPIO_EXT_PORTB_COMMC_3_MASK 0x00000020
#define IAXXX_GPIO_EXT_PORTB_COMMC_3_RESET_VAL 0x0
#define IAXXX_GPIO_EXT_PORTB_COMMC_3_POS 5
#define IAXXX_GPIO_EXT_PORTB_COMMC_3_SIZE 1

/*
 * When the port is configured as input, then reading this location reads the
 * values on the COMMD_0 bit.
 * When the data direction is set as output, reading this location reads the
 * data register.
 */
#define IAXXX_GPIO_EXT_PORTB_COMMD_0_MASK 0x00000040
#define IAXXX_GPIO_EXT_PORTB_COMMD_0_RESET_VAL 0x0
#define IAXXX_GPIO_EXT_PORTB_COMMD_0_POS 6
#define IAXXX_GPIO_EXT_PORTB_COMMD_0_SIZE 1

/*
 * When the port is configured as input, then reading this location reads the
 * values on the COMMD_1 bit.
 * When the data direction is set as output, reading this location reads the
 * data register.
 */
#define IAXXX_GPIO_EXT_PORTB_COMMD_1_MASK 0x00000080
#define IAXXX_GPIO_EXT_PORTB_COMMD_1_RESET_VAL 0x0
#define IAXXX_GPIO_EXT_PORTB_COMMD_1_POS 7
#define IAXXX_GPIO_EXT_PORTB_COMMD_1_SIZE 1

/*
 * When the port is configured as input, then reading this location reads the
 * values on the COMMD_2 bit.
 * When the data direction is set as output, reading this location reads the
 * data register.
 */
#define IAXXX_GPIO_EXT_PORTB_COMMD_2_MASK 0x00000100
#define IAXXX_GPIO_EXT_PORTB_COMMD_2_RESET_VAL 0x0
#define IAXXX_GPIO_EXT_PORTB_COMMD_2_POS 8
#define IAXXX_GPIO_EXT_PORTB_COMMD_2_SIZE 1

/*
 * When the port is configured as input, then reading this location reads the
 * values on the COMMD_3 bit.
 * When the data direction is set as output, reading this location reads the
 * data register.
 */
#define IAXXX_GPIO_EXT_PORTB_COMMD_3_MASK 0x00000200
#define IAXXX_GPIO_EXT_PORTB_COMMD_3_RESET_VAL 0x0
#define IAXXX_GPIO_EXT_PORTB_COMMD_3_POS 9
#define IAXXX_GPIO_EXT_PORTB_COMMD_3_SIZE 1

/*
 * When the port is configured as input, then reading this location reads the
 * values on the COMME_0 bit.
 * When the data direction is set as output, reading this location reads the
 * data register.
 */
#define IAXXX_GPIO_EXT_PORTB_COMME_0_MASK 0x00000400
#define IAXXX_GPIO_EXT_PORTB_COMME_0_RESET_VAL 0x0
#define IAXXX_GPIO_EXT_PORTB_COMME_0_POS 10
#define IAXXX_GPIO_EXT_PORTB_COMME_0_SIZE 1

/*
 * When the port is configured as input, then reading this location reads the
 * values on the COMME_1 bit.
 * When the data direction is set as output, reading this location reads the
 * data register.
 */
#define IAXXX_GPIO_EXT_PORTB_COMME_1_MASK 0x00000800
#define IAXXX_GPIO_EXT_PORTB_COMME_1_RESET_VAL 0x0
#define IAXXX_GPIO_EXT_PORTB_COMME_1_POS 11
#define IAXXX_GPIO_EXT_PORTB_COMME_1_SIZE 1

/*
 * When the port is configured as input, then reading this location reads the
 * values on the COMME_2 bit.
 * When the data direction is set as output, reading this location reads the
 * data register.
 */
#define IAXXX_GPIO_EXT_PORTB_COMME_2_MASK 0x00001000
#define IAXXX_GPIO_EXT_PORTB_COMME_2_RESET_VAL 0x0
#define IAXXX_GPIO_EXT_PORTB_COMME_2_POS 12
#define IAXXX_GPIO_EXT_PORTB_COMME_2_SIZE 1

/*
 * When the port is configured as input, then reading this location reads the
 * values on the COMME_3 bit.
 * When the data direction is set as output, reading this location reads the
 * data register.
 */
#define IAXXX_GPIO_EXT_PORTB_COMME_3_MASK 0x00002000
#define IAXXX_GPIO_EXT_PORTB_COMME_3_RESET_VAL 0x0
#define IAXXX_GPIO_EXT_PORTB_COMME_3_POS 13
#define IAXXX_GPIO_EXT_PORTB_COMME_3_SIZE 1

/*
 * When the port is configured as input, then reading this location reads the
 * values on the COMMF_0 bit.
 * When the data direction is set as output, reading this location reads the
 * data register.
 */
#define IAXXX_GPIO_EXT_PORTB_COMMF_0_MASK 0x00004000
#define IAXXX_GPIO_EXT_PORTB_COMMF_0_RESET_VAL 0x0
#define IAXXX_GPIO_EXT_PORTB_COMMF_0_POS 14
#define IAXXX_GPIO_EXT_PORTB_COMMF_0_SIZE 1

/*
 * When the port is configured as input, then reading this location reads the
 * values on the COMMF_1 bit.
 * When the data direction is set as output, reading this location reads the
 * data register.
 */
#define IAXXX_GPIO_EXT_PORTB_COMMF_1_MASK 0x00008000
#define IAXXX_GPIO_EXT_PORTB_COMMF_1_RESET_VAL 0x0
#define IAXXX_GPIO_EXT_PORTB_COMMF_1_POS 15
#define IAXXX_GPIO_EXT_PORTB_COMMF_1_SIZE 1

/*
 * When the port is configured as input, then reading this location reads the
 * values on the COMMF_2 bit.
 * When the data direction is set as output, reading this location reads the
 * data register.
 */
#define IAXXX_GPIO_EXT_PORTB_COMMF_2_MASK 0x00010000
#define IAXXX_GPIO_EXT_PORTB_COMMF_2_RESET_VAL 0x0
#define IAXXX_GPIO_EXT_PORTB_COMMF_2_POS 16
#define IAXXX_GPIO_EXT_PORTB_COMMF_2_SIZE 1

/*
 * When the port is configured as input, then reading this location reads the
 * values on the COMMF_3 bit.
 * When the data direction is set as output, reading this location reads the
 * data register.
 */
#define IAXXX_GPIO_EXT_PORTB_COMMF_3_MASK 0x00020000
#define IAXXX_GPIO_EXT_PORTB_COMMF_3_RESET_VAL 0x0
#define IAXXX_GPIO_EXT_PORTB_COMMF_3_POS 17
#define IAXXX_GPIO_EXT_PORTB_COMMF_3_SIZE 1

/*
 * When the port is configured as input, then reading this location reads the
 * values on the PORTE_CLK bit.
 * When the data direction is set as output, reading this location reads the
 * data register.
 */
#define IAXXX_GPIO_EXT_PORTB_PORTE_CLK_MASK 0x00040000
#define IAXXX_GPIO_EXT_PORTB_PORTE_CLK_RESET_VAL 0x0
#define IAXXX_GPIO_EXT_PORTB_PORTE_CLK_POS 18
#define IAXXX_GPIO_EXT_PORTB_PORTE_CLK_SIZE 1

/*
 * When the port is configured as input, then reading this location reads the
 * values on the PORTE_FS bit.
 * When the data direction is set as output, reading this location reads the
 * data register.
 */
#define IAXXX_GPIO_EXT_PORTB_PORTE_FS_MASK 0x00080000
#define IAXXX_GPIO_EXT_PORTB_PORTE_FS_RESET_VAL 0x0
#define IAXXX_GPIO_EXT_PORTB_PORTE_FS_POS 19
#define IAXXX_GPIO_EXT_PORTB_PORTE_FS_SIZE 1

/*
 * When the port is configured as input, then reading this location reads the
 * values on the PORTE_DI bit.
 * When the data direction is set as output, reading this location reads the
 * data register.
 */
#define IAXXX_GPIO_EXT_PORTB_PORTE_DI_MASK 0x00100000
#define IAXXX_GPIO_EXT_PORTB_PORTE_DI_RESET_VAL 0x0
#define IAXXX_GPIO_EXT_PORTB_PORTE_DI_POS 20
#define IAXXX_GPIO_EXT_PORTB_PORTE_DI_SIZE 1

/*
 * When the port is configured as input, then reading this location reads the
 * values on the PORTE_DO bit.
 * When the data direction is set as output, reading this location reads the
 * data register.
 */
#define IAXXX_GPIO_EXT_PORTB_PORTE_DO_MASK 0x00200000
#define IAXXX_GPIO_EXT_PORTB_PORTE_DO_RESET_VAL 0x0
#define IAXXX_GPIO_EXT_PORTB_PORTE_DO_POS 21
#define IAXXX_GPIO_EXT_PORTB_PORTE_DO_SIZE 1

/*
 * When the port is configured as input, then reading this location reads the
 * values on the CDC_MCLK bit.
 * When the data direction is set as output, reading this location reads the
 * data register.
 */
#define IAXXX_GPIO_EXT_PORTB_CDC_MCLK_MASK 0x01000000
#define IAXXX_GPIO_EXT_PORTB_CDC_MCLK_RESET_VAL 0x0
#define IAXXX_GPIO_EXT_PORTB_CDC_MCLK_POS 24
#define IAXXX_GPIO_EXT_PORTB_CDC_MCLK_SIZE 1

/*
 * When the port is configured as input, then reading this location reads the
 * values on the CDC_PDM0 bit.
 * When the data direction is set as output, reading this location reads the
 * data register.
 */
#define IAXXX_GPIO_EXT_PORTB_CDC_PDM0_MASK 0x02000000
#define IAXXX_GPIO_EXT_PORTB_CDC_PDM0_RESET_VAL 0x0
#define IAXXX_GPIO_EXT_PORTB_CDC_PDM0_POS 25
#define IAXXX_GPIO_EXT_PORTB_CDC_PDM0_SIZE 1

/*
 * When the port is configured as input, then reading this location reads the
 * values on the CDC_PDM1 bit.
 * When the data direction is set as output, reading this location reads the
 * data register.
 */
#define IAXXX_GPIO_EXT_PORTB_CDC_PDM1_MASK 0x04000000
#define IAXXX_GPIO_EXT_PORTB_CDC_PDM1_RESET_VAL 0x0
#define IAXXX_GPIO_EXT_PORTB_CDC_PDM1_POS 26
#define IAXXX_GPIO_EXT_PORTB_CDC_PDM1_SIZE 1

/*
 * When the port is configured as input, then reading this location reads the
 * values on the CDC_PDM2 bit.
 * When the data direction is set as output, reading this location reads the
 * data register.
 */
#define IAXXX_GPIO_EXT_PORTB_CDC_PDM2_MASK 0x08000000
#define IAXXX_GPIO_EXT_PORTB_CDC_PDM2_RESET_VAL 0x0
#define IAXXX_GPIO_EXT_PORTB_CDC_PDM2_POS 27
#define IAXXX_GPIO_EXT_PORTB_CDC_PDM2_SIZE 1

/*
 * When the port is configured as input, then reading this location reads the
 * values on the CLK_IN bit.
 * When the data direction is set as output, reading this location reads the
 * data register.
 */
#define IAXXX_GPIO_EXT_PORTB_CLK_IN_MASK 0x10000000
#define IAXXX_GPIO_EXT_PORTB_CLK_IN_RESET_VAL 0x0
#define IAXXX_GPIO_EXT_PORTB_CLK_IN_POS 28
#define IAXXX_GPIO_EXT_PORTB_CLK_IN_SIZE 1

/*** GPIO_LS_SYNC (0x50012060) ***/
/*
 */
#define IAXXX_GPIO_LS_SYNC_ADDR (0x50012060)
#define IAXXX_GPIO_LS_SYNC_MASK_VAL 0x00000001
#define IAXXX_GPIO_LS_SYNC_RMASK_VAL 0x00000001
#define IAXXX_GPIO_LS_SYNC_WMASK_VAL 0x00000001
#define IAXXX_GPIO_LS_SYNC_RESET_VAL 0x00000000

/*
 * Writing a 1 to this register results in all level sensitive interrupts
 * being synchronized to pclk_intr.
 * 0: No synchronization to pclk_intr (default)
 * 1: Synchronize to pclk_intr
 */
#define IAXXX_GPIO_LS_SYNC_EN_MASK 0x00000001
#define IAXXX_GPIO_LS_SYNC_EN_RESET_VAL 0x0
#define IAXXX_GPIO_LS_SYNC_EN_POS 0
#define IAXXX_GPIO_LS_SYNC_EN_SIZE 1

/*** GPIO_GPIO_ID_CODE (0x50012064) ***/
/*
 */
#define IAXXX_GPIO_GPIO_ID_CODE_ADDR (0x50012064)
#define IAXXX_GPIO_GPIO_ID_CODE_MASK_VAL 0xffffffff
#define IAXXX_GPIO_GPIO_ID_CODE_RMASK_VAL 0xffffffff
#define IAXXX_GPIO_GPIO_ID_CODE_WMASK_VAL 0x00000000
#define IAXXX_GPIO_GPIO_ID_CODE_RESET_VAL 0x00000000

/*
 * User specified code that a system can read. It can be used for chip
 * identification, and so on.
 */
#define IAXXX_GPIO_GPIO_ID_CODE_GPIO_ID_CODE_MASK 0xffffffff
#define IAXXX_GPIO_GPIO_ID_CODE_GPIO_ID_CODE_RESET_VAL 0x0
#define IAXXX_GPIO_GPIO_ID_CODE_GPIO_ID_CODE_POS 0
#define IAXXX_GPIO_GPIO_ID_CODE_GPIO_ID_CODE_SIZE 32

/*** GPIO_GPIO_INT_BOTHEDGE (0x50012068) ***/
/*
 */
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_ADDR (0x50012068)
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_MASK_VAL 0xffffffff
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_RMASK_VAL 0xffffffff
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_WMASK_VAL 0xffffffff
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_RESET_VAL 0x00000000

/*
 * "Control the edge type of interupt that occur on Port A. Whenever a 1 is
 * written it configures the edge interrupt type to be both rising and
 * falling edges of input signal.
 * It is single edge sensitive either one of rising or falling edge of
 * external input signal or level sensitive of external signal depending on
 * setting of registers gpio_inttype_level and gpio_int_polarity.
 * 0x0 (DISABLED): single edge sensitive
 * 0x1 (ENABLED): both edge sensitive"
 */
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_COMMA_2_MASK 0x00000001
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_COMMA_2_RESET_VAL 0x0
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_COMMA_2_POS 0
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_COMMA_2_SIZE 1

/*
 * "Control the edge type of interupt that occur on Port A. Whenever a 1 is
 * written it configures the edge interrupt type to be both rising and
 * falling edges of input signal.
 * It is single edge sensitive either one of rising or falling edge of
 * external input signal or level sensitive of external signal depending on
 * setting of registers gpio_inttype_level and gpio_int_polarity.
 * 0x0 (DISABLED): single edge sensitive
 * 0x1 (ENABLED): both edge sensitive"
 */
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_COMMA_3_MASK 0x00000002
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_COMMA_3_RESET_VAL 0x0
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_COMMA_3_POS 1
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_COMMA_3_SIZE 1

/*
 * "Control the edge type of interupt that occur on Port A. Whenever a 1 is
 * written it configures the edge interrupt type to be both rising and
 * falling edges of input signal.
 * It is single edge sensitive either one of rising or falling edge of
 * external input signal or level sensitive of external signal depending on
 * setting of registers gpio_inttype_level and gpio_int_polarity.
 * 0x0 (DISABLED): single edge sensitive
 * 0x1 (ENABLED): both edge sensitive"
 */
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_INTR_EVNT_MASK 0x00000004
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_INTR_EVNT_RESET_VAL 0x0
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_INTR_EVNT_POS 2
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_INTR_EVNT_SIZE 1

/*
 * "Control the edge type of interupt that occur on Port A. Whenever a 1 is
 * written it configures the edge interrupt type to be both rising and
 * falling edges of input signal.
 * It is single edge sensitive either one of rising or falling edge of
 * external input signal or level sensitive of external signal depending on
 * setting of registers gpio_inttype_level and gpio_int_polarity.
 * 0x0 (DISABLED): single edge sensitive
 * 0x1 (ENABLED): both edge sensitive"
 */
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_CDC_RESET_N_MASK 0x00000008
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_CDC_RESET_N_RESET_VAL 0x0
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_CDC_RESET_N_POS 3
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_CDC_RESET_N_SIZE 1

/*
 * "Control the edge type of interupt that occur on Port A. Whenever a 1 is
 * written it configures the edge interrupt type to be both rising and
 * falling edges of input signal.
 * It is single edge sensitive either one of rising or falling edge of
 * external input signal or level sensitive of external signal depending on
 * setting of registers gpio_inttype_level and gpio_int_polarity.
 * 0x0 (DISABLED): single edge sensitive
 * 0x1 (ENABLED): both edge sensitive"
 */
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_CDC_INT_N_MASK 0x00000010
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_CDC_INT_N_RESET_VAL 0x0
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_CDC_INT_N_POS 4
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_CDC_INT_N_SIZE 1

/*
 * "Control the edge type of interupt that occur on Port A. Whenever a 1 is
 * written it configures the edge interrupt type to be both rising and
 * falling edges of input signal.
 * It is single edge sensitive either one of rising or falling edge of
 * external input signal or level sensitive of external signal depending on
 * setting of registers gpio_inttype_level and gpio_int_polarity.
 * 0x0 (DISABLED): single edge sensitive
 * 0x1 (ENABLED): both edge sensitive"
 */
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_CDC_I2C_SCL_MASK 0x00000020
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_CDC_I2C_SCL_RESET_VAL 0x0
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_CDC_I2C_SCL_POS 5
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_CDC_I2C_SCL_SIZE 1

/*
 * "Control the edge type of interupt that occur on Port A. Whenever a 1 is
 * written it configures the edge interrupt type to be both rising and
 * falling edges of input signal.
 * It is single edge sensitive either one of rising or falling edge of
 * external input signal or level sensitive of external signal depending on
 * setting of registers gpio_inttype_level and gpio_int_polarity.
 * 0x0 (DISABLED): single edge sensitive
 * 0x1 (ENABLED): both edge sensitive"
 */
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_CDC_I2C_SDA_WR_MASK 0x00000040
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_CDC_I2C_SDA_WR_RESET_VAL 0x0
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_CDC_I2C_SDA_WR_POS 6
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_CDC_I2C_SDA_WR_SIZE 1

/*
 * "Control the edge type of interupt that occur on Port A. Whenever a 1 is
 * written it configures the edge interrupt type to be both rising and
 * falling edges of input signal.
 * It is single edge sensitive either one of rising or falling edge of
 * external input signal or level sensitive of external signal depending on
 * setting of registers gpio_inttype_level and gpio_int_polarity.
 * 0x0 (DISABLED): single edge sensitive
 * 0x1 (ENABLED): both edge sensitive"
 */
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_CDC_I2C_SDA_RD_MASK 0x00000080
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_CDC_I2C_SDA_RD_RESET_VAL 0x0
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_CDC_I2C_SDA_RD_POS 7
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_CDC_I2C_SDA_RD_SIZE 1

/*
 * "Control the edge type of interupt that occur on Port A. Whenever a 1 is
 * written it configures the edge interrupt type to be both rising and
 * falling edges of input signal.
 * It is single edge sensitive either one of rising or falling edge of
 * external input signal or level sensitive of external signal depending on
 * setting of registers gpio_inttype_level and gpio_int_polarity.
 * 0x0 (DISABLED): single edge sensitive
 * 0x1 (ENABLED): both edge sensitive"
 */
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_CDC_PWRON_MASK 0x00000100
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_CDC_PWRON_RESET_VAL 0x0
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_CDC_PWRON_POS 8
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_CDC_PWRON_SIZE 1

/*
 * "Control the edge type of interupt that occur on Port A. Whenever a 1 is
 * written it configures the edge interrupt type to be both rising and
 * falling edges of input signal.
 * It is single edge sensitive either one of rising or falling edge of
 * external input signal or level sensitive of external signal depending on
 * setting of registers gpio_inttype_level and gpio_int_polarity.
 * 0x0 (DISABLED): single edge sensitive
 * 0x1 (ENABLED): both edge sensitive"
 */
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_INTR_API_MASK 0x00000200
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_INTR_API_RESET_VAL 0x0
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_INTR_API_POS 9
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_INTR_API_SIZE 1

/*
 * "Control the edge type of interupt that occur on Port A. Whenever a 1 is
 * written it configures the edge interrupt type to be both rising and
 * falling edges of input signal.
 * It is single edge sensitive either one of rising or falling edge of
 * external input signal or level sensitive of external signal depending on
 * setting of registers gpio_inttype_level and gpio_int_polarity.
 * 0x0 (DISABLED): single edge sensitive
 * 0x1 (ENABLED): both edge sensitive"
 */
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_COMMA_0_MASK 0x00000400
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_COMMA_0_RESET_VAL 0x0
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_COMMA_0_POS 10
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_COMMA_0_SIZE 1

/*
 * "Control the edge type of interupt that occur on Port A. Whenever a 1 is
 * written it configures the edge interrupt type to be both rising and
 * falling edges of input signal.
 * It is single edge sensitive either one of rising or falling edge of
 * external input signal or level sensitive of external signal depending on
 * setting of registers gpio_inttype_level and gpio_int_polarity.
 * 0x0 (DISABLED): single edge sensitive
 * 0x1 (ENABLED): both edge sensitive"
 */
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_COMMA_1_MASK 0x00000800
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_COMMA_1_RESET_VAL 0x0
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_COMMA_1_POS 11
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_COMMA_1_SIZE 1

/*
 * "Control the edge type of interupt that occur on Port A. Whenever a 1 is
 * written it configures the edge interrupt type to be both rising and
 * falling edges of input signal.
 * It is single edge sensitive either one of rising or falling edge of
 * external input signal or level sensitive of external signal depending on
 * setting of registers gpio_inttype_level and gpio_int_polarity.
 * 0x0 (DISABLED): single edge sensitive
 * 0x1 (ENABLED): both edge sensitive"
 */
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_COMMB_0_MASK 0x00001000
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_COMMB_0_RESET_VAL 0x0
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_COMMB_0_POS 12
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_COMMB_0_SIZE 1

/*
 * "Control the edge type of interupt that occur on Port A. Whenever a 1 is
 * written it configures the edge interrupt type to be both rising and
 * falling edges of input signal.
 * It is single edge sensitive either one of rising or falling edge of
 * external input signal or level sensitive of external signal depending on
 * setting of registers gpio_inttype_level and gpio_int_polarity.
 * 0x0 (DISABLED): single edge sensitive
 * 0x1 (ENABLED): both edge sensitive"
 */
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_COMMB_1_MASK 0x00002000
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_COMMB_1_RESET_VAL 0x0
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_COMMB_1_POS 13
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_COMMB_1_SIZE 1

/*
 * "Control the edge type of interupt that occur on Port A. Whenever a 1 is
 * written it configures the edge interrupt type to be both rising and
 * falling edges of input signal.
 * It is single edge sensitive either one of rising or falling edge of
 * external input signal or level sensitive of external signal depending on
 * setting of registers gpio_inttype_level and gpio_int_polarity.
 * 0x0 (DISABLED): single edge sensitive
 * 0x1 (ENABLED): both edge sensitive"
 */
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_COMMB_2_MASK 0x00004000
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_COMMB_2_RESET_VAL 0x0
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_COMMB_2_POS 14
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_COMMB_2_SIZE 1

/*
 * "Control the edge type of interupt that occur on Port A. Whenever a 1 is
 * written it configures the edge interrupt type to be both rising and
 * falling edges of input signal.
 * It is single edge sensitive either one of rising or falling edge of
 * external input signal or level sensitive of external signal depending on
 * setting of registers gpio_inttype_level and gpio_int_polarity.
 * 0x0 (DISABLED): single edge sensitive
 * 0x1 (ENABLED): both edge sensitive"
 */
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_COMMB_3_MASK 0x00008000
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_COMMB_3_RESET_VAL 0x0
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_COMMB_3_POS 15
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_COMMB_3_SIZE 1

/*
 * "Control the edge type of interupt that occur on Port A. Whenever a 1 is
 * written it configures the edge interrupt type to be both rising and
 * falling edges of input signal.
 * It is single edge sensitive either one of rising or falling edge of
 * external input signal or level sensitive of external signal depending on
 * setting of registers gpio_inttype_level and gpio_int_polarity.
 * 0x0 (DISABLED): single edge sensitive
 * 0x1 (ENABLED): both edge sensitive"
 */
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_PORTA_CLK_MASK 0x00010000
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_PORTA_CLK_RESET_VAL 0x0
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_PORTA_CLK_POS 16
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_PORTA_CLK_SIZE 1

/*
 * "Control the edge type of interupt that occur on Port A. Whenever a 1 is
 * written it configures the edge interrupt type to be both rising and
 * falling edges of input signal.
 * It is single edge sensitive either one of rising or falling edge of
 * external input signal or level sensitive of external signal depending on
 * setting of registers gpio_inttype_level and gpio_int_polarity.
 * 0x0 (DISABLED): single edge sensitive
 * 0x1 (ENABLED): both edge sensitive"
 */
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_PORTA_FS_MASK 0x00020000
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_PORTA_FS_RESET_VAL 0x0
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_PORTA_FS_POS 17
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_PORTA_FS_SIZE 1

/*
 * "Control the edge type of interupt that occur on Port A. Whenever a 1 is
 * written it configures the edge interrupt type to be both rising and
 * falling edges of input signal.
 * It is single edge sensitive either one of rising or falling edge of
 * external input signal or level sensitive of external signal depending on
 * setting of registers gpio_inttype_level and gpio_int_polarity.
 * 0x0 (DISABLED): single edge sensitive
 * 0x1 (ENABLED): both edge sensitive"
 */
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_PORTA_DI_MASK 0x00040000
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_PORTA_DI_RESET_VAL 0x0
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_PORTA_DI_POS 18
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_PORTA_DI_SIZE 1

/*
 * "Control the edge type of interupt that occur on Port A. Whenever a 1 is
 * written it configures the edge interrupt type to be both rising and
 * falling edges of input signal.
 * It is single edge sensitive either one of rising or falling edge of
 * external input signal or level sensitive of external signal depending on
 * setting of registers gpio_inttype_level and gpio_int_polarity.
 * 0x0 (DISABLED): single edge sensitive
 * 0x1 (ENABLED): both edge sensitive"
 */
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_PORTA_DO_MASK 0x00080000
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_PORTA_DO_RESET_VAL 0x0
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_PORTA_DO_POS 19
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_PORTA_DO_SIZE 1

/*
 * "Control the edge type of interupt that occur on Port A. Whenever a 1 is
 * written it configures the edge interrupt type to be both rising and
 * falling edges of input signal.
 * It is single edge sensitive either one of rising or falling edge of
 * external input signal or level sensitive of external signal depending on
 * setting of registers gpio_inttype_level and gpio_int_polarity.
 * 0x0 (DISABLED): single edge sensitive
 * 0x1 (ENABLED): both edge sensitive"
 */
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_PORTB_CLK_MASK 0x00100000
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_PORTB_CLK_RESET_VAL 0x0
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_PORTB_CLK_POS 20
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_PORTB_CLK_SIZE 1

/*
 * "Control the edge type of interupt that occur on Port A. Whenever a 1 is
 * written it configures the edge interrupt type to be both rising and
 * falling edges of input signal.
 * It is single edge sensitive either one of rising or falling edge of
 * external input signal or level sensitive of external signal depending on
 * setting of registers gpio_inttype_level and gpio_int_polarity.
 * 0x0 (DISABLED): single edge sensitive
 * 0x1 (ENABLED): both edge sensitive"
 */
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_PORTB_FS_MASK 0x00200000
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_PORTB_FS_RESET_VAL 0x0
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_PORTB_FS_POS 21
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_PORTB_FS_SIZE 1

/*
 * "Control the edge type of interupt that occur on Port A. Whenever a 1 is
 * written it configures the edge interrupt type to be both rising and
 * falling edges of input signal.
 * It is single edge sensitive either one of rising or falling edge of
 * external input signal or level sensitive of external signal depending on
 * setting of registers gpio_inttype_level and gpio_int_polarity.
 * 0x0 (DISABLED): single edge sensitive
 * 0x1 (ENABLED): both edge sensitive"
 */
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_PORTB_DI_MASK 0x00400000
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_PORTB_DI_RESET_VAL 0x0
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_PORTB_DI_POS 22
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_PORTB_DI_SIZE 1

/*
 * "Control the edge type of interupt that occur on Port A. Whenever a 1 is
 * written it configures the edge interrupt type to be both rising and
 * falling edges of input signal.
 * It is single edge sensitive either one of rising or falling edge of
 * external input signal or level sensitive of external signal depending on
 * setting of registers gpio_inttype_level and gpio_int_polarity.
 * 0x0 (DISABLED): single edge sensitive
 * 0x1 (ENABLED): both edge sensitive"
 */
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_PORTB_DO_MASK 0x00800000
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_PORTB_DO_RESET_VAL 0x0
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_PORTB_DO_POS 23
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_PORTB_DO_SIZE 1

/*
 * "Control the edge type of interupt that occur on Port A. Whenever a 1 is
 * written it configures the edge interrupt type to be both rising and
 * falling edges of input signal.
 * It is single edge sensitive either one of rising or falling edge of
 * external input signal or level sensitive of external signal depending on
 * setting of registers gpio_inttype_level and gpio_int_polarity.
 * 0x0 (DISABLED): single edge sensitive
 * 0x1 (ENABLED): both edge sensitive"
 */
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_PORTC_CLK_MASK 0x01000000
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_PORTC_CLK_RESET_VAL 0x0
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_PORTC_CLK_POS 24
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_PORTC_CLK_SIZE 1

/*
 * "Control the edge type of interupt that occur on Port A. Whenever a 1 is
 * written it configures the edge interrupt type to be both rising and
 * falling edges of input signal.
 * It is single edge sensitive either one of rising or falling edge of
 * external input signal or level sensitive of external signal depending on
 * setting of registers gpio_inttype_level and gpio_int_polarity.
 * 0x0 (DISABLED): single edge sensitive
 * 0x1 (ENABLED): both edge sensitive"
 */
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_PORTC_FS_MASK 0x02000000
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_PORTC_FS_RESET_VAL 0x0
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_PORTC_FS_POS 25
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_PORTC_FS_SIZE 1

/*
 * "Control the edge type of interupt that occur on Port A. Whenever a 1 is
 * written it configures the edge interrupt type to be both rising and
 * falling edges of input signal.
 * It is single edge sensitive either one of rising or falling edge of
 * external input signal or level sensitive of external signal depending on
 * setting of registers gpio_inttype_level and gpio_int_polarity.
 * 0x0 (DISABLED): single edge sensitive
 * 0x1 (ENABLED): both edge sensitive"
 */
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_PORTC_DI_MASK 0x04000000
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_PORTC_DI_RESET_VAL 0x0
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_PORTC_DI_POS 26
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_PORTC_DI_SIZE 1

/*
 * "Control the edge type of interupt that occur on Port A. Whenever a 1 is
 * written it configures the edge interrupt type to be both rising and
 * falling edges of input signal.
 * It is single edge sensitive either one of rising or falling edge of
 * external input signal or level sensitive of external signal depending on
 * setting of registers gpio_inttype_level and gpio_int_polarity.
 * 0x0 (DISABLED): single edge sensitive
 * 0x1 (ENABLED): both edge sensitive"
 */
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_PORTC_DO_MASK 0x08000000
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_PORTC_DO_RESET_VAL 0x0
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_PORTC_DO_POS 27
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_PORTC_DO_SIZE 1

/*
 * "Control the edge type of interupt that occur on Port A. Whenever a 1 is
 * written it configures the edge interrupt type to be both rising and
 * falling edges of input signal.
 * It is single edge sensitive either one of rising or falling edge of
 * external input signal or level sensitive of external signal depending on
 * setting of registers gpio_inttype_level and gpio_int_polarity.
 * 0x0 (DISABLED): single edge sensitive
 * 0x1 (ENABLED): both edge sensitive"
 */
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_PORTD_CLK_MASK 0x10000000
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_PORTD_CLK_RESET_VAL 0x0
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_PORTD_CLK_POS 28
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_PORTD_CLK_SIZE 1

/*
 * "Control the edge type of interupt that occur on Port A. Whenever a 1 is
 * written it configures the edge interrupt type to be both rising and
 * falling edges of input signal.
 * It is single edge sensitive either one of rising or falling edge of
 * external input signal or level sensitive of external signal depending on
 * setting of registers gpio_inttype_level and gpio_int_polarity.
 * 0x0 (DISABLED): single edge sensitive
 * 0x1 (ENABLED): both edge sensitive"
 */
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_PORTD_FS_MASK 0x20000000
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_PORTD_FS_RESET_VAL 0x0
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_PORTD_FS_POS 29
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_PORTD_FS_SIZE 1

/*
 * "Control the edge type of interupt that occur on Port A. Whenever a 1 is
 * written it configures the edge interrupt type to be both rising and
 * falling edges of input signal.
 * It is single edge sensitive either one of rising or falling edge of
 * external input signal or level sensitive of external signal depending on
 * setting of registers gpio_inttype_level and gpio_int_polarity.
 * 0x0 (DISABLED): single edge sensitive
 * 0x1 (ENABLED): both edge sensitive"
 */
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_PORTD_DI_MASK 0x40000000
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_PORTD_DI_RESET_VAL 0x0
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_PORTD_DI_POS 30
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_PORTD_DI_SIZE 1

/*
 * "Control the edge type of interupt that occur on Port A. Whenever a 1 is
 * written it configures the edge interrupt type to be both rising and
 * falling edges of input signal.
 * It is single edge sensitive either one of rising or falling edge of
 * external input signal or level sensitive of external signal depending on
 * setting of registers gpio_inttype_level and gpio_int_polarity.
 * 0x0 (DISABLED): single edge sensitive
 * 0x1 (ENABLED): both edge sensitive"
 */
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_PORTD_DO_MASK 0x80000000
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_PORTD_DO_RESET_VAL 0x0
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_PORTD_DO_POS 31
#define IAXXX_GPIO_GPIO_INT_BOTHEDGE_PORTD_DO_SIZE 1

/*** GPIO_VER_ID (0x5001206c) ***/
/*
 */
#define IAXXX_GPIO_VER_ID_ADDR (0x5001206c)
#define IAXXX_GPIO_VER_ID_MASK_VAL 0xffffffff
#define IAXXX_GPIO_VER_ID_RMASK_VAL 0xffffffff
#define IAXXX_GPIO_VER_ID_WMASK_VAL 0x00000000
#define IAXXX_GPIO_VER_ID_RESET_VAL 0x3231312a

/*
 * This is a user specified code that a system can read. It can be used for
 * chip identification.
 */
#define IAXXX_GPIO_VER_ID_CODE_MASK 0xffffffff
#define IAXXX_GPIO_VER_ID_CODE_RESET_VAL 0x3231312a
#define IAXXX_GPIO_VER_ID_CODE_POS 0
#define IAXXX_GPIO_VER_ID_CODE_SIZE 32

/*** GPIO_GPIO_CONFIG_REG2 (0x50012070) ***/
/*
 */
#define IAXXX_GPIO_GPIO_CONFIG_REG2_ADDR (0x50012070)
#define IAXXX_GPIO_GPIO_CONFIG_REG2_MASK_VAL 0xffffffff
#define IAXXX_GPIO_GPIO_CONFIG_REG2_RMASK_VAL 0xffffffff
#define IAXXX_GPIO_GPIO_CONFIG_REG2_WMASK_VAL 0x00000000
#define IAXXX_GPIO_GPIO_CONFIG_REG2_RESET_VAL 0x00039f9f

/*
 * The value of this register is derived from the GPIO_PWIDTH_A configuration
 * parameter. 0x0 = 8 bits 0x1 = 16 bits 0x2 = 32 bits 0x3 = Reserved
 */
#define IAXXX_GPIO_GPIO_CONFIG_REG2_ENCODED_ID_PWIDTH_A_MASK 0x0000001f
#define IAXXX_GPIO_GPIO_CONFIG_REG2_ENCODED_ID_PWIDTH_A_RESET_VAL 0x1f
#define IAXXX_GPIO_GPIO_CONFIG_REG2_ENCODED_ID_PWIDTH_A_POS 0
#define IAXXX_GPIO_GPIO_CONFIG_REG2_ENCODED_ID_PWIDTH_A_SIZE 5

/*
 * The value of this register is derived from the GPIO_PWIDTH_B configuration
 * parameter. 0x0 = 8 bits 0x1 = 16 bits 0x2 = 32 bits 0x3 = Reserved
 */
#define IAXXX_GPIO_GPIO_CONFIG_REG2_ENCODED_ID_PWIDTH_B_MASK 0x000003e0
#define IAXXX_GPIO_GPIO_CONFIG_REG2_ENCODED_ID_PWIDTH_B_RESET_VAL 0x1c
#define IAXXX_GPIO_GPIO_CONFIG_REG2_ENCODED_ID_PWIDTH_B_POS 5
#define IAXXX_GPIO_GPIO_CONFIG_REG2_ENCODED_ID_PWIDTH_B_SIZE 5

/*
 * The value of this register is derived from the GPIO_PWIDTH_C configuration
 * parameter. 0x0 = 8 bits 0x1 = 16 bits 0x2 = 32 bits 0x3 = Reserved
 */
#define IAXXX_GPIO_GPIO_CONFIG_REG2_ENCODED_ID_PWIDTH_C_MASK 0x00007c00
#define IAXXX_GPIO_GPIO_CONFIG_REG2_ENCODED_ID_PWIDTH_C_RESET_VAL 0x7
#define IAXXX_GPIO_GPIO_CONFIG_REG2_ENCODED_ID_PWIDTH_C_POS 10
#define IAXXX_GPIO_GPIO_CONFIG_REG2_ENCODED_ID_PWIDTH_C_SIZE 5

/*
 * The value of this register is derived from the GPIO_PWIDTH_D configuration
 * parameter. 0x0 = 8 bits 0x1 = 16 bits 0x2 = 32 bits 0x3 = Reserved
 */
#define IAXXX_GPIO_GPIO_CONFIG_REG2_ENCODED_ID_PWIDTH_D_MASK 0x000f8000
#define IAXXX_GPIO_GPIO_CONFIG_REG2_ENCODED_ID_PWIDTH_D_RESET_VAL 0x7
#define IAXXX_GPIO_GPIO_CONFIG_REG2_ENCODED_ID_PWIDTH_D_POS 15
#define IAXXX_GPIO_GPIO_CONFIG_REG2_ENCODED_ID_PWIDTH_D_SIZE 5

/*
 * Reserved bits - Read Only
 */
#define IAXXX_GPIO_GPIO_CONFIG_REG2_RSVD_GPIO_CONFIG_REG2_MASK 0xfff00000
#define IAXXX_GPIO_GPIO_CONFIG_REG2_RSVD_GPIO_CONFIG_REG2_RESET_VAL 0x0
#define IAXXX_GPIO_GPIO_CONFIG_REG2_RSVD_GPIO_CONFIG_REG2_POS 20
#define IAXXX_GPIO_GPIO_CONFIG_REG2_RSVD_GPIO_CONFIG_REG2_SIZE 12

/*** GPIO_GPIO_CONFIG_REG1 (0x50012074) ***/
/*
 */
#define IAXXX_GPIO_GPIO_CONFIG_REG1_ADDR (0x50012074)
#define IAXXX_GPIO_GPIO_CONFIG_REG1_MASK_VAL 0x003fffff
#define IAXXX_GPIO_GPIO_CONFIG_REG1_RMASK_VAL 0x003fffff
#define IAXXX_GPIO_GPIO_CONFIG_REG1_WMASK_VAL 0x00000000
#define IAXXX_GPIO_GPIO_CONFIG_REG1_RESET_VAL 0x003f50f6

/*
 * 0x0 = 8bit
 *  0x1 = 16bits
 *  0x2 = 32bits
 */
#define IAXXX_GPIO_GPIO_CONFIG_REG1_APB_DATA_WIDTH_MASK 0x00000003
#define IAXXX_GPIO_GPIO_CONFIG_REG1_APB_DATA_WIDTH_RESET_VAL 0x2
#define IAXXX_GPIO_GPIO_CONFIG_REG1_APB_DATA_WIDTH_POS 0
#define IAXXX_GPIO_GPIO_CONFIG_REG1_APB_DATA_WIDTH_SIZE 2

/*
 * 0x0 = 1port
 *  0x1 = 2ports
 *  0x2 = 3ports
 *  0x3 = 4ports
 */
#define IAXXX_GPIO_GPIO_CONFIG_REG1_NUM_PORTS_MASK 0x0000000c
#define IAXXX_GPIO_GPIO_CONFIG_REG1_NUM_PORTS_RESET_VAL 0x1
#define IAXXX_GPIO_GPIO_CONFIG_REG1_NUM_PORTS_POS 2
#define IAXXX_GPIO_GPIO_CONFIG_REG1_NUM_PORTS_SIZE 2

/*
 * 0x0(DISABLED):Not controlled from a single source
 *  0x1(ENABLED):controlled from a single source
 */
#define IAXXX_GPIO_GPIO_CONFIG_REG1_PORTA_SINGLE_CTL_MASK 0x00000010
#define IAXXX_GPIO_GPIO_CONFIG_REG1_PORTA_SINGLE_CTL_RESET_VAL 0x1
#define IAXXX_GPIO_GPIO_CONFIG_REG1_PORTA_SINGLE_CTL_POS 4
#define IAXXX_GPIO_GPIO_CONFIG_REG1_PORTA_SINGLE_CTL_SIZE 1

/*
 * 0x0(DISABLED):Not controlled from a single source
 *  0x1(ENABLED):controlled from a single source
 */
#define IAXXX_GPIO_GPIO_CONFIG_REG1_PORTB_SINGLE_CTL_MASK 0x00000020
#define IAXXX_GPIO_GPIO_CONFIG_REG1_PORTB_SINGLE_CTL_RESET_VAL 0x1
#define IAXXX_GPIO_GPIO_CONFIG_REG1_PORTB_SINGLE_CTL_POS 5
#define IAXXX_GPIO_GPIO_CONFIG_REG1_PORTB_SINGLE_CTL_SIZE 1

/*
 * 0x0(DISABLED):Not controlled from a single source
 *  0x1(ENABLED):controlled from a single source
 */
#define IAXXX_GPIO_GPIO_CONFIG_REG1_PORTC_SINGLE_CTL_MASK 0x00000040
#define IAXXX_GPIO_GPIO_CONFIG_REG1_PORTC_SINGLE_CTL_RESET_VAL 0x1
#define IAXXX_GPIO_GPIO_CONFIG_REG1_PORTC_SINGLE_CTL_POS 6
#define IAXXX_GPIO_GPIO_CONFIG_REG1_PORTC_SINGLE_CTL_SIZE 1

/*
 * 0x0(DISABLED):Not controlled from a single source
 *  0x1(ENABLED):controlled from a single source
 */
#define IAXXX_GPIO_GPIO_CONFIG_REG1_PORTD_SINGLE_CTL_MASK 0x00000080
#define IAXXX_GPIO_GPIO_CONFIG_REG1_PORTD_SINGLE_CTL_RESET_VAL 0x1
#define IAXXX_GPIO_GPIO_CONFIG_REG1_PORTD_SINGLE_CTL_POS 7
#define IAXXX_GPIO_GPIO_CONFIG_REG1_PORTD_SINGLE_CTL_SIZE 1

/*
 * 0x0(DISABLED):HW signals excluded
 *  0x1(ENABLED):HW signals included
 */
#define IAXXX_GPIO_GPIO_CONFIG_REG1_HW_PORTA_MASK 0x00000100
#define IAXXX_GPIO_GPIO_CONFIG_REG1_HW_PORTA_RESET_VAL 0x0
#define IAXXX_GPIO_GPIO_CONFIG_REG1_HW_PORTA_POS 8
#define IAXXX_GPIO_GPIO_CONFIG_REG1_HW_PORTA_SIZE 1

/*
 * 0x0(DISABLED):HW signals excluded
 *  0x1(ENABLED):HW signals included
 */
#define IAXXX_GPIO_GPIO_CONFIG_REG1_HW_PORTB_MASK 0x00000200
#define IAXXX_GPIO_GPIO_CONFIG_REG1_HW_PORTB_RESET_VAL 0x0
#define IAXXX_GPIO_GPIO_CONFIG_REG1_HW_PORTB_POS 9
#define IAXXX_GPIO_GPIO_CONFIG_REG1_HW_PORTB_SIZE 1

/*
 * 0x0(DISABLED):HW signals excluded
 *  0x1(ENABLED):HW signals included
 */
#define IAXXX_GPIO_GPIO_CONFIG_REG1_HW_PORTC_MASK 0x00000400
#define IAXXX_GPIO_GPIO_CONFIG_REG1_HW_PORTC_RESET_VAL 0x0
#define IAXXX_GPIO_GPIO_CONFIG_REG1_HW_PORTC_POS 10
#define IAXXX_GPIO_GPIO_CONFIG_REG1_HW_PORTC_SIZE 1

/*
 * 0x0(DISABLED):HW signals excluded
 *  0x1(ENABLED):HW signals included
 */
#define IAXXX_GPIO_GPIO_CONFIG_REG1_HW_PORTD_MASK 0x00000800
#define IAXXX_GPIO_GPIO_CONFIG_REG1_HW_PORTD_RESET_VAL 0x0
#define IAXXX_GPIO_GPIO_CONFIG_REG1_HW_PORTD_POS 11
#define IAXXX_GPIO_GPIO_CONFIG_REG1_HW_PORTD_SIZE 1

/*
 * 0x0(DISABLED):Not an interrupt source
 *  0x1(ENABLED) is required to be used as an interrupt source
 */
#define IAXXX_GPIO_GPIO_CONFIG_REG1_PORTA_INTR_MASK 0x00001000
#define IAXXX_GPIO_GPIO_CONFIG_REG1_PORTA_INTR_RESET_VAL 0x1
#define IAXXX_GPIO_GPIO_CONFIG_REG1_PORTA_INTR_POS 12
#define IAXXX_GPIO_GPIO_CONFIG_REG1_PORTA_INTR_SIZE 1

/*
 * 0x0(DISABLED)
 *  0x1(ENABLED)
 */
#define IAXXX_GPIO_GPIO_CONFIG_REG1_DEBOUNCE_MASK 0x00002000
#define IAXXX_GPIO_GPIO_CONFIG_REG1_DEBOUNCE_RESET_VAL 0x0
#define IAXXX_GPIO_GPIO_CONFIG_REG1_DEBOUNCE_POS 13
#define IAXXX_GPIO_GPIO_CONFIG_REG1_DEBOUNCE_SIZE 1

/*
 * 0x0(DISABLED)
 *  0x1(ENABLED)
 */
#define IAXXX_GPIO_GPIO_CONFIG_REG1_ADD_ENCODED_PARAMS_MASK 0x00004000
#define IAXXX_GPIO_GPIO_CONFIG_REG1_ADD_ENCODED_PARAMS_RESET_VAL 0x1
#define IAXXX_GPIO_GPIO_CONFIG_REG1_ADD_ENCODED_PARAMS_POS 14
#define IAXXX_GPIO_GPIO_CONFIG_REG1_ADD_ENCODED_PARAMS_SIZE 1

/*
 * 0x0(DISABLED)
 *  0x1(ENABLED)
 */
#define IAXXX_GPIO_GPIO_CONFIG_REG1_GPIO_ID_MASK 0x00008000
#define IAXXX_GPIO_GPIO_CONFIG_REG1_GPIO_ID_RESET_VAL 0x0
#define IAXXX_GPIO_GPIO_CONFIG_REG1_GPIO_ID_POS 15
#define IAXXX_GPIO_GPIO_CONFIG_REG1_GPIO_ID_SIZE 1

/*
 * The value of this register is dervied from GPIO_ID_WIDTH configuration
 * parameter
 */
#define IAXXX_GPIO_GPIO_CONFIG_REG1_ENCODED_ID_WIDTH_MASK 0x001f0000
#define IAXXX_GPIO_GPIO_CONFIG_REG1_ENCODED_ID_WIDTH_RESET_VAL 0x1f
#define IAXXX_GPIO_GPIO_CONFIG_REG1_ENCODED_ID_WIDTH_POS 16
#define IAXXX_GPIO_GPIO_CONFIG_REG1_ENCODED_ID_WIDTH_SIZE 5

/*
 * 0x0(DISABLED)
 *  0x1(ENABLED)
 */
#define IAXXX_GPIO_GPIO_CONFIG_REG1_INTERRUPT_BOTH_EDGE_TYPE_MASK 0x00200000
#define IAXXX_GPIO_GPIO_CONFIG_REG1_INTERRUPT_BOTH_EDGE_TYPE_RESET_VAL 0x1
#define IAXXX_GPIO_GPIO_CONFIG_REG1_INTERRUPT_BOTH_EDGE_TYPE_POS 21
#define IAXXX_GPIO_GPIO_CONFIG_REG1_INTERRUPT_BOTH_EDGE_TYPE_SIZE 1

/* Number of registers in the module */
#define IAXXX_GPIO_REG_NUM 19

#endif /* __IAXXX_REGISTER_DEFS_GPIO_H__*/
