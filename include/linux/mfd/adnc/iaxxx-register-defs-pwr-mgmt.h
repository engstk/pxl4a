/*
 * iaxxx-register-defs-pwr-mgmt.h
 *
 * Copyright (c) 2018 Knowles, inc.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 and
 * only version 2 as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 */

/**********************************************************
 * This file is generated by running a format script
 * on header files shared by Firmware.
 *
 * DO NOT EDIT.
 *
 *********************************************************/

#ifndef __IAXXX_REGISTER_DEFS_PWR_MGMT_H__
#define __IAXXX_REGISTER_DEFS_PWR_MGMT_H__

/*** The base address for this set of registers ***/
#define IAXXX_PWR_MGMT_REGS_ADDR (0x0e000000)

/*** PWR_MGMT_MAX_I2C_SPEED (0x0e000000) ***/
/*
 * Max I2C speed supported.
 */
#define IAXXX_PWR_MGMT_MAX_I2C_SPEED_ADDR (0x0e000000)
#define IAXXX_PWR_MGMT_MAX_I2C_SPEED_MASK_VAL 0xffffffff
#define IAXXX_PWR_MGMT_MAX_I2C_SPEED_RMASK_VAL 0xffffffff
#define IAXXX_PWR_MGMT_MAX_I2C_SPEED_WMASK_VAL 0x00000000
#define IAXXX_PWR_MGMT_MAX_I2C_SPEED_RESET_VAL 0x00000000

/*
 * Maximum I2C speed supported at the given power level
 */
#define IAXXX_PWR_MGMT_MAX_I2C_SPEED_MAX_I2C_SPEED_MASK 0xffffffff
#define IAXXX_PWR_MGMT_MAX_I2C_SPEED_MAX_I2C_SPEED_RESET_VAL 0x0
#define IAXXX_PWR_MGMT_MAX_I2C_SPEED_MAX_I2C_SPEED_POS 0
#define IAXXX_PWR_MGMT_MAX_I2C_SPEED_MAX_I2C_SPEED_SIZE 32

/*** PWR_MGMT_MAX_SPI_SPEED (0x0e000004) ***/
/*
 * Max SPI Slave speed supported
 */
#define IAXXX_PWR_MGMT_MAX_SPI_SPEED_ADDR (0x0e000004)
#define IAXXX_PWR_MGMT_MAX_SPI_SPEED_MASK_VAL 0xffffffff
#define IAXXX_PWR_MGMT_MAX_SPI_SPEED_RMASK_VAL 0xffffffff
#define IAXXX_PWR_MGMT_MAX_SPI_SPEED_WMASK_VAL 0x00000000
#define IAXXX_PWR_MGMT_MAX_SPI_SPEED_RESET_VAL 0x00000000

/*
 * Maximum SPI Slave speed supported at the given power level
 */
#define IAXXX_PWR_MGMT_MAX_SPI_SPEED_MAX_SPI_SPEED_MASK 0xffffffff
#define IAXXX_PWR_MGMT_MAX_SPI_SPEED_MAX_SPI_SPEED_RESET_VAL 0x0
#define IAXXX_PWR_MGMT_MAX_SPI_SPEED_MAX_SPI_SPEED_POS 0
#define IAXXX_PWR_MGMT_MAX_SPI_SPEED_MAX_SPI_SPEED_SIZE 32

/*** PWR_MGMT_MAX_UART_BAUDRATE (0x0e000008) ***/
/*
 * Max UART baudrate supported
 */
#define IAXXX_PWR_MGMT_MAX_UART_BAUDRATE_ADDR (0x0e000008)
#define IAXXX_PWR_MGMT_MAX_UART_BAUDRATE_MASK_VAL 0xffffffff
#define IAXXX_PWR_MGMT_MAX_UART_BAUDRATE_RMASK_VAL 0xffffffff
#define IAXXX_PWR_MGMT_MAX_UART_BAUDRATE_WMASK_VAL 0x00000000
#define IAXXX_PWR_MGMT_MAX_UART_BAUDRATE_RESET_VAL 0x00000000

/*
 * Maximum UART baudrate supported at the given power level
 */
#define IAXXX_PWR_MGMT_MAX_UART_BAUDRATE_REG_MASK 0xffffffff
#define IAXXX_PWR_MGMT_MAX_UART_BAUDRATE_REG_RESET_VAL 0x0
#define IAXXX_PWR_MGMT_MAX_UART_BAUDRATE_REG_POS 0
#define IAXXX_PWR_MGMT_MAX_UART_BAUDRATE_REG_SIZE 32

/*** PWR_MGMT_MAX_I2C_SPEED_REQ (0x0e00000c) ***/
/*
 * Max I2C Speed request
 */
#define IAXXX_PWR_MGMT_MAX_I2C_SPEED_REQ_ADDR (0x0e00000c)
#define IAXXX_PWR_MGMT_MAX_I2C_SPEED_REQ_MASK_VAL 0xffffffff
#define IAXXX_PWR_MGMT_MAX_I2C_SPEED_REQ_RMASK_VAL 0xffffffff
#define IAXXX_PWR_MGMT_MAX_I2C_SPEED_REQ_WMASK_VAL 0xffffffff
#define IAXXX_PWR_MGMT_MAX_I2C_SPEED_REQ_RESET_VAL 0x00000000

/*
 * Maximum I2C speed requested by Host.
 */
#define IAXXX_PWR_MGMT_MAX_I2C_SPEED_REQ_REG_MASK 0xffffffff
#define IAXXX_PWR_MGMT_MAX_I2C_SPEED_REQ_REG_RESET_VAL 0x0
#define IAXXX_PWR_MGMT_MAX_I2C_SPEED_REQ_REG_POS 0
#define IAXXX_PWR_MGMT_MAX_I2C_SPEED_REQ_REG_SIZE 32

/*** PWR_MGMT_MAX_SPI_SPEED_REQ (0x0e000010) ***/
/*
 * Max SPI Slave speed request
 */
#define IAXXX_PWR_MGMT_MAX_SPI_SPEED_REQ_ADDR (0x0e000010)
#define IAXXX_PWR_MGMT_MAX_SPI_SPEED_REQ_MASK_VAL 0xffffffff
#define IAXXX_PWR_MGMT_MAX_SPI_SPEED_REQ_RMASK_VAL 0xffffffff
#define IAXXX_PWR_MGMT_MAX_SPI_SPEED_REQ_WMASK_VAL 0xffffffff
#define IAXXX_PWR_MGMT_MAX_SPI_SPEED_REQ_RESET_VAL 0x00000000

/*
 * Maximum SPI Slave speed requested by Host
 */
#define IAXXX_PWR_MGMT_MAX_SPI_SPEED_REQ_REG_MASK 0xffffffff
#define IAXXX_PWR_MGMT_MAX_SPI_SPEED_REQ_REG_RESET_VAL 0x0
#define IAXXX_PWR_MGMT_MAX_SPI_SPEED_REQ_REG_POS 0
#define IAXXX_PWR_MGMT_MAX_SPI_SPEED_REQ_REG_SIZE 32

/*** PWR_MGMT_MAX_UART_BAUDRATE_REQ (0x0e000014) ***/
/*
 * Max UART baudrate request
 */
#define IAXXX_PWR_MGMT_MAX_UART_BAUDRATE_REQ_ADDR (0x0e000014)
#define IAXXX_PWR_MGMT_MAX_UART_BAUDRATE_REQ_MASK_VAL 0xffffffff
#define IAXXX_PWR_MGMT_MAX_UART_BAUDRATE_REQ_RMASK_VAL 0xffffffff
#define IAXXX_PWR_MGMT_MAX_UART_BAUDRATE_REQ_WMASK_VAL 0xffffffff
#define IAXXX_PWR_MGMT_MAX_UART_BAUDRATE_REQ_RESET_VAL 0x00000000

/*
 * Maximum UART baudrate requested by Host
 */
#define IAXXX_PWR_MGMT_MAX_UART_BAUDRATE_REQ_REG_MASK 0xffffffff
#define IAXXX_PWR_MGMT_MAX_UART_BAUDRATE_REQ_REG_RESET_VAL 0x0
#define IAXXX_PWR_MGMT_MAX_UART_BAUDRATE_REQ_REG_POS 0
#define IAXXX_PWR_MGMT_MAX_UART_BAUDRATE_REQ_REG_SIZE 32

/*** PWR_MGMT_SYS_CLK_CTRL (0x0e000018) ***/
/*
 * Clock Source selection for APLL, X_CLK, A_CLK. Clock Scaling for Internal
 * Oscillator, APLL.
 */
#define IAXXX_PWR_MGMT_SYS_CLK_CTRL_ADDR (0x0e000018)
#define IAXXX_PWR_MGMT_SYS_CLK_CTRL_MASK_VAL 0x00001fff
#define IAXXX_PWR_MGMT_SYS_CLK_CTRL_RMASK_VAL 0x00001fff
#define IAXXX_PWR_MGMT_SYS_CLK_CTRL_WMASK_VAL 0x00001ffe
#define IAXXX_PWR_MGMT_SYS_CLK_CTRL_RESET_VAL 0x00000000

/*
 * Internal Oscillator Disable status
 * 0 - Internal Oscillator Enabled
 * 1 - Internal Oscillator Disabled
 */
#define IAXXX_PWR_MGMT_SYS_CLK_CTRL_INT_OSC_DIS_MASK 0x00000001
#define IAXXX_PWR_MGMT_SYS_CLK_CTRL_INT_OSC_DIS_RESET_VAL 0x0
#define IAXXX_PWR_MGMT_SYS_CLK_CTRL_INT_OSC_DIS_POS 0
#define IAXXX_PWR_MGMT_SYS_CLK_CTRL_INT_OSC_DIS_SIZE 1

/*
 * Selects APLL Source
 * 0 - System Clock
 * 1 - 8 - RESERVED
 * 9 - Internal Oscillator
 * 10 - RESERVED
 * 11 - External Clock
 * otherwise - Invalid
 */
#define IAXXX_PWR_MGMT_SYS_CLK_CTRL_APLL_SRC_MASK 0x0000001e
#define IAXXX_PWR_MGMT_SYS_CLK_CTRL_APLL_SRC_RESET_VAL 0x0
#define IAXXX_PWR_MGMT_SYS_CLK_CTRL_APLL_SRC_POS 1
#define IAXXX_PWR_MGMT_SYS_CLK_CTRL_APLL_SRC_SIZE 4

/*
 * Selects APLL Output frequency
 * 0 - 3.072 MHz
 * 1 - 6.144 MHz
 * 2 - 12.288 MHz
 * 3 - 24.576 MHz
 * 4 - 49.152 MHz
 * 5 - 98.304 MHz
 * 6 - 368.640 MHz
 * otherwise - Invalid
 */
#define IAXXX_PWR_MGMT_SYS_CLK_CTRL_APLL_OUT_FREQ_MASK 0x000001e0
#define IAXXX_PWR_MGMT_SYS_CLK_CTRL_APLL_OUT_FREQ_RESET_VAL 0x0
#define IAXXX_PWR_MGMT_SYS_CLK_CTRL_APLL_OUT_FREQ_POS 5
#define IAXXX_PWR_MGMT_SYS_CLK_CTRL_APLL_OUT_FREQ_SIZE 4

/*
 * Selects MPLL Source
 * 0 - System Clock
 * 1 - 8 - RESERVED
 * 9 - Internal Oscillator
 * 10 - RESERVED
 * 11 - External Clock
 * otherwise - Invalid
 */
#define IAXXX_PWR_MGMT_SYS_CLK_CTRL_MPLL_SRC_MASK 0x00001e00
#define IAXXX_PWR_MGMT_SYS_CLK_CTRL_MPLL_SRC_RESET_VAL 0x0
#define IAXXX_PWR_MGMT_SYS_CLK_CTRL_MPLL_SRC_POS 9
#define IAXXX_PWR_MGMT_SYS_CLK_CTRL_MPLL_SRC_SIZE 4

/*** PWR_MGMT_MAX_I2C_SPEED_REQ_1 (0x0e00001c) ***/
/*
 * Max I2C Speed request from the second Host
 */
#define IAXXX_PWR_MGMT_MAX_I2C_SPEED_REQ_1_ADDR (0x0e00001c)
#define IAXXX_PWR_MGMT_MAX_I2C_SPEED_REQ_1_MASK_VAL 0xffffffff
#define IAXXX_PWR_MGMT_MAX_I2C_SPEED_REQ_1_RMASK_VAL 0xffffffff
#define IAXXX_PWR_MGMT_MAX_I2C_SPEED_REQ_1_WMASK_VAL 0xffffffff
#define IAXXX_PWR_MGMT_MAX_I2C_SPEED_REQ_1_RESET_VAL 0x00000000

/*
 * Maximum I2C speed requested by second Host.
 */
#define IAXXX_PWR_MGMT_MAX_I2C_SPEED_REQ_1_REG_MASK 0xffffffff
#define IAXXX_PWR_MGMT_MAX_I2C_SPEED_REQ_1_REG_RESET_VAL 0x0
#define IAXXX_PWR_MGMT_MAX_I2C_SPEED_REQ_1_REG_POS 0
#define IAXXX_PWR_MGMT_MAX_I2C_SPEED_REQ_1_REG_SIZE 32

/*** PWR_MGMT_MAX_SPI_SPEED_REQ_1 (0x0e000020) ***/
/*
 * Max SPI speed request from the second Host
 */
#define IAXXX_PWR_MGMT_MAX_SPI_SPEED_REQ_1_ADDR (0x0e000020)
#define IAXXX_PWR_MGMT_MAX_SPI_SPEED_REQ_1_MASK_VAL 0xffffffff
#define IAXXX_PWR_MGMT_MAX_SPI_SPEED_REQ_1_RMASK_VAL 0xffffffff
#define IAXXX_PWR_MGMT_MAX_SPI_SPEED_REQ_1_WMASK_VAL 0xffffffff
#define IAXXX_PWR_MGMT_MAX_SPI_SPEED_REQ_1_RESET_VAL 0x00000000

/*
 * Maximum SPI speed requested by second Host
 */
#define IAXXX_PWR_MGMT_MAX_SPI_SPEED_REQ_1_REG_MASK 0xffffffff
#define IAXXX_PWR_MGMT_MAX_SPI_SPEED_REQ_1_REG_RESET_VAL 0x0
#define IAXXX_PWR_MGMT_MAX_SPI_SPEED_REQ_1_REG_POS 0
#define IAXXX_PWR_MGMT_MAX_SPI_SPEED_REQ_1_REG_SIZE 32

/*** PWR_MGMT_MAX_UART_BAUDRATE_REQ_1 (0x0e000024) ***/
/*
 * Max UART baudrate request from the second Host
 */
#define IAXXX_PWR_MGMT_MAX_UART_BAUDRATE_REQ_1_ADDR (0x0e000024)
#define IAXXX_PWR_MGMT_MAX_UART_BAUDRATE_REQ_1_MASK_VAL 0xffffffff
#define IAXXX_PWR_MGMT_MAX_UART_BAUDRATE_REQ_1_RMASK_VAL 0xffffffff
#define IAXXX_PWR_MGMT_MAX_UART_BAUDRATE_REQ_1_WMASK_VAL 0xffffffff
#define IAXXX_PWR_MGMT_MAX_UART_BAUDRATE_REQ_1_RESET_VAL 0x00000000

/*
 * Maximum UART baudrate requested by second Host
 */
#define IAXXX_PWR_MGMT_MAX_UART_BAUDRATE_REQ_1_REG_MASK 0xffffffff
#define IAXXX_PWR_MGMT_MAX_UART_BAUDRATE_REQ_1_REG_RESET_VAL 0x0
#define IAXXX_PWR_MGMT_MAX_UART_BAUDRATE_REQ_1_REG_POS 0
#define IAXXX_PWR_MGMT_MAX_UART_BAUDRATE_REQ_1_REG_SIZE 32

/*** PWR_MGMT_PWR_MGMT_STATS_PTR (0x0e000028) ***/
/*
 * Pointer to power management statistics
 */
#define IAXXX_PWR_MGMT_PWR_MGMT_STATS_PTR_ADDR (0x0e000028)
#define IAXXX_PWR_MGMT_PWR_MGMT_STATS_PTR_MASK_VAL 0xffffffff
#define IAXXX_PWR_MGMT_PWR_MGMT_STATS_PTR_RMASK_VAL 0xffffffff
#define IAXXX_PWR_MGMT_PWR_MGMT_STATS_PTR_WMASK_VAL 0x00000000
#define IAXXX_PWR_MGMT_PWR_MGMT_STATS_PTR_RESET_VAL 0x00000000

/*
 * Pointer to power management statistics
 */
#define IAXXX_PWR_MGMT_PWR_MGMT_STATS_PTR_REG_MASK 0xffffffff
#define IAXXX_PWR_MGMT_PWR_MGMT_STATS_PTR_REG_RESET_VAL 0x0
#define IAXXX_PWR_MGMT_PWR_MGMT_STATS_PTR_REG_POS 0
#define IAXXX_PWR_MGMT_PWR_MGMT_STATS_PTR_REG_SIZE 32

/*** PWR_MGMT_PWR_MGMT_STATS_SIZE (0x0e00002c) ***/
/*
 * Size of power management statistics in words
 */
#define IAXXX_PWR_MGMT_PWR_MGMT_STATS_SIZE_ADDR (0x0e00002c)
#define IAXXX_PWR_MGMT_PWR_MGMT_STATS_SIZE_MASK_VAL 0xffffffff
#define IAXXX_PWR_MGMT_PWR_MGMT_STATS_SIZE_RMASK_VAL 0xffffffff
#define IAXXX_PWR_MGMT_PWR_MGMT_STATS_SIZE_WMASK_VAL 0x00000000
#define IAXXX_PWR_MGMT_PWR_MGMT_STATS_SIZE_RESET_VAL 0x00000000

/*
 * Size of power management statistics in words
 */
#define IAXXX_PWR_MGMT_PWR_MGMT_STATS_SIZE_REG_MASK 0xffffffff
#define IAXXX_PWR_MGMT_PWR_MGMT_STATS_SIZE_REG_RESET_VAL 0x0
#define IAXXX_PWR_MGMT_PWR_MGMT_STATS_SIZE_REG_POS 0
#define IAXXX_PWR_MGMT_PWR_MGMT_STATS_SIZE_REG_SIZE 32

/*** PWR_MGMT_EFUSE_BOOT_0 (0x0e000030) ***/
/*
 * The EFUSE_BOOT0 register mirrors the contents of the eFuse byte0 - byte3
 * which is programmed during the manufacturing test process. These are
 * mirrored during Power Manager Initialization.
 */
#define IAXXX_PWR_MGMT_EFUSE_BOOT_0_ADDR (0x0e000030)
#define IAXXX_PWR_MGMT_EFUSE_BOOT_0_MASK_VAL 0xffffffff
#define IAXXX_PWR_MGMT_EFUSE_BOOT_0_RMASK_VAL 0xffffffff
#define IAXXX_PWR_MGMT_EFUSE_BOOT_0_WMASK_VAL 0x00000000
#define IAXXX_PWR_MGMT_EFUSE_BOOT_0_RESET_VAL 0x00000000

/*
 * Package configuration information. Value of EFUSE[0][3:0]
 * It gives 16 different package options for the die. Current associations:
 *  0: Athletico IA8508AB 112-ball BGA package
 *  1: Athletico IA8508AC 105-ball eWLB package
 *  2: Athletico IA8508AQ 88-lead QFN package
 */
#define IAXXX_PWR_MGMT_EFUSE_BOOT_0_PKG_CFG_MASK 0x0000000f
#define IAXXX_PWR_MGMT_EFUSE_BOOT_0_PKG_CFG_RESET_VAL 0x0
#define IAXXX_PWR_MGMT_EFUSE_BOOT_0_PKG_CFG_POS 0
#define IAXXX_PWR_MGMT_EFUSE_BOOT_0_PKG_CFG_SIZE 4

/*
 * ROM revision number. Value of EFUSE[0][7:4]
 * Revision code read from address in the instruction ROM at reset.
 */
#define IAXXX_PWR_MGMT_EFUSE_BOOT_0_ROM_REV_MASK 0x000000f0
#define IAXXX_PWR_MGMT_EFUSE_BOOT_0_ROM_REV_RESET_VAL 0x0
#define IAXXX_PWR_MGMT_EFUSE_BOOT_0_ROM_REV_POS 4
#define IAXXX_PWR_MGMT_EFUSE_BOOT_0_ROM_REV_SIZE 4

/*
 * Layout revision number. Value of EFUSE[1][3:0]
 * Die layout revision, incremented for each mask update after initial
 * tapeout. Not incremented for ROM metal changes. Incremented for metal
 * changes to non-ROM parts of the die.
 *   0x0: First revision.
 */
#define IAXXX_PWR_MGMT_EFUSE_BOOT_0_LAYOUT_REV_MASK 0x00000f00
#define IAXXX_PWR_MGMT_EFUSE_BOOT_0_LAYOUT_REV_RESET_VAL 0x0
#define IAXXX_PWR_MGMT_EFUSE_BOOT_0_LAYOUT_REV_POS 8
#define IAXXX_PWR_MGMT_EFUSE_BOOT_0_LAYOUT_REV_SIZE 4

/*
 * Manufacturing information. Value of
 * {EFUSE[3][7:0],EFUSE[2][7:0],EFUSE[1][7:4]}
 * [15:12] (EFUSE[1][7:4]):
 *   0: Normal SBL boot (check all four interfaces)
 *   1: Check I2C0
 *   2: Check SPI1
 *   4: Check UART0
 *   8: Check SLIMbus
 *   F: Check all (same as 0)
 * [16] (EFUSE[2][0]):
 *   0: HMD HiFi 3 enabled
 *   1: HMD HiFi 3 disabled
 * [17] (EFUSE[2][1]):
 *   0: Int OSC TRIM not programmed
 *   1: Int OSC TRIM programmed
 * [18] (EFUSE[2][2]):
 *   0: JTAG Enabled
 *   1: JTAG Disabled
 * [19] (EFUSE[2][3]):
 *   RESERVED
 * [20] (EFUSE[2][4]):
 *   0: CM4 enabled
 *   1: CM4 disabled
 * [21] (EFUSE[2][5]):
 *   0: HMD enabled
 *   1: HMD disabled
 * [22] (EFUSE[2][6]):
 *   0: DMX enabled
 *   1: DMX disabled
 * [24:23] (EFUSE[3][0], EFUSE[2][7]):
 *   0: Dont boot from flash
 *   1: Boot from external flash
 *   2: Invalid
 *   3: Dont boot from flash
 * [31:25] (EFUSE[3][7:1]):
 *   Oscillator calibration
 */
#define IAXXX_PWR_MGMT_EFUSE_BOOT_0_MFG_MASK 0xfffff000
#define IAXXX_PWR_MGMT_EFUSE_BOOT_0_MFG_RESET_VAL 0x0
#define IAXXX_PWR_MGMT_EFUSE_BOOT_0_MFG_POS 12
#define IAXXX_PWR_MGMT_EFUSE_BOOT_0_MFG_SIZE 20

/*** PWR_MGMT_EFUSE_BOOT_1 (0x0e000034) ***/
/*
 * The EFUSE_BOOT1 register mirrors the contents of the eFuse byte4 - byte5
 * which is programmed during the manufacturing test process. These are
 * mirrored during Power Manager Initialization.
 */
#define IAXXX_PWR_MGMT_EFUSE_BOOT_1_ADDR (0x0e000034)
#define IAXXX_PWR_MGMT_EFUSE_BOOT_1_MASK_VAL 0x0000778f
#define IAXXX_PWR_MGMT_EFUSE_BOOT_1_RMASK_VAL 0x0000778f
#define IAXXX_PWR_MGMT_EFUSE_BOOT_1_WMASK_VAL 0x00000000
#define IAXXX_PWR_MGMT_EFUSE_BOOT_1_RESET_VAL 0x00000000

/*
 * LDO BG trim value, value to be copied to PWRC:BG.TRIM[3:0] register field
 * if eFuse LDO_BG_PG is set to 1
 */
#define IAXXX_PWR_MGMT_EFUSE_BOOT_1_LDO_BG_TRIM_DATA_MASK 0x0000000f
#define IAXXX_PWR_MGMT_EFUSE_BOOT_1_LDO_BG_TRIM_DATA_RESET_VAL 0x0
#define IAXXX_PWR_MGMT_EFUSE_BOOT_1_LDO_BG_TRIM_DATA_POS 0
#define IAXXX_PWR_MGMT_EFUSE_BOOT_1_LDO_BG_TRIM_DATA_SIZE 4

/*
 * LDO Bandgap trim programming status:
 *   0: LDO_BG_TRIM_DATA, LDO_0_TRIM_DATA, and LDO_1_TRIM_DATA fields are not
 * valid, no further action to be taken
 *   1: LDO_BG_TRIM_DATA is valid and Software should copy it to the register
 * PWRC:AUD_BG[8:5].P4REF_TRIM[3:0];
 * LDO_0_TRIM_DATA is valid and Software should copy it to the register
 * PWRC:LDO_0[3:1].VOLTAGE_CALIBRATION[2:0];
 * LDO_1_TRIM_DATA is valid and Software should copy it to the register
 * PWRC:LDO_1[3:1].VOLTAGE_CALIBRATION[2:0].
 */
#define IAXXX_PWR_MGMT_EFUSE_BOOT_1_LDO_BG_TRIM_PG_MASK 0x00000080
#define IAXXX_PWR_MGMT_EFUSE_BOOT_1_LDO_BG_TRIM_PG_RESET_VAL 0x0
#define IAXXX_PWR_MGMT_EFUSE_BOOT_1_LDO_BG_TRIM_PG_POS 7
#define IAXXX_PWR_MGMT_EFUSE_BOOT_1_LDO_BG_TRIM_PG_SIZE 1

/*
 * LDO 0 trim value, value to be copied to
 * PWRC:LDO_0[3:1].VOLTAGE_CALIBRATION[2:0] register
 * if eFuse LDO_BG_PG is set to 1.
 */
#define IAXXX_PWR_MGMT_EFUSE_BOOT_1_LDO_0_TRIM_DATA_MASK 0x00000700
#define IAXXX_PWR_MGMT_EFUSE_BOOT_1_LDO_0_TRIM_DATA_RESET_VAL 0x0
#define IAXXX_PWR_MGMT_EFUSE_BOOT_1_LDO_0_TRIM_DATA_POS 8
#define IAXXX_PWR_MGMT_EFUSE_BOOT_1_LDO_0_TRIM_DATA_SIZE 3

/*
 * LDO 1 trim value, value to be copied to
 * PWRC:LDO_1[3:1].VOLTAGE_CALIBRATION[2:0] register
 * if eFuse LDO_BG_PG is set to 1.
 */
#define IAXXX_PWR_MGMT_EFUSE_BOOT_1_LDO_1_TRIM_DATA_MASK 0x00007000
#define IAXXX_PWR_MGMT_EFUSE_BOOT_1_LDO_1_TRIM_DATA_RESET_VAL 0x0
#define IAXXX_PWR_MGMT_EFUSE_BOOT_1_LDO_1_TRIM_DATA_POS 12
#define IAXXX_PWR_MGMT_EFUSE_BOOT_1_LDO_1_TRIM_DATA_SIZE 3

/*** PWR_MGMT_PWR_MGMT_STATS_CTRL (0x0e000038) ***/
/*
 * power management statistics control
 */
#define IAXXX_PWR_MGMT_PWR_MGMT_STATS_CTRL_ADDR 0x0e000038
#define IAXXX_PWR_MGMT_PWR_MGMT_STATS_CTRL_MASK_VAL 0x00000001
#define IAXXX_PWR_MGMT_PWR_MGMT_STATS_CTRL_RMASK_VAL 0x00000001
#define IAXXX_PWR_MGMT_PWR_MGMT_STATS_CTRL_WMASK_VAL 0x00000001
#define IAXXX_PWR_MGMT_PWR_MGMT_STATS_CTRL_RESET_VAL 0x00000000

/*
 * Host sets to request a power management statistics update
 */
#define IAXXX_PWR_MGMT_PWR_MGMT_STATS_CTRL_REQ_MASK 0x00000001
#define IAXXX_PWR_MGMT_PWR_MGMT_STATS_CTRL_REQ_RESET_VAL 0x0
#define IAXXX_PWR_MGMT_PWR_MGMT_STATS_CTRL_REQ_POS 0
#define IAXXX_PWR_MGMT_PWR_MGMT_STATS_CTRL_REQ_SIZE 1

/* Number of registers in the module */
#define IAXXX_PWR_MGMT_REG_NUM 15

#endif /* __IAXXX_REGISTER_DEFS_PWR_MGMT_H__ */
